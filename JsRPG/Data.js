function obtenir_carte(carte_id) {
    let carte = {
        id: carte_id,
        verrouillage: false,
        etage_mort: 0,
        exclusif: false,
        cache: false,
        camp: "",
        zone: "",
        slot: 0,
        nom: "",
        type: "Créature",
        familles: [],
        elements: [],
        cout: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        vente: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        attaque: 0,
        defense: 0,
        vie: 0,
        vie_max: 0,
        vie_sup: 0,
        action: 0,
        action_max: 0,
        percee: 0,
        protection: false,
        rapidite: false,
        vol_de_vie: 0,
        mobile: false,
        sorcellerie: 0,
        portee: false,
        eternite: false,
        letalite: false,
        epine: 0,
        regeneration: 0,
        poison: 0,
        brulure: 0,
        contamination: 0,
        resistance: 0,
        ephemere: false,
        temporaire: false,
        compteur: 0,
        camouflage: false,
        gel: 0,
        etourdissement: false,
        saignement: 0,
        silence: false,
        esquive: false,
        erosion: 0,
        charge: false,
        texte: function () {
            return "Aucun";
        },
        description: "...",
        effet_pose: function () {
            deplacer(carte, carte.camp, "terrain");
            effet_pose(carte);
            actualiser_zone();
            return true;
        },
        effet_pose_carte: function () { },
        effet_ajouter: function () { },
        effet_enlever: function () { },
        effet_action: function () { },
        effet_attaque: function () { },
        effet_be_attaque: function () { },
        effet_mort: function () {
            if (statistique(carte, "ephemere") && !statistique(carte, "silence")) {
                enlever(carte);
            }
            else {
                deplacer(carte, carte.camp, "defausse");
            }
        },
        effet_mort_carte: function () { },
        effet_tour_debut: function () { },
        effet_degat: function () { },
        effet_tuer: function () { },
        effet_soin: function () { },
        effet_soin_carte: function () { },
        effet_equiper: function () { },
        effet_compteur: function () { },
        effet_vente: function () { },
        effet_vente_carte: function () { },
        effet_etage_debut: function () { },
        effet_etage_fin: function () { },
        boutique_generer: function () { },
        equipements: [],
        equipement_max: 0
    }
    if (carte_id > 0) {
        carte.stat_etage = obtenir_carte(0);
        carte.stat_tour = obtenir_carte(0);
        carte.stat_equipement = obtenir_carte(0);
    }
    switch (carte_id) {
        case 1:
            carte.nom = "Humain";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.description = "Les humains ne sont affiliés à aucun des 12 éléments mais se sont servis de cette neutralité pour explorer le monde et s'implanter sur tous les continents.";
            break;
        case 2:
            carte.nom = "Plastron de cuir";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.stat_equipement.vie_max = 4;
            carte.texte = function () {
                return "Donne 4 vie max à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div></div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 3:
            carte.nom = "Potion de soin";
            carte.type = "Objet";
            carte.familles.push("Potion");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Soigne 3 à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_soin_creature("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée blessée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie < Jeu.joueur.terrain[n].vie_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            soin(Jeu.joueur.terrain[cible], 3);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_soin_creature("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].vie >= Jeu.adverse.terrain[best].vie_max) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if ((Jeu.adverse.terrain[n].vie_max - Jeu.adverse.terrain[n].vie) > (Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie) && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        soin(Jeu.adverse.terrain[best], 3);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            carte.description = "Une petite fiole contenant un liquide rouge, à consomner pour se soigner d'éventuelles blessures.";
            break;
        case 4:
            carte.nom = "Épée de cuivre";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.stat_equipement.attaque = 4;
            carte.texte = function () {
                return "Donne 4 attaque à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 5:
            carte.nom = "Araignée";
            define_creature(carte);
            carte.familles.push("Araignée");
            carte.cout[9] = 1;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 1;
            break;
        case 6:
            carte.nom = "Géant";
            define_creature(carte);
            carte.familles.push("Géant");
            carte.cout[0] = 39;
            carte.vente[0] = 19;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.description = "Bien que semblables aux humains dans leur neutralité élémentaire, les géants rencontrent des difficultés à voyager à cause de leurs tailles imposantes.";
            break;
        case 7:
            carte.nom = "Forgeron";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Pioche 1 Objet Équipement.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let verifier = false;
                        for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                            if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Objet" && obtenir_carte(n).familles.includes("Équipement")) {
                                verifier = true;
                            }
                        }
                        if (verifier) {
                            let nouvelle_carte = boutique_generer();
                            while (nouvelle_carte.type != "Objet" || !nouvelle_carte.familles.includes("Équipement")) {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 8:
            carte.nom = "Roi";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 65;
            carte.vente[0] = 32;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 2 attaque et 2 vie à toutes les Créatures alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            Jeu[carte.camp].terrain[n].attaque += 2;
                            Jeu[carte.camp].terrain[n].vie_max += 2;
                            Jeu[carte.camp].terrain[n].vie += 2;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 9:
            carte.nom = "Dragon";
            define_creature(carte);
            carte.familles.push("Reptile", "Dragon");
            carte.cout[0] = 19;
            carte.cout[1] = 10;
            carte.cout[5] = 10;
            carte.vente[0] = 9;
            carte.vente[1] = 5;
            carte.vente[5] = 5;
            carte.attaque = 18;
            carte.vie_max = carte.vie = 18;
            carte.texte = function () {
                return "Quand posé : Inflige 4 dégâts à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain") && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            degats(Jeu.adverse.terrain[cible], 4);
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain") && !statistique(carte, "silence")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if ((Jeu.joueur.terrain[n].vie <= 4 && Jeu.joueur.terrain[best].vie > 4) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[best], 4);
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            carte.description = "De grands reptiles rouges aux larges ailes, les dragons dominent les sommets volcaniques chassant tout ce qui est à leur portée, rampant comme volant.";
            break;
        case 10:
            carte.nom = "Prêtre";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Soigne 3 à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_soin_creature("joueur") && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée blessée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie < Jeu.joueur.terrain[n].vie_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            soin(Jeu.joueur.terrain[cible], 3);
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_soin_creature("adverse") && !statistique(carte, "silence")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].vie >= Jeu.adverse.terrain[best].vie_max) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if ((Jeu.adverse.terrain[n].vie_max - Jeu.adverse.terrain[n].vie) > (Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie) && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        soin(Jeu.adverse.terrain[best], 3);
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 11:
            carte.nom = "Marchand";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 Or max.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[0].max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            carte.description = "L'implantation des humains sur un grand nombre de continent leur a permis de devenir les leaders du commerce et de réguler l'économie.";
            break;
        case 12:
            carte.nom = "Garde";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 7;
            carte.vente[0] = 3;
            carte.attaque = 3;
            carte.defense = 1;
            carte.vie_max = carte.vie = 3;
            carte.description = "Les jeunes soldats passent leurs premières années à surveiller les villes et villages afin d'acquérir une expérience suffisante pour partir au front.";
            break;
        case 13:
            carte.nom = "Squelette";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Squelette");
            carte.cout[0] = 2;
            carte.cout[9] = 1;
            carte.vente[0] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 1;
            carte.description = "Simple amas d'os manipulé, ils sont totalement dépourvus d'intelligence.";
            break;
        case 14:
            carte.nom = "Nécromancien";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Revenant");
            carte.cout[0] = 9;
            carte.cout[9] = 8;
            carte.vente[0] = 4;
            carte.vente[9] = 4;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand joue : Crée " + effet_carte_voir_id(13, carte) + " sur le terrain.";
            }
            carte.effet_action = function () {
                let nouvelle_carte = obtenir_carte(13);
                nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                ajouter(nouvelle_carte, carte.camp, "terrain");
            }
            carte.description = "La faible masse des squelettes permet aux revenants de les utiliser comme esclave pour des tâches basiques.";
            break;
        case 15:
            carte.nom = "Roi des élements";
            define_creature(carte);
            carte.familles.push("Reptile", "Hydre");
            carte.cout = [0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10];
            carte.vente = [0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];
            carte.attaque = 30;
            carte.vie_max = carte.vie = 30;
            carte.action_max = 5;
            carte.regeneration = 5;
            carte.percee = 10;
            carte.charge = true;
            carte.description = "Une hydre légendaire dont chacune de ses 12 têtes maîtrise un élément, lui permettant de contrôler tout son envionnement comme bon lui semble.";
            break;
        case 16:
            carte.nom = "Bombe";
            carte.type = "Objet";
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Inflige 5 dégâts à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            degats(Jeu.adverse.terrain[cible], 5);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if ((Jeu.joueur.terrain[n].vie <= 5 && Jeu.joueur.terrain[best].vie > 5) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[best], 5);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 17:
            carte.nom = "Pluie de flèche";
            carte.type = "Action";
            carte.cout[0] = 10;
            carte.vente[0] = 5;
            carte.texte = function () {
                return "Inflige 1 dégât à toutes les Unités adverses sur le terrain.";
            }
            carte.effet_pose = function () {
                if (Jeu[camp_oppose(carte.camp)].terrain.length > 0) {
                    let array = [];
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                        array.push(Jeu[camp_oppose(carte.camp)].terrain[n]);
                    }
                    for (let n = 0; n < array.length; n++) {
                        degats(array[n], 1);
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 18:
            carte.nom = "Lancier";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 3;
            carte.percee = 2;
            break;
        case 19:
            carte.nom = "Cheval";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.rapidite = true;
            break;
        case 20:
            carte.nom = "Gardien";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 9;
            carte.vente[0] = 4;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 5;
            carte.protection = true;
            break;
        case 21:
            carte.nom = "Vampire";
            define_creature(carte);
            carte.familles.push("Vampire");
            carte.cout[0] = 20;
            carte.cout[11] = 19;
            carte.vente[0] = 5;
            carte.vente[11] = 4;
            carte.attaque = 15;
            carte.vie_max = carte.vie = 15;
            carte.vol_de_vie = 5;
            carte.description = "Habitués à vivre la nuit, les vampires ont dévelloppés la capacité de voler le sang de leurs proies pour ne pas les réveiller dans leur sommeil et sans les tuer.";
            break;
        case 22:
            carte.nom = "Automate embarqué";
            define_creature(carte);
            carte.familles.push("Machine", "Automate");
            carte.cout[0] = 5;
            carte.cout[7] = 5;
            carte.vente[0] = 3;
            carte.vente[7] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand meurt : Crée " + effet_carte_voir_id(23, carte) + " sur le terrain.";
            }
            carte.effet_mort = function () {
                if (!statistique(carte, "silence")) {
                    let nouvelle_carte = obtenir_carte(23);
                    nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    ajouter(nouvelle_carte, carte.camp, carte.zone);
                }
                if (statistique(carte, "ephemere") && !statistique(carte, "silence")) {
                    enlever(carte);
                }
                else {
                    deplacer(carte, carte.camp, "defausse");
                }
            }
            carte.description = "Cet automate est conçu pour en transporter un autre plus petit sur son dos.";
            break;
        case 23:
            carte.nom = "Automate";
            define_creature(carte);
            carte.familles.push("Machine", "Automate");
            carte.cout[0] = 3;
            carte.cout[7] = 2;
            carte.vente[0] = 1;
            carte.vente[7] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.description = "Les gnomes ne pouvant effectuer des tâches particulièrement physique, ils ont préférés concevoir des outils puis des automate pour s'en occuper.";
            break;
        case 24:
            carte.nom = "Barricade";
            carte.type = "Bâtiment";
            carte.familles.push("Mur");
            carte.cout[0] = 4;
            carte.vente[0] = 2;
            carte.vie_max = carte.vie = 5;
            break;
        case 25:
            carte.nom = "Bateau pirate";
            carte.type = "Bâtiment";
            carte.familles.push("Bateau", "Pirate");
            carte.cout[0] = 20;
            carte.cout[2] = 5;
            carte.vente[0] = 10;
            carte.vente[2] = 2;
            carte.vie_max = carte.vie = 10;
            carte.mobile = true;
            carte.texte = function () {
                return "Au début d'un tour de combat : Crée " + effet_carte_voir_id(26, carte) + " sur le terrain.";
            }
            carte.effet_tour_debut = function () {
                let nouvelle_carte = obtenir_carte(26);
                nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                ajouter(nouvelle_carte, carte.camp, carte.zone);
            }
            break;
        case 26:
            carte.nom = "Pirate";
            define_creature(carte);
            carte.familles.push("Humain", "Pirate");
            carte.cout[0] = 4;
            carte.cout[2] = 1;
            carte.vente[0] = 1;
            carte.vente[2] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 27:
            carte.nom = "Mage";
            define_creature(carte);
            carte.familles.push("Humain", "Mage");
            carte.cout[0] = 13;
            carte.vente[0] = 6;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            break;
        case 28:
            carte.nom = "Boule de feu";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 3;
            carte.cout[1] = 3;
            carte.vente[0] = 2;
            carte.vente[1] = 1;
            carte.texte = function () {
                return "Inflige 5 dégâts à une Unité adverse sur le terrain.<br/>Sorcellerie 5 : Inflige 10 dégâts à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            let carte_cible = Jeu.adverse.terrain[cible];
                            if (sorcellerie("joueur") >= 5) {
                                degats(carte_cible, 10);
                            }
                            else {
                                degats(carte_cible, 5);
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        if (sorcellerie("adverse") >= 5) {
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if ((Jeu.joueur.terrain[n].vie <= 10 && Jeu.joueur.terrain[best].vie > 10) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                    best = n;
                                }
                            }
                            degats(Jeu.joueur.terrain[best], 10);
                        }
                        else {
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if ((Jeu.joueur.terrain[n].vie <= 5 && Jeu.joueur.terrain[best].vie > 5) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                    best = n;
                                }
                            }
                            degats(Jeu.joueur.terrain[best], 5);
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            carte.description = "Un sort basique, efficace mais terriblement dangereux. Nombre de débutants ont ";
            break;
        case 29:
            carte.nom = "Coffre";
            carte.type = "Objet";
            carte.cout[0] = 2;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Pioche 1 carte.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    pioche("joueur");
                    deplacer(carte, "joueur", "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    return false;
                }
            }
            carte.description = "Mais que peut-il y avoir à l'intérieur ?";
            break;
        case 30:
            carte.nom = "Bottes de cuir";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 2;
            carte.vente[0] = 1;
            carte.stat_equipement.rapidite = true;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Rapidité", carte) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 31:
            carte.nom = "Seconde chance";
            carte.type = "Action";
            carte.cout[0] = 10;
            carte.vente[0] = 5;
            carte.texte = function () {
                return "Actualise la boutique alliée.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    boutique_afficher_choix(texte);
                    deplacer(carte, "joueur", "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                }
                return false;
            }
            carte.description = "On a tous droit à une seconde chance.";
            break;
        case 32:
            carte.nom = "Usine robotique";
            carte.type = "Bâtiment";
            carte.familles.push("Machine", "Robot");
            carte.cout[0] = 12;
            carte.cout[6] = 6;
            carte.cout[7] = 6;
            carte.vente[0] = 6;
            carte.vente[6] = 3;
            carte.vente[7] = 3;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Au début d'un tour de combat : Crée " + effet_carte_voir_id(33, carte) + " sur le terrain.";
            }
            carte.effet_tour_debut = function () {
                let nouvelle_carte = obtenir_carte(33);
                nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                ajouter(nouvelle_carte, carte.camp, carte.zone);
            }
            carte.description = "Contrairement aux automates qui sont une invention des gnomes, on ne sait pas vraiment qui a créé les robots. La plupart d'entre eux se sont eux même construit grâce à des usines.";
            break;
        case 33:
            carte.nom = "Robot";
            define_creature(carte);
            carte.familles.push("Machine", "Robot");
            carte.cout[0] = 3;
            carte.cout[6] = 1;
            carte.cout[7] = 1;
            carte.vente[6] = 1;
            carte.vente[7] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.description = "Contrairement aux automates, les robots ont dévellopé un semblant de conscience grâce à leurs circuits électroniques.";
            break;
        case 34:
            carte.nom = "Berserker";
            define_creature(carte);
            carte.familles.push("Goliath");
            carte.cout[0] = 10;
            carte.cout[12] = 10;
            carte.vente[0] = 5;
            carte.vente[12] = 5;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Quand subit des dégâts : Se donne 1 attaque.";
            }
            carte.effet_degat = function () {
                carte.attaque++;
            }
            carte.description = "Certains goliath ont choisis la voie de la guerre et sont devenus des berserkers, de redoutables guerriers devenant plus fort en étant blessés.";
            break;
        case 35:
            carte.nom = "Maître d'armes";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 20;
            carte.vente[0] = 10;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.equipement_max = 2;
            carte.description = "L'habilités de ces guerriers leur permet de manier tout type d'arme.";
            break;
        case 36:
            carte.nom = "Négociant";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 7;
            carte.vente[0] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Diminue le coût d'une carte alliée dans la boutique de 2 Or.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_boutique_or() && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une carte alliée dans la boutique : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Boutique :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.boutique.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "boutique", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.boutique[n].cout[0] > 0) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            Jeu.joueur.boutique[cible].cout[0] -= 2;
                            if (Jeu.joueur.boutique[cible].cout[0] < 0) {
                                Jeu.joueur.boutique[cible].cout[0] = 0;
                            }
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
            }
            carte.description = "Tout peut se négocier, même ce qui se n'achète pas.";
            break;
        case 37:
            carte.nom = "Démon";
            define_creature(carte);
            carte.familles.push("Démon");
            carte.cout[0] = 19;
            carte.cout[1] = 10;
            carte.cout[9] = 10;
            carte.vente[0] = 9;
            carte.vente[1] = 5;
            carte.vente[9] = 5;
            carte.attaque = 25;
            carte.vie_max = carte.vie = 25;
            carte.texte = function () {
                return "Quand posé : Inflige 10 dégâts au Meneur allié.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        degats_direct("joueur", 10);
                    }
                    deplacer(carte, carte.camp, "terrain");
                    effet_pose(carte);
                    if (Jeu.joueur.vie > 0) {
                        actualiser_zone();
                    }
                    else {
                        game_over();
                    }
                }
                else {
                    if (Jeu.adverse.vie > 3 || statistique(carte, "silence")) {
                        if (!statistique(carte, "silence")) {
                            degats_direct("adverse", 10);
                        }
                        deplacer(carte, carte.camp, "terrain");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            carte.description = "Les démons résident dans les enfers et sont les partisans du chaos. Ces créatures surpuissantes sont incontrôlables et imprévisibles, considérés comme les créatures les plus puissantes du monde connu.";
            break;
        case 38:
            carte.nom = "Archer";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 3;
            carte.portee = true;
            break;
        case 39:
            carte.nom = "Rappel";
            carte.type = "Action";
            carte.cout[0] = 20;
            carte.vente[0] = 10;
            carte.texte = function () {
                return "Place dans la main une carte alliée dans la défausse. Si c'est une Unité, la soigne de 1.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (Jeu.joueur.defausse.length > 0) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une carte alliée dans la défausse : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Défausse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.defausse.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "defausse", n, "carte_side");
                                    texte += "</div>";
                                    texte += "<div>";
                                    texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                    texte += "</div>";
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (["Créature", "Bâtiment"].includes(Jeu.joueur.defausse[cible].type)) {
                                Jeu.joueur.defausse[cible].vie = 1;
                            }
                            deplacer(Jeu.joueur.defausse[cible], "joueur", "main");
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (Jeu.adverse.defausse.length > 0) {
                        let best = 0;
                        for (let n = 0; n < Jeu.adverse.defausse.length; n++) {
                            if (cout_total(Jeu.adverse.defausse[n]) > cout_total(Jeu.adverse.defausse[best])) {
                                best = n;
                            }
                        }
                        if (["Créature", "Bâtiment"].includes(Jeu.adverse.defausse[best].type)) {
                            Jeu.adverse.defausse[best].vie = 1;
                        }
                        deplacer(Jeu.adverse.defausse[best], "adverse", "main");
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 40:
            carte.nom = "Cadavre éternel";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Zombie");
            carte.cout[0] = 6;
            carte.cout[9] = 6;
            carte.vente[0] = 3;
            carte.vente[9] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.eternite = true;
            break;
        case 41:
            carte.nom = "Phoenix";
            define_creature(carte);
            carte.familles.push("Phoenix");
            carte.cout[0] = 19;
            carte.cout[1] = 10;
            carte.cout[5] = 10;
            carte.vente[0] = 9;
            carte.vente[1] = 5;
            carte.vente[5] = 5;
            carte.attaque = 17;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand meurt : Crée " + effet_carte_voir_id(41, carte) + " dans la boutique.";
            }
            carte.effet_mort = function () {
                if (!statistique(carte, "silence")) {
                    let nouvelle_carte = obtenir_carte(41);
                    nouvelle_carte.verrouillage = true;
                    pioche(carte.camp, nouvelle_carte);
                }
                if (statistique(carte, "ephemere") && !statistique(carte, "silence")) {
                    enlever(carte);
                }
                else {
                    deplacer(carte, carte.camp, "defausse");
                }
            }
            break;
        case 42:
            carte.nom = "Faucheuse";
            define_creature(carte);
            carte.familles.push("Faucheuse");
            carte.cout[0] = 20;
            carte.cout[9] = 19;
            carte.vente[0] = 10;
            carte.vente[9] = 9;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Quand posé : Détruit une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain") && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            mort(Jeu.adverse.terrain[cible]);
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain") && !statistique(carte, "silence")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" && (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && Jeu.joueur.terrain[best].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        mort(Jeu.joueur.terrain[best]);
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 43:
            carte.nom = "Ogre";
            define_creature(carte);
            carte.familles.push("Ogre");
            carte.cout[0] = 20;
            carte.cout[9] = 19;
            carte.vente[0] = 10;
            carte.vente[9] = 9;
            carte.attaque = 15;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand tue une Créature : Se soigne de 5.";
            }
            carte.effet_tuer = function (defenseur) {
                soin(carte, 5);
            }
            break;
        case 44:
            carte.nom = "Hérisson";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 2;
            carte.cout[3] = 1;
            carte.vente[0] = 1;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 2;
            carte.epine = 1;
            break;
        case 45:
            carte.nom = "Héros";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 39;
            carte.vente[0] = 19;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.texte = function () {
                return "Quand une Créature alliée est posée : Se donne 1 attaque et 1 vie.";
            }
            carte.effet_pose_carte = function (carte_pose) {
                if (carte_pose.camp == carte.camp && carte_pose.type == "Créature") {
                    carte.attaque++;
                    carte.vie++;
                    carte.vie_max++;
                }
            }
            break;
        case 46:
            carte.nom = "Mangeur d'âme";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Liche");
            carte.cout[0] = 36;
            carte.cout[8] = 17;
            carte.cout[9] = 17;
            carte.vente[0] = 17;
            carte.vente[8] = 9;
            carte.vente[9] = 9;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand une Créature meurt : Se donne 1 attaque et 1 vie.";
            }
            carte.effet_mort_carte = function (carte_mort) {
                if (carte_mort.type == "Créature") {
                    carte.attaque++;
                    carte.vie++;
                    carte.vie_max++;
                }
            }
            break;
        case 47:
            carte.nom = "Tréant";
            define_creature(carte);
            carte.familles.push("Plante", "Tréant");
            carte.cout[0] = 20;
            carte.cout[3] = 19;
            carte.vente[0] = 10;
            carte.vente[3] = 9;
            carte.attaque = 15;
            carte.vie_max = carte.vie = 20;
            carte.regeneration = 5;
            break;
        case 48:
            carte.nom = "Araignée empoisonnée";
            define_creature(carte);
            carte.familles.push("Araignée");
            carte.cout[0] = 2;
            carte.cout[9] = 1;
            carte.vente[0] = 1;
            carte.vente[9] = 1;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 1;
            carte.texte = function () {
                return "Quand attaque : Applique " + effet_talent_voir("Poison", carte, 2) + " à la Créature attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                if (defenseur.type == "Créature") {
                    defenseur.poison += 2;
                }
            }
            break;
        case 49:
            carte.nom = "Dague empoisonnée";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 2;
            carte.vente[0] = 1;
            carte.stat_equipement.effet_attaque = function (attaquant, defenseur) {
                if (defenseur.type == "Créature") {
                    defenseur.poison += 2;
                }
            }
            carte.texte = function () {
                return "Applique l'effet suivant à la Créature équipée : Quand attaque : applique " + effet_talent_voir("Poison", carte, 2) + " à la Créature attaquée.<br/>ou<br/>Applique " + effet_talent_voir("Poison", carte, 4) + " à une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur") || verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez un effet : ";
                                texte += "<br/><br/>";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2)'>Applique l'effet suivant à la Créature équipée : Quand attaque : applique Poison 2 à la Créature attaquée</button>";
                                texte += "<br/>";
                                texte += "ou";
                                texte += "<br/>";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(4)'>Applique Poison 4 à une Créature adverse sur le terrain</button>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += "Applique l'effet suivant à la Créature équipée : Quand attaque : applique Poison 2 à la Créature attaquée.";
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(3," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 3:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                        case 4:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += "Applique Poison 4 à une Créature adverse sur le terrain.";
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(5," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 5:
                            Jeu.adverse.terrain[cible].poison += 4;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    else if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        Jeu.joueur.terrain[best].poison += 4;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 50:
            carte.nom = "Antidote";
            carte.type = "Objet";
            carte.familles.push("Potion");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Enlève " + effet_talent_voir("Poison", carte) + " à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_poison("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée avec " + effet_talent_voir("Poison", carte) + " sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].poison > 0) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].poison = 0;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_poison("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].poison == 0) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (Jeu.adverse.terrain[n].poison > Jeu.adverse.terrain[best].poison && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        Jeu.adverse.terrain[best].poison = 0;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 51:
            carte.nom = "Ifrit";
            define_creature(carte);
            carte.familles.push("Ifrit");
            carte.cout[0] = 20;
            carte.cout[1] = 19;
            carte.vente[0] = 10;
            carte.vente[1] = 9;
            carte.attaque = 17;
            carte.vie_max = carte.vie = 17;
            carte.texte = function () {
                return "Quand attaque : Applique " + effet_talent_voir("Brûlure", carte, 2) + " à l'Unité attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                if (defenseur.brulure < 2) {
                    defenseur.brulure = 2;
                }
            }
            break;
        case 52:
            carte.nom = "Martyr";
            define_creature(carte);
            carte.familles.push("Aasimar", "Église");
            carte.cout[0] = 6;
            carte.cout[10] = 5;
            carte.vente[0] = 3;
            carte.vente[10] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand est soigné : Pioche 1 carte.";
            }
            carte.effet_soin = function () {
                if (carte.camp == "joueur") {
                    pioche("joueur");
                }
            }
            break;
        case 53:
            carte.nom = "Paladin";
            define_creature(carte);
            carte.familles.push("Aasimar", "Paladin");
            carte.cout[0] = 20;
            carte.cout[10] = 19;
            carte.vente[0] = 10;
            carte.vente[10] = 9;
            carte.attaque = 15;
            carte.vie_max = carte.vie = 20;
            carte.vie_sup = 10;
            break;
        case 54:
            carte.nom = "Serpent de mer";
            define_creature(carte);
            carte.familles.push("Poisson", "Serpent de mer");
            carte.cout[0] = 20;
            carte.cout[2] = 19;
            carte.vente[0] = 10;
            carte.vente[2] = 9;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand posé : Bannis une carte alliée dans la boutique et se donne 1 attaque et 1 vie max.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (Jeu.joueur.boutique.length > 0 && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une carte dans la boutique : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Boutique :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.boutique.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "boutique", n, "carte_side");
                                    texte += "</div>";
                                    texte += "<div>";
                                    texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                    texte += "</div>";
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            carte.attaque++;
                            carte.vie_max++;
                            enlever(Jeu.joueur.boutique[cible]);
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
            }
            break;
        case 55:
            carte.nom = "Panacée";
            carte.type = "Objet";
            carte.cout[0] = 10;
            carte.vente[0] = 5;
            carte.texte = function () {
                return "Enlève tous les talents négatifs à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_debuff("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && (Jeu.joueur.terrain[n].poison > 0 || Jeu.joueur.terrain[n].brulure > 0 || Jeu.joueur.terrain[n].saignement > 0 || Jeu.joueur.terrain[n].contamination > 0 || Jeu.joueur.terrain[n].etourdissement || Jeu.joueur.terrain[n].silence)) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].poison = 0;
                            Jeu.joueur.terrain[cible].brulure = 0;
                            Jeu.joueur.terrain[cible].saignement = 0;
                            Jeu.joueur.terrain[cible].contamination = 0;
                            Jeu.joueur.terrain[cible].gel = 0;
                            Jeu.joueur.terrain[cible].etourdissement = false;
                            Jeu.joueur.terrain[cible].silence = false;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_debuff("adverse")) {
                        let best = 0;
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            let debuff = Jeu.adverse.terrain[n].poison + Jeu.adverse.terrain[n].brulure * 2 + Jeu.adverse.terrain[n].saignement + Jeu.adverse.terrain[n].contamination + Jeu.adverse.terrain[n].gel * 2 + Jeu.adverse.terrain[n].etourdissement * 3 + Jeu.adverse.terrain[n].silence * 5;
                            let best_debuff = Jeu.adverse.terrain[best].poison + Jeu.adverse.terrain[best].brulure * 2 + Jeu.adverse.terrain[best].saignement + Jeu.adverse.terrain[best].contamination + Jeu.adverse.terrain[best].gel * 2 + Jeu.adverse.terrain[best].etourdissement * 3 + Jeu.adverse.terrain[best].silence * 5;
                            if (debuff > best_debuff) {
                                best = n;
                            }
                        }
                        Jeu.adverse.terrain[best].poison = 0;
                        Jeu.adverse.terrain[best].brulure = 0;
                        Jeu.adverse.terrain[best].saignement = 0;
                        Jeu.adverse.terrain[best].contamination = 0;
                        Jeu.adverse.terrain[best].gel = 0;
                        Jeu.adverse.terrain[best].etourdissement = false;
                        Jeu.adverse.terrain[best].silence = false;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 56:
            carte.nom = "Oni";
            define_creature(carte);
            carte.familles.push("Oni");
            carte.cout[0] = 20;
            carte.cout[11] = 19;
            carte.vente[0] = 10;
            carte.vente[11] = 9;
            carte.attaque = 18;
            carte.vie_max = carte.vie = 18;
            carte.texte = function () {
                return "Quand attaque : Applique " + effet_talent_voir("Contamination", carte, 2) + " à la Créature attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                if (defenseur.type == "Créature") {
                    defenseur.contamination += 2;
                }
            }
            break;
        case 57:
            carte.nom = "Mangeur de miasme";
            define_creature(carte);
            carte.familles.push("Oni");
            carte.cout[0] = 20;
            carte.cout[11] = 19;
            carte.vente[0] = 10;
            carte.vente[11] = 9;
            carte.attaque = 15;
            carte.vie_max = carte.vie = 15;
            carte.texte = function () {
                return "Quand attaque : Si la Créature attaquée a " + effet_talent_voir("Contamination", carte) + ", lui enlève et se soigne d'autant que le nombre de " + effet_talent_voir("Contamination", carte) + " enlevé.";
            }
            carte.effet_attaque = function (defenseur) {
                if (defenseur.type == "Créature" && defenseur.contamination > 0) {
                    soin(carte, defenseur.contamination);
                    defenseur.contamination = 0;
                }
            }
            break;
        case 58:
            carte.nom = "Dague de cuivre";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 1;
            carte.stat_equipement.attaque = 1;
            carte.texte = function () {
                return "Donne 1 attaque à la Créature équipée.<br/>ou<br/>Inflige 1 dégât à une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur") || verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez un effet : ";
                                texte += "<br/><br/>";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2)'>Donne 1 attaque à la Créature équipée</button>";
                                texte += "<br/>";
                                texte += "ou";
                                texte += "<br/>";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(4)'>Inflige 1 dégât à une Créature adverse sur le terrain</button>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += "Donne 1 attaque à la Créature équipée.";
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(3," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 3:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                        case 4:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += "Inflige 1 dégât à une Créature adverse sur le terrain.";
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(5," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 5:
                            degats(Jeu.adverse.terrain[cible], 1);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    else if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie == 1 && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[n], 1);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 59:
            carte.nom = "Slime";
            define_creature(carte);
            carte.familles.push("Slime");
            carte.cout[0] = 3;
            carte.cout[2] = 3;
            carte.vente[0] = 2;
            carte.vente[2] = 1;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            carte.resistance = 1;
            break;
        case 60:
            carte.nom = "Fantôme";
            define_creature(carte);
            carte.familles.push("Fantôme");
            carte.cout[0] = 2;
            carte.cout[9] = 2;
            carte.vente[0] = 1;
            carte.vente[9] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.ephemere = true;
            break;
        case 61:
            carte.nom = "Mercenaire";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.temporaire = true;
            break;
        case 62:
            carte.nom = "Gladiateur";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 9;
            carte.vente[0] = 4;
            carte.attaque = 4;
            carte.vie_max = carte.vie = 4;
            carte.texte = function () {
                return "Quand est équipé d'un Objet Équipement Arme : Se donne 4 attaque.";
            }
            carte.effet_equiper = function (equipement) {
                if (equipement.familles.includes("Arme")) {
                    carte.attaque += 4;
                }
            }
            break;
        case 63:
            carte.nom = "Oeuf de dragon";
            carte.type = "Bâtiment";
            carte.familles.push("Reptile", "Dragon", "Oeuf");
            carte.cout[0] = 17;
            carte.cout[1] = 8;
            carte.cout[5] = 8;
            carte.vente[0] = 8;
            carte.vente[1] = 4;
            carte.vente[5] = 4;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand arrive sur le terrain : S'applique 3 Compteur.<br/>A la fin de la phase de combat : S'enlève 1 Compteur.<br/>Si cette carte n'a aucun Compteur : Se détruit et crée " + effet_carte_voir_id(9, carte) + " dans la main.";
            }
            carte.effet_ajouter = function () {
                if (carte.zone == "terrain") {
                    carte.compteur = 3;
                }
            }
            carte.effet_enlever = function () {
                if (carte.zone == "terrain") {
                    carte.compteur = 0;
                }
            }
            carte.effet_etage_fin = function () {
                carte.compteur--;
                carte.effet_compteur();
            }
            carte.effet_compteur = function () {
                if (carte.compteur == 0) {
                    let nouvelle_carte = obtenir_carte(9);
                    nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    ajouter(nouvelle_carte, carte.camp, "main");
                    carte.vie = 0;
                }
            }
            break;
        case 64:
            carte.nom = "Assassin";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Inflige 3 dégâts au Meneur adverse.";
            }
            carte.effet_pose = function () {
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                if (!statistique(carte, "silence")) {
                    if (carte.camp == "joueur") {
                        degats_direct("adverse", 3);
                        if (Jeu.adverse.vie > 0) {
                            actualiser_zone();
                        }
                        else {
                            combat_victoire();
                        }
                    }
                    else {
                        degats_direct("joueur", 3);
                        if (Jeu.joueur.vie <= 0) {
                            game_over();
                        }
                        return true;
                    }
                }
                else {
                    if (carte.camp == "joueur") {
                        actualiser_zone();
                    }
                    else {
                        return true;
                    }
                }
            }
            break;
        case 65:
            carte.nom = "Ange";
            define_creature(carte);
            carte.familles.push("Ange");
            carte.cout[0] = 20;
            carte.cout[5] = 10;
            carte.cout[10] = 10;
            carte.vente[0] = 10;
            carte.vente[5] = 10;
            carte.vente[10] = 10;
            carte.attaque = 19;
            carte.vie_max = carte.vie = 19;
            carte.texte = function () {
                return "Au début de la phase de préparation : Se donne 1 attaque et 1 vie si le Meneur allié n'est pas blessé.";
            }
            carte.effet_etage_debut = function () {
                if (Jeu[carte.camp].vie == Jeu[carte.camp].vie_max) {
                    carte.attaque++;
                    carte.vie++;
                    carte.vie_max++;
                }
            }
            break;
        case 66:
            carte.nom = "Évêque";
            define_creature(carte);
            carte.familles.push("Aasimar", "Église");
            carte.cout[0] = 10;
            carte.cout[10] = 10;
            carte.vente[0] = 5;
            carte.vente[10] = 5;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Quand une autre Créature alliée sur le terrain est soignée : Se soigne de 1.";
            }
            carte.effet_soin_carte = function (carte_soin) {
                if (carte_soin.camp == carte.camp && carte_soin.zone == "terrain" && carte_soin.id != 66) {
                    soin(carte, 1);
                }
            }
            break;
        case 67:
            carte.nom = "Griffon";
            define_creature(carte);
            carte.familles.push("Griffon");
            carte.cout[0] = 20;
            carte.cout[5] = 19;
            carte.vente[0] = 10;
            carte.vente[5] = 9;
            carte.attaque = 15;
            carte.vie_max = carte.vie = 15;
            carte.texte = function () {
                return "Quand posé : Diminue le coût d'amélioration de la boutique de 5 Or.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur" && !statistique(carte, "silence")) {
                    Jeu.boutique_amelioration -= 5;
                    if (Jeu.boutique_amelioration < 0) {
                        Jeu.boutique_amelioration = 0;
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 68:
            carte.nom = "Tigre";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 10;
            carte.cout[3] = 9;
            carte.vente[0] = 5;
            carte.vente[3] = 4;
            carte.attaque = 8;
            carte.vie_max = carte.vie = 9;
            carte.camouflage = true;
            break;
        case 69:
            carte.nom = "Troll";
            define_creature(carte);
            carte.familles.push("Troll");
            carte.cout[0] = 20;
            carte.cout[12] = 19;
            carte.vente[0] = 10;
            carte.vente[12] = 9;
            carte.attaque = 17;
            carte.vie_max = carte.vie = 17;
            carte.texte = function () {
                return "Quand attaque : Applique " + effet_talent_voir("Gel", carte, 1) + " à l'Unité attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                if (defenseur.gel < 1) {
                    defenseur.gel = 1;
                }
            }
            break;
        case 70:
            carte.nom = "Grappin";
            carte.type = "Objet";
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Place en première position une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain.unshift(Jeu.adverse.terrain[cible]);
                            Jeu.adverse.terrain.splice(cible + 1, 1);
                            Jeu.adverse.terrain[0].slot = 0;
                            for (let n = 1; n < cible + 1; n++) {
                                Jeu.adverse.terrain[n].slot++;
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie < Jeu.joueur.terrain[best].vie && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        Jeu.joueur.terrain.unshift(Jeu.joueur.terrain[best]);
                        Jeu.joueur.terrain.splice(best + 1, 1);
                        Jeu.joueur.terrain[0].slot = 0;
                        for (let n = 1; n < best + 1; n++) {
                            Jeu.joueur.terrain[n].slot++;
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 71:
            carte.nom = "Vendeur de parchemin";
            define_creature(carte);
            carte.familles.push("Humain", "Mage");
            carte.cout[0] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand vendu : Pioche 1 Action Sort.";
            }
            carte.effet_vente = function () {
                let verifier = false;
                for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                    if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).familles.includes("Sort")) {
                        verifier = true;
                    }
                }
                if (verifier) {
                    let nouvelle_carte = boutique_generer();
                    while (!nouvelle_carte.familles.includes("Sort")) {
                        nouvelle_carte = boutique_generer();
                    }
                    pioche("joueur", nouvelle_carte);
                }
            }
            break;
        case 72:
            carte.nom = "Assomer";
            carte.type = "Action";
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Étourdissement", carte) + " à une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].etourdissement && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible].etourdissement = true;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (!Jeu.joueur.terrain[n].etourdissement && Jeu.joueur.terrain[n].action_max > Jeu.joueur.terrain[best].action_max && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        Jeu.joueur.terrain[best].etourdissement = true;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 73:
            carte.nom = "Battement d'aile";
            carte.type = "Action";
            carte.cout[0] = 6;
            carte.cout[5] = 5;
            carte.vente[0] = 3;
            carte.vente[5] = 2;
            carte.texte = function () {
                return "Place dans la main une Créature sur le terrain.";
            }
            carte.effet_pose = function (step, cible_camp, cible_slot) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("joueur", "terrain") || verifier_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                if (Jeu.joueur.terrain.length > 0) {
                                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                        texte += "<div class='carte'>";
                                        texte += "<div>";
                                        texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                        texte += "</div>";
                                        if (Jeu.joueur.terrain[n].type == "Créature") {
                                            texte += "<div>";
                                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + '"joueur",' + n + ")'>Cibler</button>";
                                            texte += "</div>";
                                        }
                                        texte += "</div>";
                                    }
                                }
                                else {
                                    texte += "<i>Votre terrain est vide</i>";
                                    texte += "<br/>";
                                }
                                texte += "</div>";
                                texte += "<br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                if (Jeu.adverse.terrain.length > 0) {
                                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                        texte += "<div class='carte'>";
                                        texte += "<div>";
                                        if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                            texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                        }
                                        else {
                                            texte += "???";
                                        }
                                        texte += "</div>";
                                        if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                            texte += "<div>";
                                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + '"adverse",' + n + ")'>Cibler</button>";
                                            texte += "</div>";
                                        }
                                        texte += "</div>";
                                    }
                                }
                                else {
                                    texte += "<i>Le terrain adverse est vide</i>";
                                    texte += "<br/>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            deplacer(Jeu[cible_camp].terrain[cible_slot], cible_camp, "main");
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (cout_total(Jeu.joueur.terrain[n]) > cout_total(Jeu.joueur.terrain[best]) && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        deplacer(Jeu.joueur.terrain[best], "joueur", "main");
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 74:
            carte.nom = "Baril explosif";
            carte.type = "Bâtiment";
            carte.cout[0] = 2;
            carte.cout[1] = 2;
            carte.vente[0] = 1;
            carte.vente[1] = 1;
            carte.vie = carte.vie_max = 2;
            carte.texte = function () {
                return "Quand posé : Se place sur le terrain adverse.<br>Quand meurt : Inflige 3 dégâts au meneur allié.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    if (carte.camp == "joueur") {
                        deplacer(carte, "adverse", "terrain");
                    }
                    else {
                        deplacer(carte, "joueur", "terrain");
                    }
                }
                else {
                    deplacer(carte, carte.camp, "terrain");
                }
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            carte.effet_mort = function () {
                if (!statistique(carte, "silence")) {
                    degats_direct(carte.camp, 3);
                }
                if (statistique(carte, "ephemere") && !statistique(carte, "silence")) {
                    enlever(carte);
                }
                else {
                    deplacer(carte, carte.camp, "defausse");
                }
            }
            break;
        case 75:
            carte.nom = "Chevalier monté";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 38;
            carte.vente[0] = 19;
            carte.attaque = 7;
            carte.vie = carte.vie_max = 10;
            carte.rapidite = true;
            carte.texte = function () {
                return "Quand meurt : Se transforme en " + effet_carte_voir_id(76, carte) + ".";
            }
            carte.effet_mort = function () {
                if (!statistique(carte, "silence")) {
                    carte.nom = "Chevalier";
                    carte.cout[0] -= 19;
                    carte.vente[0] -= 10;
                    carte.attaque++;
                    carte.defense += 2;
                    carte.vie_max -= 2;
                    carte.vie = carte.vie_max;
                    carte.rapidite = false;
                    carte.texte = function () {
                        return "Aucun";
                    }
                    carte.effet_mort = function () {
                        if (statistique(carte, "ephemere") && !statistique(carte, "silence")) {
                            enlever(carte);
                        }
                        else {
                            deplacer(carte, carte.camp, "defausse");
                        }
                    }
                    carte.description = obtenir_carte(76).description;
                }
                else {
                    if (statistique(carte, "ephemere") && !statistique(carte, "silence")) {
                        enlever(carte);
                    }
                    else {
                        deplacer(carte, carte.camp, "defausse");
                    }
                }
            }
            break;
        case 76:
            carte.nom = "Chevalier";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 19;
            carte.vente[0] = 9;
            carte.attaque = 8;
            carte.defense = 2;
            carte.vie = carte.vie_max = 8;
            break;
        case 77:
            carte.nom = "Homme d'affaire";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 10;
            carte.vente[0] = 5;
            carte.attaque = 3;
            carte.vie = carte.vie_max = 3;
            carte.texte = function () {
                return "Quand vous vendez une carte : Donne 1 Or.";
            }
            carte.effet_vente_carte = function () {
                if (carte.camp == "joueur") {
                    Jeu.joueur.ressources[0].courant++;
                }
            }
            break;
        case 78:
            carte.nom = "Plaine";
            carte.type = "Région";
            carte.exclusif = true;
            carte.texte = function () {
                return "Toutes les cartes peuvent être piochées dans la boutique.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 78)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif) {
                    return true;
                }
                return false;
            }
            break;
        case 79:
            carte.nom = "Volcan";
            carte.type = "Région";
            carte.cout[0] = 5;
            carte.cout[1] = 4;
            carte.vente[0] = 2;
            carte.vente[1] = 2;
            carte.texte = function () {
                return "Les cartes piochées dans la boutique sont Feu.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 79)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif && nouvelle_carte.elements.includes("Feu")) {
                    return true;
                }
                return false;
            }
            break;
        case 80:
            carte.nom = "Taillade";
            carte.type = "Action";
            carte.cout[0] = 4;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Saignement", carte, 2) + " à une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible].saignement += 2;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].action_max > Jeu.joueur.terrain[best].action_max && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        Jeu.joueur.terrain[best].saignement += 2;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 81:
            carte.nom = "Encouragements";
            carte.type = "Action";
            carte.cout[0] = 2;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Donne 2 attaque et 2 vie à une Créature alliée sur le terrain jusqu'à la fin de la phase de combat.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].stat_etage.attaque += 2;
                            Jeu.joueur.terrain[cible].vie += 2;
                            Jeu.joueur.terrain[cible].stat_etage.vie_max += 2;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        Jeu.adverse.terrain[best].stat_etage.attaque += 2;
                        Jeu.adverse.terrain[best].vie += 2;
                        Jeu.adverse.terrain[best].stat_etage.vie_max += 2;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 82:
            carte.nom = "Mutisme";
            carte.type = "Action";
            carte.cout[0] = 10;
            carte.vente[0] = 5;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Silence", carte) + " à une Créature sur le terrain.";
            }
            carte.effet_pose = function (step, camp, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain") || verifier_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                if (Jeu.joueur.terrain.length > 0) {
                                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                        texte += "<div class='carte'>";
                                        texte += "<div>";
                                        texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                        texte += "</div>";
                                        if (Jeu.joueur.terrain[n].type == "Créature") {
                                            texte += "<div>";
                                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + '"joueur",' + n + ")'>Cibler</button>";
                                            texte += "</div>";
                                        }
                                        texte += "</div>";
                                    }
                                }
                                else {
                                    texte += "<i>Votre terrain est vide</i>";
                                    texte += "<br/>";
                                }
                                texte += "</div>";
                                texte += "<br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                if (Jeu.adverse.terrain.length > 0) {
                                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                        texte += "<div class='carte'>";
                                        texte += "<div>";
                                        if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                            texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                        }
                                        else {
                                            texte += "???";
                                        }
                                        texte += "</div>";
                                        if (Jeu.adverse.terrain[n].type == "Créature") {
                                            texte += "<div>";
                                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + '"adverse",' + n + ")'>Cibler</button>";
                                            texte += "</div>";
                                        }
                                        texte += "</div>";
                                    }
                                }
                                else {
                                    texte += "<i>Le terrain adverse est vide</i>";
                                    texte += "<br/>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu[camp].terrain[cible].silence = true;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        Jeu.joueur.terrain[best].silence = true;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 83:
            carte.nom = "Soldat courageux";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 19;
            carte.vente[0] = 9;
            carte.attaque = 5;
            carte.vie = carte.vie_max = 5;
            carte.texte = function () {
                return "Au début d'un tour de combat : se donne 1 attaque pour chaque Créature adverse sur le terrain jusqu'à la fin du tour de combat.";
            }
            carte.effet_tour_debut = function () {
                for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                    if (Jeu[camp_oppose(carte.camp)].terrain[n].type == "Créature") {
                        carte.stat_tour.attaque++;
                    }
                }
            }
            break;
        case 84:
            carte.nom = "Gobelin";
            define_creature(carte);
            carte.familles.push("Gobelin");
            carte.cout[0] = 3;
            carte.cout[1] = 2;
            carte.vente[0] = 1;
            carte.vente[1] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 85:
            carte.nom = "Ondin";
            define_creature(carte);
            carte.familles.push("Ondin");
            carte.cout[0] = 3;
            carte.cout[2] = 2;
            carte.vente[0] = 1;
            carte.vente[2] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 86:
            carte.nom = "Elfe";
            define_creature(carte);
            carte.familles.push("Elfe");
            carte.cout[0] = 3;
            carte.cout[3] = 2;
            carte.vente[0] = 1;
            carte.vente[3] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 87:
            carte.nom = "Nain";
            define_creature(carte);
            carte.familles.push("Nain");
            carte.cout[0] = 3;
            carte.cout[4] = 2;
            carte.vente[0] = 1;
            carte.vente[4] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 88:
            carte.nom = "Céleste";
            define_creature(carte);
            carte.familles.push("Céleste");
            carte.cout[0] = 3;
            carte.cout[5] = 2;
            carte.vente[0] = 1;
            carte.vente[5] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 89:
            carte.nom = "Satyre";
            define_creature(carte);
            carte.familles.push("Satyre");
            carte.cout[0] = 3;
            carte.cout[6] = 2;
            carte.vente[0] = 1;
            carte.vente[6] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 90:
            carte.nom = "Gnome";
            define_creature(carte);
            carte.familles.push("Gnome");
            carte.cout[0] = 3;
            carte.cout[7] = 2;
            carte.vente[0] = 1;
            carte.vente[7] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 91:
            carte.nom = "Kalashtar";
            define_creature(carte);
            carte.familles.push("Kalashtar");
            carte.cout[0] = 3;
            carte.cout[8] = 2;
            carte.vente[0] = 1;
            carte.vente[8] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 92:
            carte.nom = "Revenant";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Revenant");
            carte.cout[0] = 3;
            carte.cout[9] = 2;
            carte.vente[0] = 1;
            carte.vente[9] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 93:
            carte.nom = "Fidèle";
            define_creature(carte);
            carte.familles.push("Aasimar", "Église");
            carte.cout[0] = 3;
            carte.cout[10] = 2;
            carte.vente[0] = 1;
            carte.vente[10] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 94:
            carte.nom = "Drow";
            define_creature(carte);
            carte.familles.push("Drow");
            carte.cout[0] = 3;
            carte.cout[11] = 2;
            carte.vente[0] = 1;
            carte.vente[11] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 95:
            carte.nom = "Goliath";
            define_creature(carte);
            carte.familles.push("Goliath");
            carte.cout[0] = 3;
            carte.cout[12] = 2;
            carte.vente[0] = 1;
            carte.vente[12] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 96:
            carte.nom = "Île";
            carte.type = "Région";
            carte.cout[0] = 5;
            carte.cout[2] = 4;
            carte.vente[0] = 2;
            carte.vente[2] = 2;
            carte.texte = function () {
                return "Les cartes piochées dans la boutique sont Eau.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 96)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif && nouvelle_carte.elements.includes("Eau")) {
                    return true;
                }
                return false;
            }
            break;
        case 97:
            carte.nom = "Forêt";
            carte.type = "Région";
            carte.cout[0] = 5;
            carte.cout[3] = 4;
            carte.vente[0] = 2;
            carte.vente[3] = 2;
            carte.texte = function () {
                return "Les cartes piochées dans la boutique sont Végétal.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 97)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif && nouvelle_carte.elements.includes("Végétal")) {
                    return true;
                }
                return false;
            }
            break;
        case 98:
            carte.nom = "Montagne";
            carte.type = "Région";
            carte.cout[0] = 5;
            carte.cout[4] = 4;
            carte.vente[0] = 2;
            carte.vente[4] = 2;
            carte.texte = function () {
                return "Les cartes piochées dans la boutique sont Terre.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 98)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif && nouvelle_carte.elements.includes("Terre")) {
                    return true;
                }
                return false;
            }
            break;
        case 99:
            carte.nom = "Île volante";
            carte.type = "Région";
            carte.cout[0] = 5;
            carte.cout[5] = 4;
            carte.vente[0] = 2;
            carte.vente[5] = 2;
            carte.texte = function () {
                return "Les cartes piochées dans la boutique sont Air.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 99)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif && nouvelle_carte.elements.includes("Air")) {
                    return true;
                }
                return false;
            }
            break;
        case 100:
            carte.nom = "Haut plateau";
            carte.type = "Région";
            carte.cout[0] = 5;
            carte.cout[6] = 4;
            carte.vente[0] = 2;
            carte.vente[6] = 2;
            carte.texte = function () {
                return "Les cartes piochées dans la boutique sont Foudre.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 100)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif && nouvelle_carte.elements.includes("Foudre")) {
                    return true;
                }
                return false;
            }
            break;
        case 101:
            carte.nom = "Mine";
            carte.type = "Région";
            carte.cout[0] = 5;
            carte.cout[7] = 4;
            carte.vente[0] = 2;
            carte.vente[7] = 2;
            carte.texte = function () {
                return "Les cartes piochées dans la boutique sont Métal.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 101)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif && nouvelle_carte.elements.includes("Métal")) {
                    return true;
                }
                return false;
            }
            break;
        case 102:
            carte.nom = "Terre illusoire";
            carte.type = "Région";
            carte.cout[0] = 5;
            carte.cout[8] = 4;
            carte.vente[0] = 2;
            carte.vente[8] = 2;
            carte.texte = function () {
                return "Les cartes piochées dans la boutique sont Arcane.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 102)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif && nouvelle_carte.elements.includes("Arcane")) {
                    return true;
                }
                return false;
            }
            break;
        case 103:
            carte.nom = "Cimetière";
            carte.type = "Région";
            carte.cout[0] = 5;
            carte.cout[9] = 4;
            carte.vente[0] = 2;
            carte.vente[9] = 2;
            carte.texte = function () {
                return "Les cartes piochées dans la boutique sont Mort.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 103)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif && nouvelle_carte.elements.includes("Mort")) {
                    return true;
                }
                return false;
            }
            break;
        case 104:
            carte.nom = "Terre sacrée";
            carte.type = "Région";
            carte.cout[0] = 5;
            carte.cout[10] = 4;
            carte.vente[0] = 2;
            carte.vente[10] = 2;
            carte.texte = function () {
                return "Les cartes piochées dans la boutique sont Lumière.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 104)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif && nouvelle_carte.elements.includes("Lumière")) {
                    return true;
                }
                return false;
            }
            break;
        case 105:
            carte.nom = "Caverne";
            carte.type = "Région";
            carte.cout[0] = 5;
            carte.cout[11] = 4;
            carte.vente[0] = 2;
            carte.vente[11] = 2;
            carte.texte = function () {
                return "Les cartes piochées dans la boutique sont Ombre.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 105)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif && nouvelle_carte.elements.includes("Ombre")) {
                    return true;
                }
                return false;
            }
            break;
        case 106:
            carte.nom = "Toundra";
            carte.type = "Région";
            carte.cout[0] = 5;
            carte.cout[12] = 4;
            carte.vente[0] = 2;
            carte.vente[12] = 2;
            carte.texte = function () {
                return "Les cartes piochées dans la boutique sont Glace.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 106)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif && nouvelle_carte.elements.includes("Glace")) {
                    return true;
                }
                return false;
            }
            break;
        case 107:
            carte.nom = "Bouclier en cuir";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.stat_equipement.defense = 2;
            carte.texte = function () {
                return "Donne 2 défense à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 108:
            carte.nom = "Arc en bois";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.stat_equipement.attaque = 3;
            carte.stat_equipement.portee = true;
            carte.texte = function () {
                return "Donne 3 attaque et applique " + effet_talent_voir("Portée", carte) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 109:
            carte.nom = "Baguette en bois";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.stat_equipement.sorcellerie = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Sorcellerie", carte, 2) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 110:
            carte.nom = "Lance de cuivre";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 4;
            carte.vente[0] = 2;
            carte.stat_equipement.attaque = 5;
            carte.stat_equipement.percee = 2;
            carte.texte = function () {
                return "Donne 5 attaque et applique " + effet_talent_voir("Percée", carte, 2) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 111:
            carte.nom = "Doubles lames de cuivre";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 12;
            carte.vente[0] = 6;
            carte.stat_equipement.attaque = 5;
            carte.stat_equipement.action_max = 1;
            carte.texte = function () {
                return "Donne 5 attaque et 1 action supplémentaire à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 112:
            carte.nom = "Loup";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 113:
            carte.nom = "Ville";
            carte.type = "Région";
            carte.cout[0] = 9;
            carte.vente[0] = 4;
            carte.texte = function () {
                return "Les cartes piochées dans la boutique sont Neutre.";
            }
            carte.effet_pose = function () {
                if (!verifier_region(carte.camp, 113)) {
                    deplacer(carte, carte.camp, "regions");
                    effet_pose(carte);
                    actualiser_zone();
                }
            }
            carte.boutique_generer = function (nouvelle_carte) {
                if ((cout_total(nouvelle_carte) <= Jeu.boutique_niveau * 5 || Jeu.boutique_niveau == 10) && !nouvelle_carte.exclusif && nouvelle_carte.elements.length == 0) {
                    return true;
                }
                return false;
            }
            break;
        case 114:
            carte.nom = "Golem";
            define_creature(carte);
            carte.familles.push("Golem");
            carte.cout[0] = 20;
            carte.cout[4] = 19;
            carte.vente[0] = 10;
            carte.vente[4] = 9;
            carte.attaque = 10;
            carte.defense = 10;
            carte.vie_max = carte.vie = 10;
            break;
        case 115:
            carte.nom = "Minotaure";
            define_creature(carte);
            carte.familles.push("Minotaure");
            carte.cout[0] = 10;
            carte.cout[4] = 9;
            carte.vente[0] = 5;
            carte.vente[4] = 4;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 8;
            carte.texte = function () {
                return "Quand attaque un Bâtiment : Inflige 2 dégâts au Bâtiment attaqué.";
            }
            carte.effet_attaque = function (defenseur) {
                if (defenseur.type == "Bâtiment") {
                    degats(defenseur, 2);
                }
            }
            break;
        case 116:
            carte.nom = "Centaure";
            define_creature(carte);
            carte.familles.push("Centaure");
            carte.cout[0] = 10;
            carte.cout[6] = 9;
            carte.vente[0] = 5;
            carte.vente[6] = 4;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 7;
            carte.rapidite = true;
            break;
        case 117:
            carte.nom = "Archimage";
            define_creature(carte);
            carte.familles.push("Humain", "Mage");
            carte.cout[0] = 39;
            carte.vente[0] = 19;
            carte.attaque = 15;
            carte.vie_max = carte.vie = 15;
            carte.sorcellerie = 5;
            break;
        case 118:
            carte.nom = "Grand automate";
            define_creature(carte);
            carte.familles.push("Machine", "Automate");
            carte.cout[0] = 20;
            carte.cout[7] = 19;
            carte.vente[0] = 10;
            carte.vente[7] = 9;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            break;
        case 119:
            carte.nom = "Faucon";
            define_creature(carte);
            carte.familles.push("Oiseau");
            carte.cout[0] = 3;
            carte.cout[5] = 2;
            carte.vente[0] = 1;
            carte.vente[5] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 120:
            carte.nom = "Hydre";
            define_creature(carte);
            carte.familles.push("Reptile", "Hydre");
            carte.cout[0] = 20;
            carte.cout[2] = 19;
            carte.vente[0] = 10;
            carte.vente[2] = 9;
            carte.attaque = 15;
            carte.vie_max = carte.vie = 15;
            carte.action_max = 2;
            break;
        case 121:
            carte.nom = "Tir de flèche";
            carte.type = "Action";
            carte.cout[0] = 1;
            carte.texte = function () {
                return "Inflige 1 dégât à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            degats(Jeu.adverse.terrain[cible], 1);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie == 1 && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[best], 1);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 122:
            carte.nom = "Carpe";
            define_creature(carte);
            carte.familles.push("Poisson");
            carte.cout[0] = 3;
            carte.cout[2] = 2;
            carte.vente[0] = 1;
            carte.vente[2] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 123:
            carte.nom = "Requin";
            define_creature(carte);
            carte.familles.push("Poisson");
            carte.cout[0] = 10;
            carte.cout[2] = 9;
            carte.vente[0] = 5;
            carte.vente[2] = 4;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            break;
        case 124:
            carte.nom = "Sardine";
            define_creature(carte);
            carte.familles.push("Poisson");
            carte.cout[2] = 1;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 1;
            break;
        case 125:
            carte.nom = "Tortue";
            define_creature(carte);
            carte.familles.push("Reptile");
            carte.cout[0] = 3;
            carte.cout[2] = 2;
            carte.vente[0] = 1;
            carte.vente[2] = 1;
            carte.attaque = 1;
            carte.defense = 1;
            carte.vie_max = carte.vie = 3;
            break;
        case 126:
            carte.nom = "Crabe";
            define_creature(carte);
            carte.cout[0] = 2;
            carte.cout[2] = 2;
            carte.vente[0] = 1;
            carte.vente[2] = 1;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 2;
            carte.regeneration = 1;
            break;
        case 127:
            carte.nom = "Zombie";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Zombie");
            carte.cout[0] = 5;
            carte.cout[9] = 4;
            carte.vente[0] = 2;
            carte.vente[9] = 2;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            break;
        case 128:
            carte.nom = "Cyclope";
            define_creature(carte);
            carte.familles.push("Cyclope");
            carte.cout[0] = 20;
            carte.cout[6] = 19;
            carte.vente[0] = 10;
            carte.vente[6] = 9;
            carte.attaque = 19;
            carte.vie_max = carte.vie = 19;
            carte.texte = function () {
                return "Quand posé : Crée " + effet_carte_voir_id(129, carte) + " dans la boutique.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let nouvelle_carte = obtenir_carte(129);
                        nouvelle_carte.cache = true;
                        ajouter(nouvelle_carte, "joueur", "boutique");
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 129:
            carte.nom = "Éclair cyclopéen";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme", "Cyclope");
            carte.cout[0] = 10;
            carte.cout[6] = 10;
            carte.vente[0] = 5;
            carte.vente[6] = 5;
            carte.stat_equipement.attaque = 20;
            carte.stat_equipement.percee = 6;
            carte.stat_equipement.sorcellerie = 1;
            carte.exclusif = true;
            carte.texte = function () {
                return "Donne 20 attaque, applique " + effet_talent_voir("Percée", carte, 6) + " et " + effet_talent_voir("Sorcellerie", carte, 1) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 130:
            carte.nom = "Porteur de torche";
            define_creature(carte);
            carte.familles.push("Gobelin");
            carte.cout[0] = 4;
            carte.cout[1] = 4;
            carte.vente[0] = 2;
            carte.vente[1] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 Feu max.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[1].max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 131:
            carte.nom = "Sourcier";
            define_creature(carte);
            carte.familles.push("Ondin");
            carte.cout[0] = 4;
            carte.cout[2] = 4;
            carte.vente[0] = 2;
            carte.vente[2] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 Eau max.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[2].max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 132:
            carte.nom = "Bûcheron";
            define_creature(carte);
            carte.familles.push("Elfe");
            carte.cout[0] = 4;
            carte.cout[3] = 4;
            carte.vente[0] = 2;
            carte.vente[3] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 Végétal max.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[3].max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 133:
            carte.nom = "Tailleur de pierre";
            define_creature(carte);
            carte.familles.push("Nain");
            carte.cout[0] = 4;
            carte.cout[4] = 4;
            carte.vente[0] = 2;
            carte.vente[4] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 Terre max.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[4].max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 134:
            carte.nom = "Manieur d'éventail";
            define_creature(carte);
            carte.familles.push("Céleste");
            carte.cout[0] = 4;
            carte.cout[5] = 4;
            carte.vente[0] = 2;
            carte.vente[5] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 Air max.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[5].max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 135:
            carte.nom = "Satyre frotte fourrure";
            define_creature(carte);
            carte.familles.push("Satyre");
            carte.cout[0] = 4;
            carte.cout[6] = 4;
            carte.vente[0] = 2;
            carte.vente[6] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 Foudre max.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[6].max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 136:
            carte.nom = "Mineur";
            define_creature(carte);
            carte.familles.push("Gnome");
            carte.cout[0] = 4;
            carte.cout[7] = 4;
            carte.vente[0] = 2;
            carte.vente[7] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 Métal max.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[7].max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 137:
            carte.nom = "Arcaniste";
            define_creature(carte);
            carte.familles.push("Kalashtar");
            carte.cout[0] = 4;
            carte.cout[8] = 4;
            carte.vente[0] = 2;
            carte.vente[8] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 Arcane max.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[8].max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 138:
            carte.nom = "Fossoyeur";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Revenant");
            carte.cout[0] = 4;
            carte.cout[9] = 4;
            carte.vente[0] = 2;
            carte.vente[9] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 Mort max.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[9].max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 139:
            carte.nom = "Illuminateur";
            define_creature(carte);
            carte.familles.push("Aasimar");
            carte.cout[0] = 4;
            carte.cout[10] = 4;
            carte.vente[0] = 2;
            carte.vente[10] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 Lumière max.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[10].max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 140:
            carte.nom = "Souffleur de bougie";
            define_creature(carte);
            carte.familles.push("Drow");
            carte.cout[0] = 4;
            carte.cout[11] = 4;
            carte.vente[0] = 2;
            carte.vente[11] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 Ombre max.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[11].max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 141:
            carte.nom = "Coupeur de glace";
            define_creature(carte);
            carte.familles.push("Goliath");
            carte.cout[0] = 4;
            carte.cout[12] = 4;
            carte.vente[0] = 2;
            carte.vente[12] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 Glace max.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[12].max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 142:
            carte.nom = "Cadenas";
            carte.type = "Objet";
            carte.cout[0] = 2;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Verrouille une carte dans la boutique.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let texte = "";

                            texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                            texte += "<br/><br/>";
                            texte += carte.nom;
                            texte += "<br/>";
                            texte += carte.texte();
                            texte += "<br/><br/>";
                            texte += "Choisissez une carte dans la boutique non-verrouillée : ";
                            texte += "<br/><br/>";
                            texte += "<div class='zone' style='width:48%;'>";
                            texte += "<u>Boutique :</u>";
                            texte += "<br/>";
                            for (let n = 0; n < Jeu.joueur.boutique.length; n++) {
                                texte += "<div class='carte'>";
                                texte += "<div>";
                                texte += afficher_carte("joueur", "boutique", n, "carte_side");
                                texte += "</div>";
                                if (!Jeu.joueur.boutique.verrouillage) {
                                    texte += "<div>";
                                    texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                    texte += "</div>";
                                }
                                texte += "</div>";
                            }
                            texte += "</div>";
                            texte += "</div>";
                            
                            afficher_choix(texte);
                            break;
                        case 2:
                            Jeu.joueur.boutique[cible].verrouillage = true;
                            deplacer(carte, "joueur", "defausse");
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    return false;
                }
            }
            break;
        case 143:
            carte.nom = "Mage de feu";
            define_creature(carte);
            carte.familles.push("Gobelin", "Mage");
            carte.cout[0] = 7;
            carte.cout[1] = 6;
            carte.vente[0] = 3;
            carte.vente[1] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            break;
        case 144:
            carte.nom = "Mage d'eau";
            define_creature(carte);
            carte.familles.push("Ondin", "Mage");
            carte.cout[0] = 7;
            carte.cout[2] = 6;
            carte.vente[0] = 3;
            carte.vente[2] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            break;
        case 145:
            carte.nom = "Mage des plantes";
            define_creature(carte);
            carte.familles.push("Elfe", "Mage");
            carte.cout[0] = 7;
            carte.cout[3] = 6;
            carte.vente[0] = 3;
            carte.vente[3] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            break;
        case 146:
            carte.nom = "Mage de terre";
            define_creature(carte);
            carte.familles.push("Nain", "Mage");
            carte.cout[0] = 7;
            carte.cout[4] = 6;
            carte.vente[0] = 3;
            carte.vente[4] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            break;
        case 147:
            carte.nom = "Mage d'air";
            define_creature(carte);
            carte.familles.push("Céleste", "Mage");
            carte.cout[0] = 7;
            carte.cout[5] = 6;
            carte.vente[0] = 3;
            carte.vente[5] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            break;
        case 148:
            carte.nom = "Mage de foudre";
            define_creature(carte);
            carte.familles.push("Satyre", "Mage");
            carte.cout[0] = 7;
            carte.cout[6] = 6;
            carte.vente[0] = 3;
            carte.vente[6] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            break;
        case 149:
            carte.nom = "Mage des métaux";
            define_creature(carte);
            carte.familles.push("Gnome", "Mage");
            carte.cout[0] = 7;
            carte.cout[7] = 6;
            carte.vente[0] = 3;
            carte.vente[7] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            break;
        case 150:
            carte.nom = "Mage des arcanes";
            define_creature(carte);
            carte.familles.push("Kalashtar", "Mage");
            carte.cout[0] = 7;
            carte.cout[8] = 6;
            carte.vente[0] = 3;
            carte.vente[8] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            break;
        case 151:
            carte.nom = "Mage de la mort";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Revenant", "Mage");
            carte.cout[0] = 7;
            carte.cout[9] = 6;
            carte.vente[0] = 3;
            carte.vente[9] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            break;
        case 152:
            carte.nom = "Mage de lumière";
            define_creature(carte);
            carte.familles.push("Aasimar", "Mage");
            carte.cout[0] = 7;
            carte.cout[10] = 6;
            carte.vente[0] = 3;
            carte.vente[10] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            break;
        case 153:
            carte.nom = "Mage des ombres";
            define_creature(carte);
            carte.familles.push("Drow", "Mage");
            carte.cout[0] = 7;
            carte.cout[11] = 6;
            carte.vente[0] = 3;
            carte.vente[11] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            break;
        case 154:
            carte.nom = "Mage de glace";
            define_creature(carte);
            carte.familles.push("Goliath", "Mage");
            carte.cout[0] = 7;
            carte.cout[12] = 6;
            carte.vente[0] = 3;
            carte.vente[12] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            break;
        case 155:
            carte.nom = "Création hydraulique";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 2;
            carte.cout[2] = 2;
            carte.cout[0] = 1;
            carte.vente[2] = 1;
            carte.texte = function () {
                return "Donne 1 Eau max.<br/>Sorcellerie 3 : Donne 2 Eau max.";
            }
            carte.effet_pose = function () {
                if (sorcellerie(carte.camp) >= 2) {
                    Jeu[carte.camp].ressources[2].max += 2;
                }
                else {
                    Jeu[carte.camp].ressources[2].max++;
                }
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 156:
            carte.nom = "Spores empoisonnées";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 2;
            carte.cout[3] = 1;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Poison", carte, 4) + " à une Créature adverse sur le terrain.<br/>Sorcellerie 2 : Applique " + effet_talent_voir("Poison", carte, 8) + " à une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (sorcellerie("joueur") >= 2) {
                                Jeu.adverse.terrain[cible].poison += 8;
                            }
                            else {
                                Jeu.adverse.terrain[cible].poison += 4;
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        if (sorcellerie("adverse") >= 2) {
                            Jeu.joueur.terrain[best].poison += 8;
                        }
                        else {
                            Jeu.joueur.terrain[best].poison += 4;
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 157:
            carte.nom = "Édification boueuse";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 3;
            carte.cout[4] = 3;
            carte.vente[0] = 2;
            carte.vente[4] = 1;
            carte.texte = function () {
                return "Crée " + effet_carte_voir_id(158, carte) + " sur le terrain en première position.<br/>Sorcellerie 10 : Crée " + effet_carte_voir_id(158, carte) + " sur le terrain en première position et lui donne 5 vie.";
            }
            carte.effet_pose = function () {
                let nouvelle_carte = obtenir_carte(158);
                if (sorcellerie(carte.camp) >= 10) {
                    nouvelle_carte.vie = nouvelle_carte.vie_max += 5;
                }
                nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                ajouter(nouvelle_carte, carte.camp, "terrain");
                Jeu[carte.camp].terrain.unshift(nouvelle_carte);
                Jeu[carte.camp].terrain.splice(Jeu[carte.camp].terrain.length - 1, 1);
                Jeu[carte.camp].terrain[0].slot = 0;
                for (let n = 1; n < Jeu[carte.camp].terrain.length; n++) {
                    Jeu[carte.camp].terrain[n].slot++;
                }
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 158:
            carte.nom = "Mur de boue";
            carte.type = "Bâtiment";
            carte.familles.push("Mur");
            carte.cout[0] = 2;
            carte.cout[4] = 2;
            carte.vente[0] = 1;
            carte.vente[4] = 1;
            carte.vie_max = carte.vie = 5;
            break;
        case 159:
            carte.nom = "Coup de vent";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 6;
            carte.cout[5] = 6;
            carte.vente[0] = 3;
            carte.vente[5] = 3;
            carte.texte = function () {
                return "Place dans la main une Créature adverse sur le terrain.<br/>Sorcellerie 10 : Place dans la boutique une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (sorcellerie("joueur") >= 10) {
                                deplacer(Jeu.adverse.terrain[cible], "adverse", "boutique");
                            }
                            else {
                                deplacer(Jeu.adverse.terrain[cible], "adverse", "main");
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (cout_total(Jeu.joueur.terrain[n]) > cout_total(Jeu.joueur.terrain[best]) && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        let carte_cible = Jeu.joueur.terrain[best];
                        deplacer(carte_cible, "joueur", "main");
                        if (sorcellerie("adverse") >= 2) {
                            degats(carte_cible, 2);
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 160:
            carte.nom = "Éclair";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 2;
            carte.cout[6] = 2;
            carte.vente[0] = 1;
            carte.vente[6] = 1;
            carte.texte = function () {
                return "Inflige 6 dégâts à l'Unité adverse en première position sur le terrain.<br/>Sorcellerie 2 : Inflige 10 dégâts à l'Unité adverse en première position sur le terrain.";
            }
            carte.effet_pose = function () {
                if (Jeu[camp_oppose(carte.camp)].terrain.length > 0) {
                    if (sorcellerie(carte.camp) >= 2) {
                        degats(Jeu[camp_oppose(carte.camp)].terrain[0], 10);
                    }
                    else {
                        degats(Jeu[camp_oppose(carte.camp)].terrain[0], 6);
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 161:
            carte.nom = "Peau métallique";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 6;
            carte.cout[7] = 5;
            carte.vente[0] = 3;
            carte.vente[7] = 2;
            carte.texte = function () {
                return "Donne 3 attaque et 3 vie à une Créature alliée sur le terrain.<br/>Sorcellerie 6 : Donne 5 attaque et 5 vie à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (sorcellerie("joueur") >= 6) {
                                Jeu.joueur.terrain[cible].attaque += 5;
                                Jeu.joueur.terrain[cible].vie += 5;
                                Jeu.joueur.terrain[cible].vie_max += 5;
                            }
                            else {
                                Jeu.joueur.terrain[cible].attaque += 3;
                                Jeu.joueur.terrain[cible].vie += 3;
                                Jeu.joueur.terrain[cible].vie_max += 3;
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        if (sorcellerie("adverse") >= 6) {
                            Jeu.adverse.terrain[best].attaque += 5;
                            Jeu.adverse.terrain[best].vie += 5;
                            Jeu.adverse.terrain[best].vie_max += 5;
                        }
                        else {
                            Jeu.adverse.terrain[best].attaque += 3;
                            Jeu.adverse.terrain[best].vie += 3;
                            Jeu.adverse.terrain[best].vie_max += 3;
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 162:
            carte.nom = "Tir arcanique";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 3;
            carte.cout[8] = 3;
            carte.vente[0] = 2;
            carte.vente[8] = 1;
            carte.texte = function () {
                return "Inflige 5 dégâts à une Unité adverse sur le terrain.<br/>Sorcellerie 5 : Inflige 5 dégâts à deux Unités adverses sur le terrain.";
            }
            carte.effet_pose = function (step, cible1, cible2) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une première Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (sorcellerie("joueur") >= 2) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une deuxième Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(3," + cible1 + "," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                degats(Jeu.adverse.terrain[cible1], 2);
                                deplacer(carte, "joueur", "defausse");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 3:
                            let cible_mort = degats(Jeu.adverse.terrain[cible1], 2).mort;
                            if (cible1 != cible2 || !cible_mort) {
                                if (cible_mort && cible1 < cible2) {
                                    cible2--;
                                }
                                degats(Jeu.adverse.terrain[cible2], 2);
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if ((Jeu.joueur.terrain[n].vie <= 2 && Jeu.joueur.terrain[best].vie > 2) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[best], 2);
                        if (sorcellerie("adverse") >= 2 && Jeu.joueur.terrain.length > 0) {
                            best = 0;
                            while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                                best++;
                            }
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if ((Jeu.joueur.terrain[n].vie <= 2 && Jeu.joueur.terrain[best].vie > 2) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                    best = n;
                                }
                            }
                            degats(Jeu.joueur.terrain[best], 2);
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 163:
            carte.nom = "Réanimation";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 5;
            carte.cout[9] = 4;
            carte.vente[0] = 2;
            carte.vente[9] = 2;
            carte.texte = function () {
                return "Place dans la boutique une Créature alliée dans la défausse et la soigne de 1.<br/>Sorcellerie 20 : Place dans la boutique une Créature alliée dans la défausse et la soigne totalement.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "defausse")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée dans la défausse : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Défausse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.defausse.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "defausse", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.defausse[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.defausse[cible].vie = 1;
                            if (sorcellerie("joueur") >= 2) {
                                Jeu.joueur.defausse[cible].vie = Jeu.joueur.defausse[cible].vie_max;
                            }
                            deplacer(Jeu.joueur.defausse[cible], "joueur", "boutique");
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    return false;
                }
            }
            break;
        case 164:
            carte.nom = "Rayon sacré";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 4;
            carte.cout[10] = 3;
            carte.vente[0] = 2;
            carte.vente[10] = 1;
            carte.texte = function () {
                return "Soigne 5 à une Créature alliée sur le terrain.<br/>ou<br/>Inflige 5 dégâts à une Créature adverse sur le terrain.<br/>Sorcellerie 5 : Soigne 10 à une Créature alliée sur le terrain.<br/>ou<br/>Inflige 10 dégâts à une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let texte = "";
                            texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                            texte += "<br/><br/>";
                            texte += carte.nom;
                            texte += "<br/>";
                            texte += carte.texte();
                            texte += "<br/><br/>";
                            texte += "Choisissez un effet : ";
                            texte += "<br/><br/>";
                            if (sorcellerie("joueur") >= 5) {
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2)'>Soigne 10 à une Créature alliée sur le terrain</button>";
                                texte += "<br/>";
                                texte += "ou";
                                texte += "<br/>";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(4)'>Inflige 10 dégâts à une Créature adverse sur le terrain</button>";
                            }
                            else {
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2)'>Soigne 5 à une Créature alliée sur le terrain</button>";
                                texte += "<br/>";
                                texte += "ou";
                                texte += "<br/>";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(4)'>Inflige 5 dégâts à une Créature adverse sur le terrain</button>";
                            }
                            texte += "</div>";
                            afficher_choix(texte);
                            break;
                        case 2:
                            if (verifier_soin_creature("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                if (sorcellerie("joueur") >= 5) {
                                    texte += "Soigne 10 à une Créature alliée sur le terrain.";
                                }
                                else {
                                    texte += "Soigne 5 à une Créature alliée sur le terrain.";
                                }
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie < Jeu.joueur.terrain[n].vie_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(3," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 3:
                            if (sorcellerie("joueur") >= 5) {
                                soin(Jeu.joueur.terrain[cible], 10);
                            }
                            else {
                                soin(Jeu.joueur.terrain[cible], 5);
                            }
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                        case 4:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                if (sorcellerie("joueur") >= 5) {
                                    texte += "Inflige 10 dégâts à une Créature adverse sur le terrain.";
                                }
                                else {
                                    texte += "Inflige 5 dégâts à une Créature adverse sur le terrain.";
                                }
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(5," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 5:
                            if (sorcellerie("joueur") >= 5) {
                                degats(Jeu.adverse.terrain[cible], 10);
                            }
                            else {
                                degats(Jeu.adverse.terrain[cible], 5);
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_soin_creature("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].vie >= Jeu.adverse.terrain[best].vie_max) {
                            best++;
                        }
                        if (sorcellerie("adverse") >= 5) {
                            soin(Jeu.adverse.terrain[best], 10);
                        }
                        else {
                            soin(Jeu.adverse.terrain[best], 5);
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    else if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if ((Jeu.joueur.terrain[n].vie <= 4 && sorcellerie("adverse") >= 2) || (Jeu.joueur.terrain[n].vie <= 2 && sorcellerie("adverse") < 2) && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        if (sorcellerie("adverse") >= 5) {
                            degats(Jeu.joueur.terrain[best], 10);
                        }
                        else {
                            degats(Jeu.joueur.terrain[best], 5);
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 165:
            carte.nom = "Transfusion";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 6;
            carte.cout[11] = 6;
            carte.vente[0] = 3;
            carte.vente[11] = 3;
            carte.texte = function () {
                return "Inflige 5 dégâts à une Créature adverse sur le terrain et soigne 5 à une Créature alliée sur le terrain.<br/>Sorcellerie 10 : Inflige 10 dégâts à une Créature adverse sur le terrain et soigne 10 à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible1, cible2) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (verifier_soin_creature("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(3," + cible1 + "," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                if (sorcellerie("joueur") >= 10) {
                                    degats(Jeu.adverse.terrain[cible1], 10);
                                }
                                else {
                                    degats(Jeu.adverse.terrain[cible1], 5);
                                }
                                deplacer(carte, "joueur", "defausse");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 3:
                            if (sorcellerie("joueur") >= 10) {
                                degats(Jeu.adverse.terrain[cible1], 10);
                                soin(Jeu.joueur.terrain[cible2], 10);
                            }
                            else {
                                degats(Jeu.adverse.terrain[cible1], 5);
                                soin(Jeu.joueur.terrain[cible2], 5);
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie <= 2 && Jeu.joueur.terrain[best].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        if (sorcellerie("adverse") >= 10) {
                            degats(Jeu.joueur.terrain[best], 10);
                        }
                        else {
                            degats(Jeu.joueur.terrain[best], 5);
                        }
                        if (verifier_soin_creature("adverse")) {
                            best = 0;
                            while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].vie >= Jeu.adverse.terrain[best].vie_max) {
                                best++;
                            }
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].vie < Jeu.adverse.terrain[n].vie_max && Jeu.adverse.terrain[best].type == "Créature") {
                                    best = n;
                                }
                            }
                            if (sorcellerie("adverse") >= 10) {
                                soin(Jeu.adverse.terrain[best], 10);
                            }
                            else {
                                soin(Jeu.adverse.terrain[best], 5);
                            }
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 166:
            carte.nom = "Gelure";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 2;
            carte.cout[12] = 2;
            carte.vente[0] = 1;
            carte.vente[12] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Gel", carte, 1) + " à une Unité adverse sur le terrain.<br/>Sorcellerie 3 : Applique " + effet_talent_voir("Gel", carte, 2) + " à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (sorcellerie("joueur") >= 2 && Jeu.adverse.terrain[cible].gel < 2) {
                                Jeu.adverse.terrain[cible].gel = 2;
                            }
                            else if (Jeu.adverse.terrain[cible].gel < 1) {
                                Jeu.adverse.terrain[cible].gel = 1;
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (!Jeu.joueur.terrain[n].etourdissement && Jeu.joueur.terrain[n].gel < 1 && Jeu.joueur.terrain[n].action_max > 0 && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        if (sorcellerie("adverse") >= 2 && Jeu.joueur.terrain[best].gel < 2) {
                            Jeu.joueur.terrain[best].gel = 2;
                        }
                        else if (Jeu.adverse.terrain[cible].gel < 1) {
                            Jeu.joueur.terrain[best].gel = 1;
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 167:
            carte.nom = "Lion";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 22;
            carte.cout[1] = 21;
            carte.vente[0] = 11;
            carte.vente[1] = 10;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Quand posé : Donne 1 attaque et 1 vie à toutes les Créatures Bête alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature" && Jeu[carte.camp].terrain[n].familles.includes("Bête")) {
                            Jeu[carte.camp].terrain[n].attaque++;
                            Jeu[carte.camp].terrain[n].vie_max++;
                            Jeu[carte.camp].terrain[n].vie++;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 168:
            carte.nom = "Tour de mage";
            carte.type = "Bâtiment";
            carte.cout[0] = 13;
            carte.vente[0] = 6;
            carte.vie_max = carte.vie = 10;
            carte.sorcellerie = 2;
            break;
        case 169:
            carte.nom = "Ours des montagnes";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 10;
            carte.cout[4] = 9;
            carte.vente[0] = 5;
            carte.vente[4] = 4;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            break;
        case 170:
            carte.nom = "Ours polaire";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 10;
            carte.cout[12] = 9;
            carte.vente[0] = 5;
            carte.vente[12] = 4;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            break;
        case 171:
            carte.nom = "Loup des neiges";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 3;
            carte.cout[12] = 2;
            carte.vente[0] = 1;
            carte.vente[12] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            break;
        case 172:
            carte.nom = "Serpent";
            define_creature(carte);
            carte.familles.push("Reptile");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            break;
        case 173:
            carte.nom = "Caméléon";
            define_creature(carte);
            carte.familles.push("Reptile");
            carte.cout[0] = 3;
            carte.cout[3] = 3;
            carte.vente[0] = 2;
            carte.vente[3] = 1;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            carte.camouflage = true;
            break;
        case 174:
            carte.nom = "Vipère";
            define_creature(carte);
            carte.familles.push("Reptile");
            carte.cout[0] = 4;
            carte.vente[0] = 2;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            carte.texte = function () {
                return "Quand attaque : applique " + effet_talent_voir("Poison", carte, 2) + " à la Créature attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                if (defenseur.type == "Créature") {
                    defenseur.poison += 2;
                }
            }
            break;
        case 175:
            carte.nom = "Chat";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            break;
        case 176:
            carte.nom = "Chat du mage";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            carte.sorcellerie = 1;
            carte.description = "Les mages sont habitués à avoir un familier à leurs côtés. Ces derniers peuvent avoir des capacités magiques par nature mais également en dévelloper à force d'expérience ou de s'exposer à son maître.";
            break;
        case 177:
            carte.nom = "Cerf";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 8;
            carte.cout[3] = 7;
            carte.vente[0] = 4;
            carte.vente[3] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.percee = 4;
            carte.rapidite = true;
            break;
        case 178:
            carte.nom = "Sanglier";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 8;
            carte.cout[3] = 7;
            carte.vente[0] = 4;
            carte.vente[3] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.charge = true;
            break;
        case 179:
            carte.nom = "Voyage";
            carte.type = "Action";
            carte.cout[0] = 9;
            carte.vente[0] = 4;
            carte.texte = function () {
                return "Pioche 3 Régions dans la boutique.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    let verifier = false;
                    for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                        if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Région") {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        for (let n = 0; n < 3; n++) {
                            let nouvelle_carte = boutique_generer();
                            while (nouvelle_carte.type != "Région") {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                        deplacer(carte, "joueur", "defausse");
                        effet_pose(carte);
                        actualiser_zone();
                    }
                }
                else {
                    return false;
                }
            }
            break;
        case 180:
            carte.nom = "Pyromancien";
            define_creature(carte);
            carte.familles.push("Gobelin");
            carte.cout[0] = 7;
            carte.cout[1] = 6;
            carte.vente[0] = 3;
            carte.vente[1] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand attaque : Inflige 4 dégâts à l'Unité attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                Jeu.combat.defenseur_mort = degats(defenseur, 4).mort;
            }
            break;
        case 181:
            carte.nom = "Cryomancien";
            define_creature(carte);
            carte.familles.push("Goliath");
            carte.cout[0] = 6;
            carte.cout[12] = 5;
            carte.vente[0] = 3;
            carte.vente[12] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand attaque : Applique " + effet_talent_voir("Gel", carte, 1) + " à l'Unité attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                if (defenseur.gel < 1) {
                    defenseur.gel = 1;
                }
            }
            break;
        case 182:
            carte.nom = "Aquomancien";
            define_creature(carte);
            carte.familles.push("Ondin");
            carte.cout[0] = 7;
            carte.cout[2] = 6;
            carte.vente[0] = 3;
            carte.vente[2] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand joue : Ajoute 1 Eau en réserve.";
            }
            carte.effet_action = function () {
                Jeu[carte.camp].ressources[2].reserve++;
            }
            break;
        case 183:
            carte.nom = "Électromancien";
            define_creature(carte);
            carte.familles.push("Satyre");
            carte.cout[0] = 6;
            carte.cout[6] = 5;
            carte.vente[0] = 3;
            carte.vente[6] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand attaque : Inflige 2 dégât aux Unités en avant et en arrière de l'Unité attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                let cible_1, cible_2;
                if (defenseur.slot > 0) {
                    cible_1 = Jeu[defenseur.camp].terrain[defenseur.slot - 1];
                }
                if (defenseur.slot < Jeu[defenseur.camp].terrain.length - 1) {
                    cible_2 = Jeu[defenseur.camp].terrain[defenseur.slot + 1];
                }
                if (defenseur.slot > 0) {
                    degats(cible_1, 1);
                }
                if (defenseur.slot < Jeu[defenseur.camp].terrain.length - 1) {
                    degats(cible_2, 1);
                }
            }
            break;
        case 184:
            carte.nom = "Phitomancien";
            define_creature(carte);
            carte.familles.push("Elfe");
            carte.cout[0] = 7;
            carte.cout[3] = 6;
            carte.vente[0] = 3;
            carte.vente[3] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand joue : Se soigne de 2.<br/>Quand attaque : Applique " + effet_talent_voir("Poison", carte, 4) + " à la Créature attaquée.";
            }
            carte.effet_action = function () {
                if (carte.vie < carte.vie_max) {
                    soin(carte, 2);
                }
            }
            carte.effet_attaque = function (defenseur) {
                if (defenseur.type == "Créature") {
                    defenseur.poison += 4;
                }
            }
            break;
        case 185:
            carte.nom = "Géomancien";
            define_creature(carte);
            carte.familles.push("Nain");
            carte.cout[0] = 9;
            carte.cout[4] = 8;
            carte.vente[0] = 4;
            carte.vente[4] = 4;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand joue : Crée " + effet_carte_voir_id(158, carte) + " sur le terrain en première position.";
            }
            carte.effet_action = function () {
                let nouvelle_carte = obtenir_carte(158);
                nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                ajouter(nouvelle_carte, carte.camp, "terrain");
                Jeu[carte.camp].terrain.unshift(nouvelle_carte);
                Jeu[carte.camp].terrain.splice(Jeu[carte.camp].terrain.length - 1, 1);
                Jeu[carte.camp].terrain[0].slot = 0;
                for (let n = 1; n < Jeu[carte.camp].terrain.length; n++) {
                    Jeu[carte.camp].terrain[n].slot++;
                }
            }
            break;
        case 186:
            carte.nom = "Aéromancien";
            define_creature(carte);
            carte.familles.push("Céleste");
            carte.cout[0] = 7;
            carte.cout[5] = 6;
            carte.vente[0] = 3;
            carte.vente[5] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand joue : Diminue le coût d'amélioration de la boutique de 1 Or.";
            }
            carte.effet_action = function () {
                Jeu.boutique_amelioration--;
                if (Jeu.boutique_amelioration < 0) {
                    Jeu.boutique_amelioration = 0;
                }
            }
            break;
        case 187:
            carte.nom = "Métalomancien";
            define_creature(carte);
            carte.familles.push("Gnome");
            carte.cout[0] = 7;
            carte.cout[7] = 6;
            carte.vente[0] = 3;
            carte.vente[7] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand joue : Se donne 3 défense jusqu'à la fin du tour de combat.";
            }
            carte.effet_action = function () {
                carte.stat_tour.defense += 3;
            }
            break;
        case 188:
            carte.nom = "Arcanomancien";
            define_creature(carte);
            carte.familles.push("Kalashtar");
            carte.cout[0] = 7;
            carte.cout[8] = 6;
            carte.vente[0] = 3;
            carte.vente[8] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand attaque : Inflige 2 fois 2 dégât à une Unité adverse aléatoire sur le terrain.";
            }
            carte.effet_attaque = function (defenseur) {
                let n = 1;
                while (Jeu[defenseur.camp].terrain.length > 0 && n <= 2) {
                    n++;
                    let cible = Jeu[defenseur.camp].terrain[parseInt(Math.random() * Jeu[defenseur.camp].terrain.length)];
                    if (cible.slot == defenseur.slot) {
                        Jeu.combat.defenseur_mort = degats(cible, 1).mort;
                    }
                    else {
                        degats(cible, 1);
                    }
                }
            }
            break;
        case 189:
            carte.nom = "Luxomancien";
            define_creature(carte);
            carte.familles.push("Aasimar");
            carte.cout[0] = 7;
            carte.cout[10] = 6;
            carte.vente[0] = 3;
            carte.vente[10] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand joue : Soigne 4 à la Créature alliée la plus en avant sur le terrain dont la vie est plus basse que sa vie maximale.";
            }
            carte.effet_action = function () {
                if (verifier_soin_creature(carte.camp)) {
                    let best = 0;
                    while (Jeu[carte.camp].terrain[best].type != "Créature" || Jeu[carte.camp].terrain[best].vie == Jeu[carte.camp].terrain[best].vie_max) {
                        best++;
                    }
                    soin(Jeu[carte.camp].terrain[best], 4);
                }
            }
            break;
        case 190:
            carte.nom = "Ombromancien";
            define_creature(carte);
            carte.familles.push("Drow");
            carte.cout[0] = 6;
            carte.cout[11] = 5;
            carte.vente[0] = 3;
            carte.vente[11] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand joue : Applique " + effet_talent_voir("Camouflage", carte) + " à la Créature alliée sur le terrain la plus en avant et ne possèdant pas " + effet_talent_voir("Camouflage", carte) + ".";
            }
            carte.effet_action = function () {
                let verifier = false;
                for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                    if (Jeu[carte.camp].terrain[n].type == "Créature" && !Jeu[carte.camp].terrain[n].camouflage) {
                        verifier = true;
                    }
                }
                if (verifier) {
                    let best = 0;
                    while (Jeu[carte.camp].terrain[best].type != "Créature" || Jeu[carte.camp].terrain[best].camouflage) {
                        best++;
                    }
                    Jeu[carte.camp].terrain[best].camouflage = true;
                }
            }
            break;
        case 191:
            carte.nom = "Illithid";
            define_creature(carte);
            carte.familles.push("Illithid");
            carte.cout[0] = 20;
            carte.cout[8] = 19;
            carte.vente[0] = 10;
            carte.vente[8] = 9;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Quand posé : Place sur le terrain allié une Créature adverse sur le terrain dont la vie est de 10 ou moins.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].vie <= 10 && Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage) {
                                    verifier = true;
                                }
                            }
                            if (verifier && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain dont la vie est de 10 ou moins : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].vie <= 10 && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        div_fin()
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            deplacer(carte, "joueur", "terrain");
                            deplacer(Jeu.adverse.terrain[cible], "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].vie <= 10 && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                            verifier = true;
                        }
                    }
                    if (verifier && !statistique(carte, "silence")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" && Jeu.joueur.terrain[best].vie <= 10 && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && Jeu.joueur.terrain[best].vie <= 10 && Jeu.joueur.terrain[best].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        deplacer(Jeu.joueur.terrain[best], "adverse", "terrain");
                    }
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 192:
            carte.nom = "Épée à louer";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 4;
            carte.vente[0] = 2;
            carte.stat_equipement.attaque = 10;
            carte.temporaire = true;
            carte.texte = function () {
                return "Donne 10 attaque à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 193:
            carte.nom = "Rubis";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 2;
            carte.vente[1] = 1;
            carte.texte = function () {
                return "Donne 1 Feu en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[1].reserve++;
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 194:
            carte.nom = "Azurite";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 2;
            carte.vente[2] = 1;
            carte.texte = function () {
                return "Donne 1 Eau en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[2].reserve++;
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 195:
            carte.nom = "Émeraude";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 2;
            carte.vente[3] = 1;
            carte.texte = function () {
                return "Donne 1 Végétal en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[3].reserve++;
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 196:
            carte.nom = "Topaze";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 2;
            carte.vente[4] = 1;
            carte.texte = function () {
                return "Donne 1 Terre en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[4].reserve++;
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 197:
            carte.nom = "Saphir";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 2;
            carte.vente[5] = 1;
            carte.texte = function () {
                return "Donne 1 Air en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[5].reserve++;
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 198:
            carte.nom = "Quartz";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 2;
            carte.vente[6] = 1;
            carte.texte = function () {
                return "Donne 1 Foudre en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[6].reserve++;
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 199:
            carte.nom = "Bronzite";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 2;
            carte.vente[7] = 1;
            carte.texte = function () {
                return "Donne 1 Métal en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[7].reserve++;
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 200:
            carte.nom = "Améthyste";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 2;
            carte.vente[8] = 1;
            carte.texte = function () {
                return "Donne 1 Arcane en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[8].reserve++;
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 201:
            carte.nom = "Onyx";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 2;
            carte.vente[9] = 1;
            carte.texte = function () {
                return "Donne 1 Mort en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[9].reserve++;
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 202:
            carte.nom = "Perle";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 2;
            carte.vente[10] = 1;
            carte.texte = function () {
                return "Donne 1 Lumière en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[10].reserve++;
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 203:
            carte.nom = "Obsidienne";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 2;
            carte.vente[11] = 1;
            carte.texte = function () {
                return "Donne 1 Ombre en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[11].reserve++;
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 204:
            carte.nom = "Aigue Marine";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 2;
            carte.vente[12] = 1;
            carte.texte = function () {
                return "Donne 1 Glace en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[12].reserve++;
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 205:
            carte.nom = "Squelette mage";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Squelette", "Mage");
            carte.cout[0] = 5;
            carte.cout[9] = 4;
            carte.vente[0] = 2;
            carte.vente[9] = 2;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 1;
            carte.sorcellerie = 2;
            break;
        case 206:
            carte.nom = "Archer squelette";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Squelette");
            carte.cout[0] = 3;
            carte.cout[9] = 3;
            carte.vente[0] = 2;
            carte.vente[9] = 1;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 1;
            carte.portee = true;
            break;
        case 207:
            carte.nom = "Soldat";
            define_creature(carte);
            carte.familles.push("Humain", "Militaire");
            carte.cout[0] = 9;
            carte.vente[0] = 4;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            break;
        case 208:
            carte.nom = "Liche";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Liche");
            carte.cout[0] = 19;
            carte.cout[8] = 10;
            carte.cout[9] = 10;
            carte.vente[0] = 9;
            carte.vente[8] = 5;
            carte.vente[9] = 5;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;

            carte.texte = function () {
                return "Quand posé : Détruis une Créature alliée sur le terrain et se donne 1 attaque et 1 vie.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain") && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            mort(Jeu.joueur.terrain[cible]);
                            carte.attaque++;
                            carte.vie++;
                            carte.vie_max++;
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "terrain") && !statistique(carte, "silence")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (Jeu.adverse.terrain[n].vie < Jeu.adverse.terrain[best].vie && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        mort(Jeu.adverse.terrain[best]);
                        carte.attaque++;
                        carte.vie++;
                        carte.vie_max++;
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 209:
            carte.nom = "Élimination";
            carte.type = "Action";
            carte.cout[0] = 20;
            carte.vente[0] = 10;
            carte.texte = function () {
                return "Détruit une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence)) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            mort(Jeu.adverse.terrain[cible]);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && Jeu.joueur.terrain[best].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        mort(Jeu.joueur.terrain[best]);
                    }
                    deplacer(carte, "adverse", "defausse");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 210:
            carte.nom = "Assassinat";
            carte.type = "Action";
            carte.cout[0] = 14;
            carte.vente[0] = 7;
            carte.texte = function () {
                return "Inflige 10 dégâts à une Créature adverse sur le terrain. Si elle meurt : inflige 5 dégâts au Meneur adverse.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain dont la vie est inférieure ou égale à 10 : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence)) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (degats(Jeu.adverse.terrain[cible], 10).mort) {
                                degats_direct("adverse", 5);
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            if (Jeu.adverse.vie > 0) {
                                actualiser_zone();
                            }
                            else {
                                combat_victoire();
                            }
                            break;
                    }
                }
                else {
                    if (verifier_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[best].vie <= 10) {
                                if (Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && Jeu.joueur.terrain[n].vie <= 10 && Jeu.joueur.terrain[best].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                    best = n;
                                }
                            }
                            else {
                                if ((Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie || Jeu.joueur.terrain[n].vie <= 10) && Jeu.joueur.terrain[best].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                    best = n;
                                }
                            }
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        if (degats(Jeu.joueur.terrain[best], 10).mort) {
                            degats_direct("joueur", 5);
                            if (Jeu.joueur.vie <= 0) {
                                game_over();
                            }
                        }
                        return true;
                    }
                    else {
                        return false;
                    }
                }
            }
            break;
        case 211:
            carte.nom = "Rénovation";
            carte.type = "Action";
            carte.cout[0] = 20;
            carte.vente[0] = 10;
            carte.texte = function () {
                return "Soigne totalement à un Bâtiment allié sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_soin_batiment("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez un Bâtiment allié blessé sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Bâtiment" && Jeu.joueur.terrain[n].vie < Jeu.joueur.terrain[n].vie_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            soin(Jeu.joueur.terrain[cible], Jeu.joueur.terrain[cible].vie_max - Jeu.joueur.terrain[cible].vie);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_soin_batiment("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Bâtiment" || Jeu.adverse.terrain[best].vie >= Jeu.adverse.terrain[best].vie_max) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if ((Jeu.adverse.terrain[n].vie_max - Jeu.adverse.terrain[n].vie) > (Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie) && Jeu.adverse.terrain[n].type == "Bâtiment") {
                                best = n;
                            }
                        }
                        soin(Jeu.adverse.terrain[best], Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 212:
            carte.nom = "Fortification";
            carte.type = "Action";
            carte.cout[0] = 14;
            carte.vente[0] = 7;
            carte.texte = function () {
                return "Donne 2 défense et 5 vie à un Bâtiment allié sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_batiment("joueur", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez un Bâtiment allié sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Bâtiment") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].defense += 2;
                            Jeu.joueur.terrain[cible].vie += 5;
                            Jeu.joueur.terrain[cible].vie_max += 5;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_batiment("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Bâtiment") {
                            best++;
                        }
                        Jeu.adverse.terrain[best].defense += 2;
                        Jeu.adverse.terrain[best].vie += 5;
                        Jeu.adverse.terrain[best].vie_max += 5;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 213:
            carte.nom = "Baliste";
            carte.type = "Bâtiment";
            carte.cout[0] = 13;
            carte.vente[0] = 6;
            carte.vie_max = carte.vie = 5;
            carte.texte = function () {
                return "Au début d'un tour de combat : Inflige 6 dégâts à l'Unité adverse sur le terrain en première position.";
            }
            carte.effet_tour_debut = function () {
                degats(Jeu[camp_oppose(carte.camp)].terrain[0], 6);
            }
            break;
        case 214:
            carte.nom = "Catapulte";
            carte.type = "Bâtiment";
            carte.cout[0] = 13;
            carte.vente[0] = 6;
            carte.vie_max = carte.vie = 5;
            carte.texte = function () {
                return "Au début d'un tour de combat : Inflige 4 dégâts à la Créature adverse sur le terrain en première position ou Inflige 8 dégâts au Bâtiment adverse sur le terrain en première position.";
            }
            carte.effet_tour_debut = function () {
                if (Jeu[camp_oppose(carte.camp)].terrain[0].type == "Bâtiment") {
                    degats(Jeu[camp_oppose(carte.camp)].terrain[0], 8);
                }
                else {
                    degats(Jeu[camp_oppose(carte.camp)].terrain[0], 4);
                }
            }
            break;
        case 215:
            carte.nom = "Diamant";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 25;
            carte.vente[0] = 12;
            carte.texte = function () {
                return "Dépense tout votre Or et, pour chaque 2 Or dépensé, donne 1 Or en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[0].reserve += parseInt(Jeu[carte.camp].ressources[0].courant / 2);
                Jeu[carte.camp].ressources[0].courant = 0;
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 216:
            carte.nom = "Prisme";
            carte.type = "Objet";
            carte.familles.push("Joyau");
            carte.cout[0] = 24;
            carte.vente[0] = 12;
            carte.texte = function () {
                return "Donne 1 Feu, 1 Eau, 1 Végétal, 1 Terre, 1 Air, 1 Foudre, 1 Métal, 1 Arcane, 1 Mort, 1 Lumière, 1 Ombre et 1 Glace en réserve.";
            }
            carte.effet_pose = function () {
                for (let n = 1; n < 13; n++) {
                    Jeu[carte.camp].ressources[n].reserve++;
                }
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 217:
            carte.nom = "Grande faucheuse";
            define_creature(carte);
            carte.familles.push("Faucheuse");
            carte.cout[0] = 25;
            carte.cout[9] = 25;
            carte.vente[0] = 13;
            carte.vente[9] = 12;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 10;
            carte.letalite = true;
            break;
        case 218:
            carte.nom = "Fermier";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 7;
            carte.vente[0] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Au début de la phase de préparation : Donne 1 Or.";
            }
            carte.effet_etage_debut = function () {
                Jeu[carte.camp].ressources[0].courant++;
            }
            break;
        case 219:
            carte.nom = "Ferme";
            carte.type = "Bâtiment";
            carte.cout[0] = 15;
            carte.vente[0] = 7;
            carte.vie_max = carte.vie = 10;
            carte.equipement_max = 1;
            carte.texte = function () {
                return "Au début de la phase de préparation : Donne 3 Or.";
            }
            carte.effet_etage_debut = function () {
                Jeu[carte.camp].ressources[0].courant += 3;
            }
            break;
        case 220:
            carte.nom = "Peau d'écorce";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 6;
            carte.cout[3] = 6;
            carte.vente[0] = 3;
            carte.vente[3] = 3;
            carte.texte = function () {
                return "Donne 5 vie à une Créature alliée sur le terrain.<br/>Sorcellerie 10 : Donne 10 vie à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (sorcellerie("joueur") >= 10) {
                                Jeu.joueur.terrain[cible].vie += 10;
                                Jeu.joueur.terrain[cible].vie_max += 10;
                            }
                            else {
                                µ
                                Jeu.joueur.terrain[cible].vie += 5;
                                Jeu.joueur.terrain[cible].vie_max += 5;
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        if (sorcellerie("adverse") >= 10) {
                            Jeu.adverse.terrain[best].vie += 10;
                            Jeu.adverse.terrain[best].vie_max += 10;
                        }
                        else {
                            Jeu.adverse.terrain[best].vie += 5;
                            Jeu.adverse.terrain[best].vie_max += 5;
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 221:
            carte.nom = "Peau de pierre";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 6;
            carte.cout[4] = 6;
            carte.vente[0] = 3;
            carte.vente[4] = 3;
            carte.texte = function () {
                return "Donne 5 défense à une Créature alliée sur le terrain.<br/>Sorcellerie 10 : Donne 10 défense à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (sorcellerie("joueur") >= 10) {
                                Jeu.joueur.terrain[cible].defense += 10;
                            }
                            else {
                                Jeu.joueur.terrain[cible].defense += 5;
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        if (sorcellerie("adverse") >= 10) {
                            Jeu.adverse.terrain[best].defense += 10;
                        }
                        else {
                            Jeu.adverse.terrain[best].defense += 5;
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 222:
            carte.nom = "Cape d'ombre";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 2;
            carte.cout[11] = 2;
            carte.vente[0] = 1;
            carte.vente[11] = 1;
            carte.stat_equipement.effet_etage_debut = function (creature) {
                creature.camouflage = true;
            }
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Camouflage", carte) + " et l'effet suivant à la Créature equipée : Au début de la phase de préparation : Se donne " + effet_talent_voir("Camouflage", carte) + ".";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            Jeu.joueur.terrain[cible].camouflage = true;
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        Jeu.adverse.terrain[best].camouflage = true;
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            carte.description = "Une cape d'un noir profond, garantissant votre discrétion dans un environnement sombre.";
            break;
        case 223:
            carte.nom = "Frappe";
            carte.type = "Action";
            carte.cout[0] = 20;
            carte.vente[0] = 10;
            carte.texte = function () {
                return "Inflige autant de dégâts à une Unité adverse sur le terrain que l'attaque d'une Créature alliée sur le terrain";
            }
            carte.effet_pose = function (step, cible1, cible2) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain") && verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            let texte = "";

                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                            texte += "<br/><br/>";
                            texte += carte.nom;
                            texte += "<br/>";
                            texte += carte.texte();
                            texte += "<br/><br/>";
                            texte += "Choisissez une Unité adverse sur le terrain : ";
                            texte += "<br/><br/>";
                            texte += "<div class='zone' style='width:48%;'>";
                            texte += "<u>Terrain adverse :</u>";
                            texte += "<br/>";
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                texte += "<div class='carte'>";
                                texte += "<div>";
                                if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                    texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                }
                                else {
                                    texte += "???";
                                }
                                texte += "</div>";
                                if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                    texte += "<div>";
                                    texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(3," + cible1 + "," + n + ")'>Cibler</button>";
                                    texte += "</div>";
                                }
                                texte += "</div>";
                            }
                            texte += "</div>";
                            texte += "</div>";
                            
                            afficher_choix(texte);
                            break;
                        case 3:
                            degats(Jeu.adverse.terrain[cible2], statistique(Jeu.joueur.terrain[cible1], "attaque"));
                            effet_pose(carte);
                            deplacer(carte, "joueur", "defausse");
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain") && verifier_creature("adverse", "terrain")) {
                        let best1 = 0;
                        let best2 = 0;
                        while (Jeu.adverse.terrain[best1].type != "Créature") {
                            best1++;
                        }
                        while (Jeu.joueur.terrain[best2].camouflage) {
                            best2++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (statistique(Jeu.adverse.terrain[n], "attaque") > statistique(Jeu.adverse.terrain[best1], "attaque") && Jeu.adverse.terrain[n].type == "Créature") {
                                best1 = n;
                            }
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best2].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best2 = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[best2], statistique(Jeu.adverse.terrain[best1], "attaque"));
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 224:
            carte.nom = "Écrasement";
            carte.type = "Action";
            carte.cout[0] = 20;
            carte.vente[0] = 10;
            carte.texte = function () {
                return "Inflige autant de dégâts à une Unité adverse sur le terrain que la vie maximale d'une Créature alliée sur le terrain";
            }
            carte.effet_pose = function (step, cible1, cible2) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain") && verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            let texte = "";

                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                            texte += "<br/><br/>";
                            texte += carte.nom;
                            texte += "<br/>";
                            texte += carte.texte();
                            texte += "<br/><br/>";
                            texte += "Choisissez une Unité adverse sur le terrain : ";
                            texte += "<br/><br/>";
                            texte += "<div class='zone' style='width:48%;'>";
                            texte += "<u>Terrain adverse :</u>";
                            texte += "<br/>";
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                texte += "<div class='carte'>";
                                texte += "<div>";
                                if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                    texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                }
                                else {
                                    texte += "???";
                                }
                                texte += "</div>";
                                if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                    texte += "<div>";
                                    texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(3," + cible1 + "," + n + ")'>Cibler</button>";
                                    texte += "</div>";
                                }
                                texte += "</div>";
                            }
                            texte += "</div>";
                            texte += "</div>";
                            
                            afficher_choix(texte);
                            break;
                        case 3:
                            degats(Jeu.adverse.terrain[cible2], statistique(Jeu.joueur.terrain[cible1], "vie_max"));
                            effet_pose(carte);
                            deplacer(carte, "joueur", "defausse");
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain") && verifier_creature("adverse", "terrain")) {
                        let best1 = 0;
                        let best2 = 0;
                        while (Jeu.adverse.terrain[best1].type != "Créature") {
                            best1++;
                        }
                        while (Jeu.joueur.terrain[best2].camouflage) {
                            best2++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (statistique(Jeu.adverse.terrain[n], "vie_max") > statistique(Jeu.adverse.terrain[best1], "vie_max") && Jeu.adverse.terrain[n].type == "Créature") {
                                best1 = n;
                            }
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best2].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best2 = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[best2], statistique(Jeu.adverse.terrain[best1], "vie_max"));
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 225:
            carte.nom = "Coup de boule";
            carte.type = "Action";
            carte.cout[0] = 10;
            carte.vente[0] = 5;
            carte.texte = function () {
                return "Inflige autant de dégâts à l'Unité adverse sur le terrain en première position que l'attaque d'une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain") && Jeu.adverse.terrain.length > 0) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            degats(Jeu.adverse.terrain[0], statistique(Jeu.joueur.terrain[cible], "attaque"));
                            effet_pose(carte);
                            deplacer(carte, "joueur", "defausse");
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (Jeu.joueur.terrain.length > 0 && verifier_creature("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (statistique(Jeu.adverse.terrain[n], "attaque") > statistique(Jeu.adverse.terrain[best], "attaque") && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[0], statistique(Jeu.adverse.terrain[best], "attaque"));
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            carte.description = "Se servir de sa tête est une leçon universelle, surtout si vous avez le crâne dur.";
            break;
        case 226:
            carte.nom = "Boisson fraîche";
            carte.type = "Objet";
            carte.familles.push("Potion");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Enlève " + effet_talent_voir("Brûlure", carte) + " à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_brulure("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée avec " + effet_talent_voir("Brûlure", carte) + " sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].brulure > 0) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].brulure = 0;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_brulure("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].brulure == 0) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (Jeu.adverse.terrain[n].brulure > Jeu.adverse.terrain[best].brulure && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        Jeu.adverse.terrain[best].brulure = 0;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 227:
            carte.nom = "Boisson chaude";
            carte.type = "Objet";
            carte.familles.push("Potion");
            carte.cout[0] = 6;
            carte.vente[0] = 3;
            carte.texte = function () {
                return "Enlève " + effet_talent_voir("Gel", carte) + " à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_gel("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée avec " + effet_talent_voir("Gel", carte) + " sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].gel > 0) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].gel = 0;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_gel("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].gel == 0) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (Jeu.adverse.terrain[n].gel > Jeu.adverse.terrain[best].gel && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        Jeu.adverse.terrain[best].gel = 0;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            carte.description = "L'autre solution est de lui verser de l'huile bouillante sur le crâne mais les résultats seront moins concluants...";
            break;
        case 228:
            carte.nom = "Sels";
            carte.type = "Objet";
            carte.familles.push("Potion");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Enlève " + effet_talent_voir("Étourdissement", carte) + " à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_etourdissement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée avec " + effet_talent_voir("Étourdissement", carte) + " sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].etourdissement) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].etourdissement = false;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_etourdissement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || !Jeu.adverse.terrain[best].etourdissement) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (Jeu.adverse.terrain[n].action > Jeu.adverse.terrain[best].action && Jeu.adverse.terrain[n].etourdissement && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        Jeu.adverse.terrain[best].etourdissement = false;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 229:
            carte.nom = "Pansement";
            carte.type = "Objet";
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Enlève " + effet_talent_voir("Saignement", carte) + " à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_saignement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée avec " + effet_talent_voir("Saignement", carte) + " sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].saignement > 0) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].saignement = 0;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_saignement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].saignement == 0) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (Jeu.adverse.terrain[n].saignement > Jeu.adverse.terrain[best].saignement && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        Jeu.adverse.terrain[best].saignement = 0;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 230:
            carte.nom = "Contrôle mental";
            carte.type = "Action";
            carte.familles.push("Illithid");
            carte.cout[0] = 20;
            carte.cout[8] = 20;
            carte.vente[0] = 10;
            carte.vente[8] = 10;
            carte.texte = function () {
                return "Place sur le terrain allié une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            deplacer(carte, "joueur", "defausse");
                            deplacer(Jeu.adverse.terrain[cible], "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (cout_total(Jeu.joueur.terrain[n]) > cout_total(Jeu.joueur.terrain[best]) && Jeu.joueur.terrain[best].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        deplacer(Jeu.joueur.terrain[best], "adverse", "terrain");
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 231:
            carte.nom = "Caserne";
            carte.type = "Bâtiment";
            carte.familles.push("Militaire");
            carte.cout[0] = 36;
            carte.vente[0] = 18;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Au début d'un tour de combat : Crée " + effet_carte_voir_id(207, carte) + " sur le terrain.";
            }
            carte.effet_tour_debut = function () {
                let nouvelle_carte = obtenir_carte(207);
                nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                ajouter(nouvelle_carte, carte.camp, carte.zone);
            }
            break;
        case 232:
            carte.nom = "Capitaine pirate";
            define_creature(carte);
            carte.familles.push("Humain", "Pirate");
            carte.cout[0] = 27;
            carte.cout[2] = 6;
            carte.vente[0] = 13;
            carte.vente[2] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.texte = function () {
                return "Quand posé : Donne 1 attaque et 1 vie à toutes les Créatures Pirate alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature" && Jeu[carte.camp].terrain[n].familles.includes("Pirate")) {
                            Jeu[carte.camp].terrain[n].attaque++;
                            Jeu[carte.camp].terrain[n].vie_max++;
                            Jeu[carte.camp].terrain[n].vie++;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 233:
            carte.nom = "Élémentaire de sang";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[0] = 9;
            carte.vente[0] = 4;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 5;
            carte.vol_de_vie = 2;
            break;
        case 234:
            carte.nom = "Messager";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 7;
            carte.vente[0] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Pioche 1 carte.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    pioche("joueur");
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 235:
            carte.nom = "Incendie";
            carte.type = "Action";
            carte.cout[0] = 15;
            carte.cout[1] = 15;
            carte.vente[0] = 7;
            carte.vente[1] = 7;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Brûlure", carte, 2) + " à toutes les Unités adverses sur le terrain.";
            }
            carte.effet_pose = function () {
                let verifier = false;
                for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                    if (Jeu[camp_oppose(carte.camp)].terrain[n].brulure < 2) {
                        verifier = true;
                    }
                }
                if (verifier) {
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                        if (Jeu[camp_oppose(carte.camp)].terrain[n].brulure < 2) {
                            Jeu[camp_oppose(carte.camp)].terrain[n].brulure = 2;
                        }
                    }
                    deplacer(carte, "joueur", "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 236:
            carte.nom = "Blizzard";
            carte.type = "Action";
            carte.cout[0] = 15;
            carte.cout[12] = 15;
            carte.vente[0] = 7;
            carte.vente[12] = 7;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Gel", carte, 1) + " à toutes les Unités adverses sur le terrain.";
            }
            carte.effet_pose = function () {
                let verifier = false;
                for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                    if (Jeu[camp_oppose(carte.camp)].terrain[n].gel < 1) {
                        verifier = true;
                    }
                }
                if (verifier) {
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                        if (Jeu[camp_oppose(carte.camp)].terrain[n].gel < 1) {
                            Jeu[camp_oppose(carte.camp)].terrain[n].gel = 1;
                        }
                    }
                    deplacer(carte, "joueur", "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 237:
            carte.nom = "Dague sacrificielle";
            carte.type = "Objet";
            carte.cout[0] = 1;
            carte.texte = function () {
                return "Inflige 2 dégâts à une Créature sur le terrain. Si cette Créature ne meurt pas : La soigne de 2.";
            }
            carte.effet_pose = function (step, cible_camp, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain") || verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                if (Jeu.joueur.terrain.length > 0) {
                                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                        texte += "<div class='carte'>";
                                        texte += "<div>";
                                        texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                        texte += "</div>";
                                        if (Jeu.joueur.terrain[n].type == "Créature") {
                                            texte += "<div>";
                                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + '"joueur",' + n + ")'>Cibler</button>";
                                            texte += "</div>";
                                        }
                                        texte += "</div>";
                                    }
                                }
                                else {
                                    texte += "<i>Votre terrain est vide</i>";
                                    texte += "<br/>";
                                }
                                texte += "</div>";
                                texte += "<br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                if (Jeu.adverse.terrain.length > 0) {
                                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                        texte += "<div class='carte'>";
                                        texte += "<div>";
                                        if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                            texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                        }
                                        else {
                                            texte += "???";
                                        }
                                        texte += "</div>";
                                        if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                            texte += "<div>";
                                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + '"adverse",' + n + ")'>Cibler</button>";
                                            texte += "</div>";
                                        }
                                        texte += "</div>";
                                    }
                                }
                                else {
                                    texte += "<i>Le terrain adverse est vide</i>";
                                    texte += "<br/>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            let mort = degats(Jeu[cible_camp].terrain[cible], 2).mort;
                            if (!mort) {
                                soin(Jeu[cible_camp].terrain[cible], 2);
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier1 = false;
                    let verifier2 = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].vie > 2 && [52].includes(Jeu.adverse.terrain[n].id)) {
                            verifier1 = true;
                        }
                    }
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie <= 2 && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                            verifier2 = true;
                        }
                    }
                    if (verifier1) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].vie <= 2 || ![52].includes(Jeu.adverse.terrain[best].id)) {
                            best++;
                        }
                        let mort = degats(Jeu.adverse.terrain[best], 2).mort;
                        if (!mort) {
                            soin(Jeu.adverse.terrain[best], 2);
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    else if (verifier2) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || Jeu.joueur.terrain[best].vie > 2 || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && Jeu.joueur.terrain[n].vie <= 2 && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        let mort = degats(Jeu.joueur.terrain[best], 2).mort;
                        if (!mort) {
                            soin(Jeu.joueur.terrain[best], 2);
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 238:
            carte.nom = "Plastron de pique";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.stat_equipement.vie_max = 5;
            carte.stat_equipement.epine = 2;
            carte.texte = function () {
                return "Donne 5 vie max et applique " + effet_talent_voir("Épine", carte, 2) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 239:
            carte.nom = "Plastron de plaque";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.stat_equipement.vie_max = 5;
            carte.texte = function () {
                return "Donne 5 vie max et 4 vie supplémentaire à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].vie_sup += 4;
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].vie_sup += 4;
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 240:
            carte.nom = "Diablotin";
            define_creature(carte);
            carte.familles.push("Démon");
            carte.cout[0] = 3;
            carte.cout[1] = 2;
            carte.cout[9] = 2;
            carte.vente[0] = 1;
            carte.vente[1] = 1;
            carte.vente[9] = 1;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.texte = function () {
                return "Quand posé : Inflige 2 dégâts au Meneur allié.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        degats_direct("joueur", 2);
                    }
                    deplacer(carte, carte.camp, "terrain");
                    effet_pose(carte);
                    if (Jeu.joueur.vie > 0) {
                        actualiser_zone();
                    }
                    else {
                        game_over();
                    }
                }
                else {
                    if (Jeu.adverse.vie >= 1) {
                        if (!statistique(carte, "silence")) {
                            degats_direct("adverse", 2);
                        }
                        deplacer(carte, carte.camp, "terrain");
                        effet_pose(carte);
                        actualiser_zone();
                    }
                }
                return true;
            }
            break;
        case 241:
            carte.nom = "Prière";
            carte.type = "Action";
            carte.familles.push("Église");
            carte.cout[0] = 2;
            carte.cout[10] = 1;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Soigne 2 à une Créature alliée sur le terrain.<br/>ou<br/>Pioche 1 carte.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let texte = "";
                            texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                            texte += "<br/><br/>";
                            texte += carte.nom;
                            texte += "<br/>";
                            texte += carte.texte();
                            texte += "<br/><br/>";
                            texte += "Choisissez un effet : ";
                            texte += "<br/><br/>";
                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2)'>Soigne 2 à une Créature alliée sur le terrain</button>";
                            texte += "<br/>";
                            texte += "ou";
                            texte += "<br/>";
                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(4)'>Pioche 1 carte</button>";
                            texte += "</div>";
                            afficher_choix(texte);
                            break;
                        case 2:
                            if (verifier_soin_creature("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += "Soigne 2 à une Créature alliée sur le terrain.";
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie < Jeu.joueur.terrain[n].vie_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(3," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 3:
                            soin(Jeu.joueur.terrain[cible], 2);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                        case 4:
                            pioche("joueur");
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_soin_creature("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].vie >= Jeu.adverse.terrain[best].vie_max) {
                            best++;
                        }
                        soin(Jeu.adverse.terrain[best], 2);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 242:
            carte.nom = "Résurection";
            carte.type = "Action";
            carte.cout[0] = 20;
            carte.cout[10] = 20;
            carte.vente[0] = 10;
            carte.vente[10] = 10;
            carte.texte = function () {
                return "Place sur le terrain une Créature alliée dans la défausse et la soigne totalement.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "defausse")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée dans la défausse : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Défausse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.defausse.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "defausse", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.defausse[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.defausse[cible].vie = Jeu.joueur.defausse[cible].vie_max;
                            deplacer(Jeu.joueur.defausse[cible], "joueur", "terrain");
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "defausse")) {
                        let best = 0;
                        while (Jeu.adverse.defausse[best].type != "Créature") {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.defausse.length; n++) {
                            if (cout_total(Jeu.adverse.defausse[n]) > cout_total(Jeu.adverse.defausse[best]) && Jeu.adverse.defausse[n].type == "Créature") {
                                best = n;
                            }
                        }
                        Jeu.adverse.defausse[best].vie = Jeu.adverse.defausse[best].vie_max;
                        deplacer(Jeu.adverse.defausse[best], "adverse", "terrain");
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 243:
            carte.nom = "Piège à loup";
            carte.type = "Bâtiment";
            carte.familles.push("Piège");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.vie_max = carte.vie = 1;
            carte.texte = function () {
                return "Quand une Créature adverse est posée : Lui inflige 3 dégâts et se détruit.";
            }
            carte.effet_pose_carte = function (carte_pose) {
                if (carte_pose.zone == "terrain" && carte_pose.camp != carte.camp && carte_pose.type == "Créature") {
                    degats(carte_pose, 3);
                    mort(carte);
                }
            }
            break;
        case 244:
            carte.nom = "Golem de lave";
            define_creature(carte);
            carte.familles.push("Golem");
            carte.cout[0] = 20;
            carte.cout[1] = 10;
            carte.cout[4] = 10;
            carte.vente[0] = 10;
            carte.vente[1] = 5;
            carte.vente[4] = 5;
            carte.attaque = 10;
            carte.defense = 10;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Quand attaqué : Applique " + effet_talent_voir("Brûlure", carte, 1) + " à la Créature attaquante.";
            }
            carte.effet_be_attaque = function (attaquant) {
                if (attaquant.brulure < 1) {
                    attaquant.brulure = 1;
                }
            }
            break;
        case 245:
            carte.nom = "Caisse à outils";
            carte.type = "Objet";
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Pioche 1 Objet.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    let verifier = false;
                    for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                        if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Objet") {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let nouvelle_carte = boutique_generer();
                        while (nouvelle_carte.type != "Objet") {
                            nouvelle_carte = boutique_generer();
                        }
                        pioche("joueur", nouvelle_carte);
                        deplacer(carte, "joueur", "defausse");
                        effet_pose(carte);
                        actualiser_zone();
                    }
                }
                else {
                    return false;
                }
            }
            break;
        case 246:
            carte.nom = "Parchemin";
            carte.type = "Objet";
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Pioche 1 Action Sort.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    let verifier = false;
                    for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                        if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).familles.includes("Sort")) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let nouvelle_carte = boutique_generer();
                        while (!nouvelle_carte.familles.includes("Sort")) {
                            nouvelle_carte = boutique_generer();
                        }
                        pioche("joueur", nouvelle_carte);
                        deplacer(carte, "joueur", "defausse");
                        effet_pose(carte);
                        actualiser_zone();
                    }
                }
                else {
                    return false;
                }
            }
            break;
        case 247:
            carte.nom = "Navire marchand";
            carte.type = "Bâtiment";
            carte.familles.push("Bateau");
            carte.cout[0] = 8;
            carte.cout[2] = 8;
            carte.vente[0] = 4;
            carte.vente[2] = 4;
            carte.vie_max = carte.vie = 10;
            carte.mobile = true;
            carte.texte = function () {
                return "Au début d'un tour de combat : Donne 1 Or en réserve.";
            }
            carte.effet_tour_debut = function () {
                Jeu[carte.camp].ressources[0].reserve++;
            }
            break;
        case 248:
            carte.nom = "Bateau de transport";
            carte.type = "Bâtiment";
            carte.familles.push("Bateau");
            carte.cout[0] = 7;
            carte.cout[2] = 7;
            carte.vente[0] = 4;
            carte.vente[2] = 3;
            carte.vie_max = carte.vie = 10;
            carte.mobile = true;
            carte.texte = function () {
                return "Au début de la phase de préparation : Pioche 1 carte.";
            }
            carte.effet_etage_debut = function () {
                if (carte.camp == "joueur") {
                    pioche("joueur");
                }
            }
            break;
        case 249:
            carte.nom = "Écorce de tréant";
            carte.type = "Objet";
            carte.familles.push("Tréant");
            carte.cout[0] = 2;
            carte.cout[3] = 2;
            carte.vente[0] = 1;
            carte.vente[3] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Régénération", carte, 2) + " à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].regeneration += 2;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        Jeu.adverse.terrain[best].regeneration += 2;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 250:
            carte.nom = "Coeur de pierre";
            carte.type = "Objet";
            carte.familles.push("Golem");
            carte.cout[0] = 3;
            carte.cout[4] = 2;
            carte.vente[0] = 1;
            carte.vente[4] = 1;
            carte.texte = function () {
                return "Enlève 2 vie maximale et donne 1 défense à une Créature alliée sur le terrain jusqu'à ce qu'il ne lui reste que 2 vie maximale ou moins.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie_max > 2) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie_max > 2) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            while (Jeu.joueur.terrain[cible].vie_max > 2) {
                                Jeu.joueur.terrain[cible].vie_max -= 2;
                                Jeu.joueur.terrain[cible].defense++;
                            }
                            if (Jeu.joueur.terrain[cible].vie > Jeu.joueur.terrain[cible].vie_max) {
                                Jeu.joueur.terrain[cible].vie = Jeu.joueur.terrain[cible].vie_max;
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].vie_max > 2) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].vie_max <= 2) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (Jeu.adverse.terrain[n].vie_max > Jeu.adverse.terrain[best].vie_max && Jeu.adverse.terrain[n].vie_max > 2 && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        while (Jeu.adverse.terrain[best].vie_max > 2) {
                            Jeu.adverse.terrain[best].vie_max -= 2;
                            Jeu.adverse.terrain[best].defense++;
                        }
                        if (Jeu.adverse.terrain[best].vie > Jeu.adverse.terrain[best].vie_max) {
                            Jeu.adverse.terrain[best].vie = Jeu.adverse.terrain[best].vie_max;
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 251:
            carte.nom = "Graine";
            carte.type = "Objet";
            carte.familles.push("Plante");
            carte.cout[0] = 3;
            carte.cout[3] = 2;
            carte.vente[0] = 1;
            carte.vente[3] = 1;
            carte.texte = function () {
                return "Diminue le coût d'une carte alliée Plante dans la boutique de 5 Végétal.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.boutique.length; n++) {
                                if (Jeu.joueur.boutique[n].familles.includes("Plante") && Jeu.joueur.boutique[n].cout[3] > 0) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une carte Plante dans la boutique : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Boutique :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.boutique.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "boutique", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.boutique[n].familles.includes("Plante") && Jeu.joueur.boutique[n].cout[3] > 0) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.boutique[cible].cout[3] -= 5;
                            if (Jeu.joueur.boutique[cible].cout[3] < 0) {
                                Jeu.joueur.boutique[cible].cout[3] = 0;
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    return false;
                }
            }
            break;
        case 252:
            carte.nom = "Engrais";
            carte.type = "Objet";
            carte.familles.push("Plante");
            carte.cout[0] = 8;
            carte.cout[3] = 8;
            carte.vente[0] = 4;
            carte.vente[3] = 4;
            carte.texte = function () {
                return "Donne 10 vie à une Unité alliée Plante sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (["Créature", "Bâtiment"].includes(Jeu.joueur.terrain[n].type) && Jeu.joueur.terrain[n].familles.includes("Plante")) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité alliée Plante sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (["Créature", "Bâtiment"].includes(Jeu.joueur.terrain[n].type) && Jeu.joueur.terrain[n].familles.includes("Plante")) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].vie += 10;
                            Jeu.joueur.terrain[cible].vie_max += 10;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (["Créature", "Bâtiment"].includes(Jeu.adverse.terrain[n].type) && Jeu.adverse.terrain[n].familles.includes("Plante")) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (!["Créature", "Bâtiment"].includes(Jeu.adverse.terrain[best].type) || !Jeu.adverse.terrain[best].familles.includes("Plante")) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].vie += 10;
                        Jeu.adverse.terrain[best].vie_max += 10;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 253:
            carte.nom = "Oeuf de faucon";
            carte.type = "Bâtiment";
            carte.familles.push("Oiseau", "Oeuf");
            carte.cout[0] = 2;
            carte.cout[5] = 2;
            carte.vente[0] = 1;
            carte.vente[5] = 1;
            carte.vie_max = carte.vie = 1;
            carte.texte = function () {
                return "Quand arrive sur le terrain : S'applique 1 Compteur.<br/>A la fin de la phase de combat : S'enlève 1 Compteur.<br/>Si cette carte n'a aucun Compteur : Se détruit et crée " + effet_carte_voir_id(119, carte) + " dans la main.";
            }
            carte.effet_ajouter = function () {
                if (carte.zone == "terrain") {
                    carte.compteur = 1;
                }
            }
            carte.effet_enlever = function () {
                if (carte.zone == "terrain") {
                    carte.compteur = 0;
                }
            }
            carte.effet_etage_fin = function () {
                carte.compteur--;
                carte.effet_compteur();
            }
            carte.effet_compteur = function () {
                if (carte.compteur == 0) {
                    let nouvelle_carte = obtenir_carte(119);
                    nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    ajouter(nouvelle_carte, carte.camp, "main");
                    carte.vie = 0;
                }
            }
            break;
        case 254:
            carte.nom = "Moineau";
            define_creature(carte);
            carte.familles.push("Oiseau");
            carte.cout[0] = 1;
            carte.cout[5] = 1;
            carte.vente[0] = 1;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 2;
            break;
        case 255:
            carte.nom = "Oeufs de moineau";
            carte.type = "Bâtiment";
            carte.familles.push("Oiseau", "Oeuf");
            carte.cout[0] = 3;
            carte.cout[5] = 2;
            carte.vente[0] = 1;
            carte.vente[5] = 1;
            carte.vie_max = carte.vie = 1;
            carte.texte = function () {
                return "Quand arrive sur le terrain : S'applique 1 Compteur.<br/>A la fin de la phase de combat : S'enlève 1 Compteur.<br/>Si cette carte n'a aucun Compteur : Se détruit et crée 3 " + effet_carte_voir_id(254, carte) + " dans la main.";
            }
            carte.effet_ajouter = function () {
                if (carte.zone == "terrain") {
                    carte.compteur = 1;
                }
            }
            carte.effet_enlever = function () {
                if (carte.zone == "terrain") {
                    carte.compteur = 0;
                }
            }
            carte.effet_etage_fin = function () {
                carte.compteur--;
                carte.effet_compteur();
            }
            carte.effet_compteur = function () {
                if (carte.compteur == 0) {
                    for (let n = 0; n < 3; n++) {
                        let nouvelle_carte = obtenir_carte(254);
                        nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                        ajouter(nouvelle_carte, carte.camp, "main");
                    }
                    carte.vie = 0;
                }
            }
            break;
        case 256:
            carte.nom = "Vampirification";
            carte.type = "Action";
            carte.familles.push("Vampire");
            carte.cout[0] = 3;
            carte.cout[11] = 2;
            carte.vente[0] = 1;
            carte.vente[11] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Vol de vie", carte, 2) + " et donne la famille Vampire à une Créature alliée non-Vampire sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].familles.includes("Vampire")) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée non-Vampire sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].familles.includes("Vampire")) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].vol_de_vie += 2;
                            Jeu.joueur.terrain[cible].familles.push("Vampire");
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].familles.includes("Vampire")) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].familles.includes("Vampire")) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].vol_de_vie += 2;
                        Jeu.adverse.terrain[best].familles.push("Vampire");
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 257:
            carte.nom = "Roulade";
            carte.type = "Action";
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Esquive", carte) + " à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].esquive) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].esquive) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].esquive = true;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].esquive) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" && !Jeu.adverse.terrain[best].esquive) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].esquive = true;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 258:
            carte.nom = "Hache de cuivre";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 4;
            carte.vente[0] = 2;
            carte.stat_equipement.attaque = 5;
            carte.stat_equipement.erosion = 1;
            carte.texte = function () {
                return "Donne 5 attaque et applique " + effet_talent_voir("Érosion", carte, 1) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 259:
            carte.nom = "Masse de cuivre";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.stat_equipement.charge = true;
            carte.texte = function () {
                return "Donne 5 attaque et applique " + effet_talent_voir("Charge", carte) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 260:
            carte.nom = "Balise de répérage";
            carte.type = "Objet";
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Enlève " + effet_talent_voir("Camouflage", carte) + " à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].camouflage) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].camouflage) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible].camouflage = false;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].camouflage) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (!(Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        Jeu.joueur.terrain[best].camouflage = false;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 261:
            carte.nom = "Espion";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 6;
            carte.vente[0] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Révèle une carte adverse dans la main.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.adverse.main.length; n++) {
                                if (Jeu.adverse.main[n].cache) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une carte adverse dans la main : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Main adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.main.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.main[n].cache) {
                                        texte += afficher_carte("adverse", "main", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.main[n].cache) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            Jeu.adverse.main[cible].cache = Jeu.adverse.main[cible].camouflage = false;
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.main.length; n++) {
                        if (Jeu.joueur.main[n].cache) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (!Jeu.joueur.main[best].cache) {
                            best++;
                        }
                        Jeu.joueur.main[best].cache = Jeu.joueur.main[best].camouflage = false;
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 262:
            carte.nom = "Voyante";
            define_creature(carte);
            carte.familles.push("Kalashtar");
            carte.cout[0] = 3;
            carte.cout[8] = 3;
            carte.vente[0] = 2;
            carte.vente[8] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Révèle une carte adverse dans la boutique.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.adverse.boutique.length; n++) {
                                if (Jeu.adverse.boutique[n].cache) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une carte adverse dans la boutique : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Boutique adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.boutique.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.boutique[n].cache) {
                                        texte += afficher_carte("adverse", "boutique", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.boutique[n].cache) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            Jeu.adverse.boutique[cible].cache = Jeu.adverse.boutique[cible].camouflage = false;
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.boutique.length; n++) {
                        if (Jeu.joueur.boutique[n].cache) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (!Jeu.joueur.boutique[best].cache) {
                            best++;
                        }
                        Jeu.joueur.boutique[best].cache = Jeu.joueur.boutique[best].camouflage = false;
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 263:
            carte.nom = "Prédiction";
            carte.type = "Action";
            carte.cout[0] = 3;
            carte.cout[8] = 3;
            carte.vente[0] = 2;
            carte.vente[8] = 1;
            carte.texte = function () {
                return "Révèle 3 cartes adverses dans la boutique.";
            }
            carte.effet_pose = function () {
                let verifier = false;
                for (let n = 0; n < Jeu[camp_oppose(carte.camp)].boutique.length; n++) {
                    if (Jeu[camp_oppose(carte.camp)].boutique[n].cache) {
                        verifier = true;
                    }
                }
                if (verifier) {
                    let compteur = 3;
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].boutique.length; n++) {
                        if (Jeu[camp_oppose(carte.camp)].boutique[n].cache && compteur > 0) {
                            Jeu[camp_oppose(carte.camp)].boutique[n].cache = Jeu[camp_oppose(carte.camp)].boutique[n].camouflage = false;
                            compteur--;
                        }
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 264:
            carte.nom = "Écouter aux portes";
            carte.type = "Action";
            carte.cout[0] = 6;
            carte.vente[0] = 3;
            carte.texte = function () {
                return "Révèle 3 cartes adverses dans la main.";
            }
            carte.effet_pose = function () {
                let verifier = false;
                for (let n = 0; n < Jeu[camp_oppose(carte.camp)].main.length; n++) {
                    if (Jeu[camp_oppose(carte.camp)].main[n].cache) {
                        verifier = true;
                    }
                }
                if (verifier) {
                    let compteur = 3;
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].main.length; n++) {
                        if (Jeu[camp_oppose(carte.camp)].main[n].cache && compteur > 0) {
                            Jeu[camp_oppose(carte.camp)].main[n].cache = Jeu[camp_oppose(carte.camp)].main[n].camouflage = false;
                            compteur--;
                        }
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 265:
            carte.nom = "Espionnage";
            carte.type = "Action";
            carte.cout[0] = 20;
            carte.vente[0] = 10;
            carte.texte = function () {
                return "Révèle toutes les cartes adverses dans la main.";
            }
            carte.effet_pose = function () {
                let verifier = false;
                for (let n = 0; n < Jeu[camp_oppose(carte.camp)].main.length; n++) {
                    if (Jeu[camp_oppose(carte.camp)].main[n].cache) {
                        verifier = true;
                    }
                }
                if (verifier) {
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].main.length; n++) {
                        if (Jeu[camp_oppose(carte.camp)].main[n].cache) {
                            Jeu[camp_oppose(carte.camp)].main[n].cache = Jeu[camp_oppose(carte.camp)].main[n].camouflage = false;
                        }
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 266:
            carte.nom = "Visions de l'avenir";
            carte.type = "Action";
            carte.cout[0] = 10;
            carte.cout[8] = 10;
            carte.vente[0] = 5;
            carte.vente[8] = 5;
            carte.texte = function () {
                return "Révèle toutes les cartes adverses dans la boutique.";
            }
            carte.effet_pose = function () {
                let verifier = false;
                for (let n = 0; n < Jeu[camp_oppose(carte.camp)].boutique.length; n++) {
                    if (Jeu[camp_oppose(carte.camp)].boutique[n].cache) {
                        verifier = true;
                    }
                }
                if (verifier) {
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].boutique.length; n++) {
                        if (Jeu[camp_oppose(carte.camp)].boutique[n].cache) {
                            Jeu[camp_oppose(carte.camp)].boutique[n].cache = Jeu[camp_oppose(carte.camp)].boutique[n].camouflage = false;
                        }
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 267:
            carte.nom = "Révélation";
            carte.type = "Action";
            carte.cout[0] = 2;
            carte.cout[10] = 1;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Enlève " + effet_talent_voir("Camouflage", carte) + " à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].camouflage) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].camouflage) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible].camouflage = false;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].camouflage) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (!(Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        Jeu.joueur.terrain[best].camouflage = false;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 268:
            carte.nom = "Dissiper les ombres";
            carte.type = "Action";
            carte.cout[0] = 15;
            carte.cout[10] = 15;
            carte.vente[0] = 8;
            carte.vente[10] = 7;
            carte.texte = function () {
                return "Enlève " + effet_talent_voir("Camouflage", carte) + " à toutes les Unités adverses sur le terrain.";
            }
            carte.effet_pose = function () {
                let verifier = false;
                for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                    if (Jeu[camp_oppose(carte.camp)].terrain[n].camouflage) {
                        verifier = true;
                    }
                }
                if (verifier) {
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                        if (Jeu[camp_oppose(carte.camp)].terrain[n].cache) {
                            Jeu[camp_oppose(carte.camp)].terrain[n].camouflage = false;
                        }
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 269:
            carte.nom = "Carte";
            carte.type = "Objet";
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.texte = function () {
                return "Bannis toutes les cartes alliées dans la boutique et pioche jusqu'à 5 cartes différentes.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    Jeu.joueur.boutique = [];
                    let liste_carte = [];
                    for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                        if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n))) {
                            liste_carte.push(n);
                        }
                    }
                    let array = [];
                    while (array.length < 5 && array.length < liste_carte.length) {
                        let carte_id = liste_carte[parseInt(Math.random() * liste_carte.length)];
                        while (array.includes(carte_id)) {
                            carte_id = liste_carte[parseInt(Math.random() * liste_carte.length)];
                        }
                        array.push(carte_id);
                        pioche("joueur", obtenir_carte(carte_id));
                    }
                    deplacer(carte, "joueur", "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                }
                return false;
            }
            break;
        case 270:
            carte.nom = "Voleur";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 7;
            carte.vente[0] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Enlève 2 Or à l'adversaire.";
            }
            carte.effet_pose = function () {
                Jeu[camp_oppose(carte.camp)].ressources[0].courant -= 2;
                if (Jeu[camp_oppose(carte.camp)].ressources[0].courant < 0) {
                    Jeu[camp_oppose(carte.camp)].ressources[0].courant = 0;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 271:
            carte.nom = "Vol à la tire";
            carte.type = "Action";
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Enlève 5 Or à l'adversaire.";
            }
            carte.effet_pose = function () {
                if (Jeu[camp_oppose(carte.camp)].ressources[0].courant > 0) {
                    Jeu[camp_oppose(carte.camp)].ressources[0].courant -= 5;
                    if (Jeu[camp_oppose(carte.camp)].ressources[0].courant < 0) {
                        Jeu[camp_oppose(carte.camp)].ressources[0].courant = 0;
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 272:
            carte.nom = "Bourse";
            carte.type = "Objet";
            carte.cout[0] = 10;
            carte.vente[0] = 5;
            carte.texte = function () {
                return "Ajoute 5 Or en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[0].reserve += 5;
                deplacer(carte, carte.camp, "defausse");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 273:
            carte.nom = "Pièce de monnaie";
            carte.type = "Objet";
            carte.cout[0] = 2;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Ajoute 1 Or en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[0].reserve++;
                deplacer(carte, carte.camp, "defausse");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 274:
            carte.nom = "Banquier";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 11;
            carte.vente[0] = 5;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Au début de la phase de préparation : Donne 1 Or max.";
            }
            carte.effet_etage_debut = function () {
                Jeu[carte.camp].ressources[0].max++;
            }
            break;
        case 275:
            carte.nom = "Banque";
            carte.type = "Bâtiment";
            carte.cout[0] = 27;
            carte.vente[0] = 13;
            carte.vie_max = carte.vie = 10;
            carte.equipement_max = 1;
            carte.texte = function () {
                return "Au début de la phase de préparation : Donne 3 Or max.";
            }
            carte.effet_etage_debut = function () {
                Jeu[carte.camp].ressources[0].max += 3;
            }
            break;
        case 276:
            carte.nom = "Trésor";
            carte.type = "Objet";
            carte.cout[0] = 12;
            carte.vente[0] = 6;
            carte.texte = function () {
                return "Pioche 6 cartes.<br/>ou<br/>Donne 4 Or max.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let texte = "";
                            texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                            texte += "<br/><br/>";
                            texte += carte.nom;
                            texte += "<br/>";
                            texte += carte.texte();
                            texte += "<br/><br/>";
                            texte += "Choisissez un effet : ";
                            texte += "<br/><br/>";
                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2)'>Pioche 6 cartes</button>";
                            texte += "<br/>";
                            texte += "ou";
                            texte += "<br/>";
                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(3)'>Donne 4 Or max</button>";
                            texte += "</div>";
                            afficher_choix(texte);
                            break;
                        case 2:
                            pioches("joueur", 6);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                        case 3:
                            Jeu.joueur.ressources[0].max += 4;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    Jeu.adverse.ressources[0].max += 4;
                    deplacer(carte, "adverse", "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
            }
            break;
        case 277:
            carte.nom = "Pillage";
            carte.type = "Action";
            carte.cout[0] = 10;
            carte.vente[0] = 5;
            carte.texte = function () {
                return "Ajoute autant d'Or que de carte dans la défausse adverse.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[0].courant += Jeu[camp_oppose(carte.camp)].defausse.length;
                deplacer(carte, carte.camp, "defausse");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 278:
            carte.nom = "Lingot d'or";
            carte.type = "Objet";
            carte.cout[0] = 20;
            carte.vente[0] = 10;
            carte.texte = function () {
                return "Ajoute 10 Or en réserve.";
            }
            carte.effet_pose = function () {
                Jeu[carte.camp].ressources[0].reserve += 10;
                deplacer(carte, carte.camp, "defausse");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 279:
            carte.nom = "Colère";
            carte.type = "Action";
            carte.cout[0] = 15;
            carte.vente[0] = 7;
            carte.texte = function () {
                return "Inflige autant de dégâts à une Unité adverse sur le terrain que de vie manquante du meneur allié.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain") && Jeu.joueur.vie < Jeu.joueur.vie_max) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            degats(Jeu.adverse.terrain[cible], Jeu.joueur.vie_max - Jeu.joueur.vie);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain") && Jeu.adverse.vie < Jeu.adverse.vie_max) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        let dif_vie = Jeu.adverse.vie_max - Jeu.adverse.vie;
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if ((Jeu.joueur.terrain[n].vie <= dif_vie && Jeu.joueur.terrain[best].vie > dif_vie) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[best], dif_vie);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 280:
            carte.nom = "Coffre doré";
            carte.type = "Objet";
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Pioche 1 carte du niveau de boutique actuel.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    let nouvelle_carte = boutique_generer();
                    while (cout_total(nouvelle_carte) <= (Jeu.boutique_niveau - 1) * 5 || cout_total(nouvelle_carte) > Jeu.boutique_niveau * 5) {
                        nouvelle_carte = boutique_generer();
                    }
                    pioche("joueur", nouvelle_carte);
                    deplacer(carte, "joueur", "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                }
                return false;
            }
            break;
        case 281:
            carte.nom = "Rage";
            carte.type = "Action";
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Donne autant d'attaque à une Créature alliée qu'elle a de vie manquante sur le terrain jusqu'à la fin de la phase de combat.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie_max > Jeu.joueur.terrain[n].vie) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie_max > Jeu.joueur.terrain[n].vie) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].stat_etage.attaque += Jeu.joueur.terrain[cible].vie_max - Jeu.joueur.terrain[cible].vie;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].vie_max > Jeu.adverse.terrain[n].vie) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].vie_max <= Jeu.adverse.terrain[best].vie) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].vie_max > Jeu.adverse.terrain[n].vie && (Jeu.adverse.terrain[n].vie_max - Jeu.adverse.terrain[n].vie) > (Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie)) {
                                best = n;
                            }
                        }
                        Jeu.adverse.terrain[best].stat_etage.attaque += Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 282:
            carte.nom = "Envie";
            carte.type = "Action";
            carte.cout[0] = 40;
            carte.vente[0] = 20;
            carte.texte = function () {
                return "Place dans la main alliée une carte de la main adverse.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (Jeu.adverse.main.length > 0) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une carte adverse dans la main : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Main adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.main.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.main[n].cache) {
                                        texte += afficher_carte("adverse", "main", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.main[n].cache) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.main[cible].cache = Jeu.adverse.main[cible].camouflage = false;
                            deplacer(Jeu.adverse.main[cible], "joueur", "main");
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (Jeu.joueur.main.length > 0) {
                        let best = 0;
                        for (let n = 0; n < Jeu.joueur.main.length; n++) {
                            if (!Jeu.joueur.main[n].cache && (Jeu.joueur.main[best].cache || (cout_total(Jeu.joueur.main[n]) > cout_total(Jeu.joueur.main[best])))) {
                                best = n;
                            }
                        }
                        Jeu.joueur.main[best].cache = Jeu.joueur.main[best].camouflage = false;
                        deplacer(Jeu.joueur.main[best], "adverse", "main");
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 283:
            carte.nom = "Éclosion";
            carte.type = "Action";
            carte.familles.push("Oeuf");
            carte.cout[0] = 10;
            carte.vente[0] = 5;
            carte.texte = function () {
                return "Met le Compteur d'un Bâtiment allié Oeuf sur le terrain à 0.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Bâtiment" && Jeu.joueur.terrain[n].familles.includes("Oeuf")) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez un Bâtiment allié Oeuf sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Bâtiment" && Jeu.joueur.terrain[n].familles.includes("Oeuf")) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].compteur = 0;
                            Jeu.joueur.terrain[cible].effet_compteur();
                            if (Jeu.joueur.terrain[cible].vie == 0) {
                                mort(Jeu.joueur.terrain[cible]);
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Bâtiment" && Jeu.adverse.terrain[n].familles.includes("Oeuf")) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Bâtiment" || !Jeu.adverse.terrain[best].familles.includes("Oeuf")) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].compteur = 0;
                        Jeu.adverse.terrain[best].effet_compteur();
                        if (Jeu.adverse.terrain[best].vie == 0) {
                            mort(Jeu.adverse.terrain[best]);
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 284:
            carte.nom = "Potion d'attaque";
            carte.type = "Objet";
            carte.familles.push("Potion");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Donne 6 attaque à une Créature alliée sur le terrain jusqu'à la fin de la phase de combat.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].stat_etage.attaque += 6;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        Jeu.adverse.terrain[best].stat_etage.attaque += 6;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 285:
            carte.nom = "Potion de défense";
            carte.type = "Objet";
            carte.familles.push("Potion");
            carte.cout[0] = 4;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Donne 4 défense à une Créature alliée sur le terrain jusqu'à la fin de la phase de combat.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].stat_etage.defense += 4;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        Jeu.adverse.terrain[best].stat_etage.defense += 4;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 286:
            carte.nom = "Potion de vitalité";
            carte.type = "Objet";
            carte.familles.push("Potion");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Donne 3 vie à une Créature alliée sur le terrain jusqu'à la fin de la phase de combat.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].stat_etage.vie_max += 3;
                            Jeu.joueur.terrain[cible].vie += 3;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        Jeu.adverse.terrain[best].stat_etage.vie_max += 3;
                        Jeu.adverse.terrain[best].vie += 3;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 287:
            carte.nom = "Alchimiste";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Pioche 1 Objet Potion.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let verifier = false;
                        for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                            if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Objet" && obtenir_carte(n).familles.includes("Potion")) {
                                verifier = true;
                            }
                        }
                        if (verifier) {
                            let nouvelle_carte = boutique_generer();
                            while (nouvelle_carte.type != "Objet" || !nouvelle_carte.familles.includes("Potion")) {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 288:
            carte.nom = "Vendeur";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 5;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand vendu : Pioche 1 carte.";
            }
            carte.effet_vente = function () {
                pioche("joueur");
            }
            break;
        case 289:
            carte.nom = "Vendeur de potion";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 6;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand vendu : Pioche 1 Objet Potion.";
            }
            carte.effet_vente = function () {
                let verifier = false;
                for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                    if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Objet" && obtenir_carte(n).familles.includes("Potion")) {
                        verifier = true;
                    }
                }
                if (verifier) {
                    let nouvelle_carte = boutique_generer();
                    while (nouvelle_carte.type != "Objet" || !nouvelle_carte.familles.includes("Potion")) {
                        nouvelle_carte = boutique_generer();
                    }
                    pioche("joueur", nouvelle_carte);
                }
            }
            break;
        case 290:
            carte.nom = "Grimoire d'apprenti";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 4;
            carte.vente[0] = 2;
            carte.stat_equipement.effet_etage_debut = function () {
                if (carte.camp == "joueur") {
                    let verifier = false;
                    for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                        if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).familles.includes("Sort")) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let nouvelle_carte = boutique_generer();
                        while (!nouvelle_carte.familles.includes("Sort")) {
                            nouvelle_carte = boutique_generer();
                        }
                        pioche("joueur", nouvelle_carte);
                    }
                }
            }
            carte.texte = function () {
                return "Applique l'effet suivant à la Créature équipée : Au début de la phase de préparation : Pioche 1 Action Sort.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 291:
            carte.nom = "Fouet de cuir";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.stat_equipement.effet_attaque = function (attaquant, defenseur) {
                let cible_1, cible_2;
                if (defenseur.slot > 0) {
                    cible_1 = Jeu[defenseur.camp].terrain[defenseur.slot - 1];
                }
                if (defenseur.slot < Jeu[defenseur.camp].terrain.length - 1) {
                    cible_2 = Jeu[defenseur.camp].terrain[defenseur.slot + 1];
                }
                if (defenseur.slot > 0) {
                    degats(cible_1, 1);
                }
                if (defenseur.slot < Jeu[defenseur.camp].terrain.length - 1) {
                    degats(cible_2, 1);
                }
            }
            carte.texte = function () {
                return "Applique l'effet suivant à la Créature équipée : Inflige 1 dégât aux Unités en avant et en arrière de l'Unité attaquée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 292:
            carte.nom = "Casque en cuir";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.stat_equipement.vie_max = 2;
            carte.texte = function () {
                return "Donne 2 vie à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].vie += 2;
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].vie += 2;
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 293:
            carte.nom = "Pistolet en cuivre";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.stat_equipement.portee = true;
            carte.stat_equipement.effet_attaque = function (attaquant, defenseur) {
                degats(defenseur, 2);
            }
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Portée", carte) + " et l'effet suivant à la Créature équipée : Quand attaque : Inflige 2 dégât à l'unité attaquée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 294:
            carte.nom = "Arbalète en bois";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 10;
            carte.vente[0] = 5;
            carte.stat_equipement.portee = true;
            carte.stat_equipement.percee = 2;
            carte.stat_equipement.attaque = 10;
            carte.texte = function () {
                return "Donne 10 attaque, applique " + effet_talent_voir("Portée", carte) + " et " + effet_talent_voir("Percée", carte, 2) + " à la créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 295:
            carte.nom = "Pluie de feu";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 17;
            carte.cout[1] = 17;
            carte.vente[0] = 8;
            carte.vente[1] = 8;
            carte.texte = function () {
                return "Inflige 3 dégâts à toutes les Unités adverses sur le terrain.<br/>Sorcellerie 20 : Inflige 5 dégâts à toutes les Unités adverses sur le terrain.";
            }
            carte.effet_pose = function () {
                if (Jeu[camp_oppose(carte.camp)].terrain.length > 0) {
                    let array = [];
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                        array.push(Jeu[camp_oppose(carte.camp)].terrain[n]);
                    }
                    if (sorcellerie(carte.camp) >= 20) {
                        for (let n = 0; n < array.length; n++) {
                            degats(array[n], 5);
                        }
                    }
                    else {
                        for (let n = 0; n < array.length; n++) {
                            degats(array[n], 3);
                        }
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 296:
            carte.nom = "Éruption";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 12;
            carte.cout[1] = 12;
            carte.vente[0] = 6;
            carte.vente[1] = 6;
            carte.texte = function () {
                return "Inflige 20 dégâts à une Unité adverse sur le terrain.<br/>Sorcellerie 20 : Inflige 40 dégâts à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            let carte_cible = Jeu.adverse.terrain[cible];
                            if (sorcellerie("joueur") >= 20) {
                                degats(carte_cible, 40);
                            }
                            else {
                                degats(carte_cible, 20);
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        if (sorcellerie("adverse") >= 20) {
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if ((Jeu.joueur.terrain[n].vie <= 40 && Jeu.joueur.terrain[best].vie > 40) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                    best = n;
                                }
                            }
                            degats(Jeu.joueur.terrain[best], 40);
                        }
                        else {
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if ((Jeu.joueur.terrain[n].vie <= 20 && Jeu.joueur.terrain[best].vie > 20) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                    best = n;
                                }
                            }
                            degats(Jeu.joueur.terrain[best], 20);
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 297:
            carte.nom = "Bulle protectrice";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 3;
            carte.cout[2] = 3;
            carte.vente[0] = 2;
            carte.vente[2] = 1;
            carte.texte = function () {
                return "Donne 10 vie supplémentaire à une Créature alliée sur le terrain.<br/>Sorcellerie 5 : Donne 20 vie supplémentaire à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (sorcellerie("joueur") >= 5) {
                                Jeu.joueur.terrain[cible].vie_sup = 20;
                            }
                            else {
                                Jeu.joueur.terrain[cible].vie_sup = 10;
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        if (sorcellerie("adverse") >= 5) {
                            Jeu.adverse.terrain[best].vie_sup = 20;
                        }
                        else {
                            Jeu.adverse.terrain[best].vie_sup = 10;
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 298:
            carte.nom = "Vague déferlante";
            carte.type = "Action";
            carte.cout[0] = 15;
            carte.cout[2] = 15;
            carte.vente[0] = 8;
            carte.vente[2] = 7;
            carte.texte = function () {
                return "Inflige 3 dégâts à toutes les Unités adverses sur le terrain.";
            }
            carte.effet_pose = function () {
                if (Jeu[camp_oppose(carte.camp)].terrain.length > 0) {
                    let array = [];
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                        array.push(Jeu[camp_oppose(carte.camp)].terrain[n]);
                    }
                    for (let n = 0; n < array.length; n++) {
                        degats(array[n], 3);
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 299:
            carte.nom = "Revigorer";
            carte.type = "Action";
            carte.cout[0] = 10;
            carte.cout[3] = 10;
            carte.vente[0] = 5;
            carte.vente[3] = 5;
            carte.texte = function () {
                return "Soigne totalement une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_soin_creature("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée blessée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie < Jeu.joueur.terrain[n].vie_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            soin(Jeu.joueur.terrain[cible], Jeu.joueur.terrain[cible].vie_max - Jeu.joueur.terrain[cible].vie);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_soin_creature("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].vie >= Jeu.adverse.terrain[best].vie_max) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if ((Jeu.adverse.terrain[n].vie_max - Jeu.adverse.terrain[n].vie) > (Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie) && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        soin(Jeu.adverse.terrain[best], Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 300:
            carte.nom = "Plantation";
            carte.type = "Action";
            carte.cout[0] = 8;
            carte.cout[3] = 7;
            carte.vente[0] = 4;
            carte.vente[3] = 3;
            carte.texte = function () {
                return "Pioche 5 cartes Plante.";
            }
            carte.effet_pose = function () {
                let verifier = false;
                for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                    if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).familles.includes("Plante")) {
                        verifier = true;
                    }
                }
                if (carte.camp == "joueur" && verifier) {
                    for (let n = 0; n < 5; n++) {
                        let nouvelle_carte = boutique_generer();
                        while (!nouvelle_carte.familles.includes("Plante")) {
                            nouvelle_carte = boutique_generer();
                        }
                        pioche("joueur", nouvelle_carte);
                    }
                    deplacer(carte, "joueur", "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 301:
            carte.nom = "Tremblement de terre";
            carte.type = "Action";
            carte.cout[0] = 8;
            carte.cout[4] = 8;
            carte.vente[0] = 4;
            carte.vente[4] = 4;
            carte.texte = function () {
                return "Inflige 2 dégâts à toutes les Unités adverses non-Air sur le terrain.";
            }
            carte.effet_pose = function () {
                if (Jeu[camp_oppose(carte.camp)].terrain.length > 0) {
                    let array = [];
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                        array.push(Jeu[camp_oppose(carte.camp)].terrain[n]);
                    }
                    for (let n = 0; n < array.length; n++) {
                        if (!array[n].elements.includes("Air")) {
                            degats(array[n], 2);
                        }
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 302:
            carte.nom = "Chute de pierre";
            carte.type = "Action";
            carte.cout[0] = 3;
            carte.cout[4] = 2;
            carte.vente[0] = 1;
            carte.vente[4] = 1;
            carte.texte = function () {
                return "Inflige 5 dégâts à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            degats(Jeu.adverse.terrain[cible], 5);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if ((Jeu.joueur.terrain[n].vie <= 5 && Jeu.joueur.terrain[best].vie > 5) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[best], 5);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 303:
            carte.nom = "Vent violent";
            carte.type = "Action";
            carte.cout[0] = 2;
            carte.cout[5] = 1;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Place en dernière position une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            deplacer(Jeu.adverse.terrain[cible], "adverse", "terrain");
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        deplacer(Jeu.joueur.terrain[best], "joueur", "terrain");
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 304:
            carte.nom = "Bourrasque";
            carte.type = "Action";
            carte.cout[0] = 10;
            carte.cout[5] = 10;
            carte.vente[0] = 5;
            carte.vente[5] = 5;
            carte.texte = function () {
                return "Place à une position aléatoire toutes les Créatures adverses sur le terrain.";
            }
            carte.effet_pose = function () {
                for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                    let position_random = n;
                    while (position_random == n) {
                        position_random = parseInt(Jeu[camp_oppose(carte.camp)].terrain.length * Math.random());
                    }
                    Jeu[camp_oppose(carte.camp)].terrain.splice(position_random, 0, Jeu[camp_oppose(carte.camp)].terrain[n]);
                    Jeu[camp_oppose(carte.camp)].terrain[position_random].slot = position_random;
                    if (position_random < n) {
                        Jeu[camp_oppose(carte.camp)].terrain.splice(n + 1, 1);
                        for (let i = position_random + 1; i <= n; i++) {
                            Jeu[camp_oppose(carte.camp)].terrain[i].slot++;
                        }
                    }
                    else {
                        Jeu[camp_oppose(carte.camp)].terrain.splice(n, 1);
                        for (let i = n; i < position_random; i++) {
                            Jeu[camp_oppose(carte.camp)].terrain[i].slot--;
                        }
                    }
                }
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 305:
            carte.nom = "Tonnerre";
            carte.type = "Action";
            carte.cout[0] = 5;
            carte.cout[6] = 5;
            carte.vente[0] = 3;
            carte.vente[6] = 2;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Silence", carte) + " à une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible].silence = true;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        Jeu.joueur.terrain[best].silence = true;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 306:
            carte.nom = "Arcs électriques";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 4;
            carte.cout[6] = 4;
            carte.vente[0] = 2;
            carte.vente[6] = 2;
            carte.texte = function () {
                return "Inflige 2 dégâts à une Créature adverse sur le terrain et aux Créatures en avant et en arrière de la Créature ciblée.<br/>Sorcellerie 9 : Inflige 5 dégâts à une Créature adverse sur le terrain et aux Créatures en avant et en arrière de la Créature ciblée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            let cible_1, cible_2, cible_3 = false;
                            cible_1 = Jeu.adverse.terrain[cible];
                            if (cible > 0) {
                                if (Jeu.adverse.terrain[cible - 1].type == "Créature") {
                                    cible_2 = Jeu.adverse.terrain[cible - 1];
                                }
                            }
                            if (cible < Jeu.adverse.terrain.length - 1) {
                                if (Jeu.adverse.terrain[cible + 1].type == "Créature") {
                                    cible_3 = Jeu.adverse.terrain[cible + 1];
                                }
                            }
                            let damage;
                            if (sorcellerie("joueur") >= 9) {
                                damage = 5;
                            }
                            else {
                                damage = 2;
                            }
                            degats(cible_1, damage);
                            if (cible_2) {
                                degats(cible_2, damage);
                            }
                            if (cible_3) {
                                degats(cible_3, damage);
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        let cible_1, cible_2, cible_3 = false;
                        cible_1 = Jeu.joueur.terrain[best];
                        if (cible > 0) {
                            if (Jeu.joueur.terrain[cible - 1].type == "Créature") {
                                cible_2 = Jeu.joueur.terrain[cible - 1];
                            }
                        }
                        if (cible < Jeu.joueur.terrain.length - 1) {
                            if (Jeu.joueur.terrain[cible + 1].type == "Créature") {
                                cible_3 = Jeu.joueur.terrain[cible + 1];
                            }
                        }
                        let damage;
                        if (sorcellerie("joueur") >= 9) {
                            damage = 5;
                        }
                        else {
                            damage = 2;
                        }
                        degats(cible_1, damage);
                        if (cible_2) {
                            degats(cible_2, damage);
                        }
                        if (cible_3) {
                            degats(cible_3, damage);
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 307:
            carte.nom = "Forgemagie";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 2;
            carte.cout[7] = 2;
            carte.vente[0] = 1;
            carte.vente[7] = 1;
            carte.texte = function () {
                return "Pioche 1 Objet Équipement.<br/>Sorcellerie 3 : Pioche 2 Objets Équipement.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    let verifier = false;
                    for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                        if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Objet" && obtenir_carte(n).familles.includes("Équipement")) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let nouvelle_carte = boutique_generer();
                        while (nouvelle_carte.type != "Objet" || !nouvelle_carte.familles.includes("Équipement")) {
                            nouvelle_carte = boutique_generer();
                        }
                        pioche("joueur", nouvelle_carte);
                        deplacer(carte, "joueur", "defausse");
                        effet_pose(carte);
                        actualiser_zone();
                    }
                }
                else {
                    return false;
                }
            }
            break;
        case 308:
            carte.nom = "Automatisme";
            carte.type = "Action";
            carte.familles.push("Machine", "Automate");
            carte.cout[0] = 5;
            carte.cout[7] = 4;
            carte.vente[0] = 2;
            carte.vente[7] = 2;
            carte.texte = function () {
                return "Crée 3 " + effet_carte_voir_id(23, carte) + " sur le terrain.";
            }
            carte.effet_pose = function () {
                for (let n = 0; n < 3; n++) {
                    let nouvelle_carte = obtenir_carte(23);
                    nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    ajouter(nouvelle_carte, carte.camp, "terrain");
                }
                deplacer(carte, carte.camp, "defausse");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 309:
            carte.nom = "Bribes arcaniques";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 3;
            carte.cout[8] = 2;
            carte.vente[0] = 1;
            carte.vente[8] = 1;
            carte.texte = function () {
                return "Inflige 3 fois 2 dégât à une Unité adverse aléatoire sur le terrain.<br/>Sorcellerie 7 : Inflige 10 fois 2 dégât à une Unité adverse aléatoire sur le terrain.";
            }
            carte.effet_pose = function () {
                if (Jeu[camp_oppose(carte.camp)].terrain.length > 0) {
                    let n = 3;
                    if (sorcellerie(carte.camp) >= 9) {
                        n = 10;
                    }
                    while (Jeu[camp_oppose(carte.camp)].terrain.length > 0 && n > 0) {
                        n--;
                        let cible = Jeu[camp_oppose(carte.camp)].terrain[parseInt(Math.random() * Jeu[camp_oppose(carte.camp)].terrain.length)];
                        degats(cible, 2);
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 310:
            carte.nom = "Explosion arcanique";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 15;
            carte.cout[8] = 15;
            carte.vente[0] = 8;
            carte.vente[8] = 7;
            carte.texte = function () {
                return "Inflige 1 dégât à toutes les Unités adverses sur le terrain. Inflige 1 dégat supplémentaire pour chaque 10 de Sorcellerie.";
            }
            carte.effet_pose = function () {
                if (Jeu[camp_oppose(carte.camp)].terrain.length > 0) {
                    let array = [];
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                        array.push(Jeu[camp_oppose(carte.camp)].terrain[n]);
                    }
                    for (let n = 0; n < array.length; n++) {
                        degats(array[n], 1 + parseInt(sorcellerie(carte.camp) / 10));
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 311:
            carte.nom = "Amas d'os";
            carte.type = "Action";
            carte.familles.push("Sort", "Mort-vivant", "Squelette");
            carte.cout[0] = 6;
            carte.cout[9] = 5;
            carte.vente[0] = 3;
            carte.vente[9] = 2;
            carte.texte = function () {
                return "Crée 3 " + effet_carte_voir_id(13, carte) + " sur le terrain.<br/>Sorcellerie 6 : Crée 5 " + effet_carte_voir_id(13, carte) + " sur le terrain.";
            }
            carte.effet_pose = function () {
                let nombre = 3;
                if (sorcellerie(carte.camp) >= 6) {
                    nombre = 5;
                }
                for (let n = 0; n < nombre; n++) {
                    let nouvelle_carte = obtenir_carte(13);
                    nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    ajouter(nouvelle_carte, carte.camp, "terrain");
                }
                deplacer(carte, carte.camp, "defausse");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 312:
            carte.nom = "Reconstitution";
            carte.type = "Action";
            carte.familles.push("Mort-vivant", "Zombie");
            carte.cout[0] = 16;
            carte.cout[9] = 16;
            carte.vente[0] = 8;
            carte.vente[9] = 8;
            carte.texte = function () {
                return "Place sur le terrain une Créature alliée Zombie dans la défausse et la soigne totalement.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.defausse.length; n++) {
                                if (Jeu.joueur.defausse[n].type == "Créature" && Jeu.joueur.defausse[n].familles.includes("Zombie")) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée Zombie dans la défausse : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Défausse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.defausse.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "defausse", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.defausse[n].type == "Créature" && Jeu.joueur.defausse[n].familles.includes("Zombie")) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.defausse[cible].vie = Jeu.joueur.defausse[cible].vie_max;
                            deplacer(Jeu.joueur.defausse[cible], "joueur", "terrain");
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.defausse.length; n++) {
                        if (Jeu.adverse.defausse[n].type == "Créature" && Jeu.adverse.defausse[n].familles.includes("Zombie")) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.defausse[best].type != "Créature" || !Jeu.joueur.defausse[n].familles.includes("Zombie")) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.defausse.length; n++) {
                            if (cout_total(Jeu.adverse.defausse[n]) > cout_total(Jeu.adverse.defausse[best]) && Jeu.adverse.defausse[n].type == "Créature" && Jeu.joueur.defausse[n].familles.includes("Zombie")) {
                                best = n;
                            }
                        }
                        Jeu.adverse.defausse[best].vie = Jeu.adverse.defausse[best].vie_max;
                        deplacer(Jeu.adverse.defausse[best], "adverse", "terrain");
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 313:
            carte.nom = "Flash";
            carte.type = "Action";
            carte.cout[0] = 3;
            carte.cout[10] = 2;
            carte.vente[0] = 1;
            carte.vente[10] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Étourdissement", carte) + " à une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].etourdissement && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible].etourdissement = true;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (!Jeu.joueur.terrain[n].etourdissement && Jeu.joueur.terrain[n].action_max > Jeu.joueur.terrain[best].action_max && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        Jeu.joueur.terrain[best].etourdissement = true;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 314:
            carte.nom = "Salvation";
            carte.type = "Action";
            carte.cout[0] = 15;
            carte.cout[10] = 15;
            carte.vente[0] = 8;
            carte.vente[10] = 7;
            carte.texte = function () {
                return "Soigne totalement et enlève tous les talents négatifs à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_debuff("joueur") || verifier_soin_creature("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && (Jeu.joueur.terrain[n].vie < Jeu.joueur.terrain[n].vie_max && Jeu.joueur.terrain[n].poison > 0 || Jeu.joueur.terrain[n].brulure > 0 || Jeu.joueur.terrain[n].saignement > 0 || Jeu.joueur.terrain[n].contamination > 0 || Jeu.joueur.terrain[n].etourdissement || Jeu.joueur.terrain[n].silence)) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].vie = Jeu.joueur.terrain[cible].vie_max;
                            Jeu.joueur.terrain[cible].poison = 0;
                            Jeu.joueur.terrain[cible].brulure = 0;
                            Jeu.joueur.terrain[cible].saignement = 0;
                            Jeu.joueur.terrain[cible].contamination = 0;
                            Jeu.joueur.terrain[cible].gel = 0;
                            Jeu.joueur.terrain[cible].etourdissement = false;
                            Jeu.joueur.terrain[cible].silence = false;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_debuff("adverse") || verifier_soin_creature("adverse")) {
                        let best = 0;
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            let debuff = Jeu.adverse.terrain[n].vie_max - Jeu.adverse.terrain[n].vie + Jeu.adverse.terrain[n].poison + Jeu.adverse.terrain[n].brulure * 2 + Jeu.adverse.terrain[n].saignement + Jeu.adverse.terrain[n].contamination + Jeu.adverse.terrain[n].gel * 2 + Jeu.adverse.terrain[n].etourdissement * 3 + Jeu.adverse.terrain[n].silence * 5;
                            let best_debuff = Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie + Jeu.adverse.terrain[best].poison + Jeu.adverse.terrain[best].brulure * 2 + Jeu.adverse.terrain[best].saignement + Jeu.adverse.terrain[best].contamination + Jeu.adverse.terrain[best].gel * 2 + Jeu.adverse.terrain[best].etourdissement * 3 + Jeu.adverse.terrain[best].silence * 5;
                            if (debuff > best_debuff) {
                                best = n;
                            }
                        }
                        Jeu.adverse.terrain[best].vie = Jeu.adverse.terrain[best].vie_max;
                        Jeu.adverse.terrain[best].poison = 0;
                        Jeu.adverse.terrain[best].brulure = 0;
                        Jeu.adverse.terrain[best].saignement = 0;
                        Jeu.adverse.terrain[best].contamination = 0;
                        Jeu.adverse.terrain[best].gel = 0;
                        Jeu.adverse.terrain[best].etourdissement = false;
                        Jeu.adverse.terrain[best].silence = false;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 315:
            carte.nom = "Dissimulation";
            carte.type = "Action";
            carte.cout[0] = 2;
            carte.cout[11] = 1;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Camouflage", carte) + " à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].camouflage) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].camouflage) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].camouflage = true;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" && !Jeu.adverse.terrain[best].camouflage) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].camouflage = true;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 316:
            carte.nom = "Soif de sang";
            carte.type = "Action";
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.texte = function () {
                return "Donne 4 attaque et applique " + effet_talent_voir("Vol de vie", carte, 2) + " à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].attaque += 2;
                            Jeu.joueur.terrain[cible].vol_de_vie += 2;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        Jeu.adverse.terrain[best].attaque += 2;
                        Jeu.adverse.terrain[best].vol_de_vie += 2;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 317:
            carte.nom = "Nova de glace";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 8;
            carte.cout[12] = 7;
            carte.vente[0] = 4;
            carte.vente[12] = 3;
            carte.texte = function () {
                return "Inflige 5 dégâts et applique " + effet_talent_voir("Gel", carte, 1) + " à une Créature adverse sur le terrain et inflige 2 dégâts aux Créatures en avant et en arrière de la Créature ciblée.<br/>Sorcellerie 12 : Inflige 5 dégâts et applique " + effet_talent_voir("Gel", carte, 1) + " à une Créature adverse sur le terrain et aux Créatures en avant et en arrière de la Créature ciblée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            let cible_1, cible_2, cible_3 = false;
                            cible_1 = Jeu.adverse.terrain[cible];
                            if (cible > 0) {
                                if (Jeu.adverse.terrain[cible - 1].type == "Créature") {
                                    cible_2 = Jeu.adverse.terrain[cible - 1];
                                }
                            }
                            if (cible < Jeu.adverse.terrain.length - 1) {
                                if (Jeu.adverse.terrain[cible + 1].type == "Créature") {
                                    cible_3 = Jeu.adverse.terrain[cible + 1];
                                }
                            }
                            degats(cible_1, 5);
                            if (cible_1.gel < 1) {
                                cible_1.gel = 1;
                            }
                            if (cible_2) {
                                if (sorcellerie("joueur") >= 12) {
                                    degats(cible_2, 5);
                                    if (cible_2.gel < 1) {
                                        cible_2.gel = 1;
                                    }
                                }
                                else {
                                    degats(cible_2, 2);
                                }
                            }
                            if (cible_3) {
                                if (sorcellerie("joueur") >= 12) {
                                    degats(cible_3, 5);
                                    if (cible_3.gel < 1) {
                                        cible_3.gel = 1;
                                    }
                                }
                                else {
                                    degats(cible_3, 2);
                                }
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        let cible_1, cible_2, cible_3 = false;
                        cible_1 = Jeu.joueur.terrain[best];
                        if (cible > 0) {
                            if (Jeu.joueur.terrain[cible - 1].type == "Créature") {
                                cible_2 = Jeu.joueur.terrain[cible - 1];
                            }
                        }
                        if (cible < Jeu.joueur.terrain.length - 1) {
                            if (Jeu.joueur.terrain[cible + 1].type == "Créature") {
                                cible_3 = Jeu.joueur.terrain[cible + 1];
                            }
                        }
                        degats(cible_1, 5);
                        if (cible_1.gel < 1) {
                            cible_1.gel = 1;
                        }
                        if (cible_2) {
                            if (sorcellerie("joueur") >= 12) {
                                degats(cible_2, 5);
                                if (cible_2.gel < 1) {
                                    cible_2.gel = 1;
                                }
                            }
                            else {
                                degats(cible_2, 2);
                            }
                        }
                        if (cible_3) {
                            if (sorcellerie("joueur") >= 12) {
                                degats(cible_3, 5);
                                if (cible_3.gel < 1) {
                                    cible_3.gel = 1;
                                }
                            }
                            else {
                                degats(cible_3, 2);
                            }
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 318:
            carte.nom = "Jet de stalactites";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 2;
            carte.cout[12] = 2;
            carte.vente[0] = 1;
            carte.vente[12] = 1;
            carte.texte = function () {
                return "Inflige 5 dégâts à une Unité adverse sur le terrain avec " + effet_talent_voir("Gel", carte) + ".<br/>Sorcellerie 3 : Inflige 10 dégâts à une Unité adverse sur le terrain avec " + effet_talent_voir("Gel", carte) + ".";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].gel > 0) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].gel > 0 && (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence)) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (sorcellerie("joueur") >= 3) {
                                degats(Jeu.adverse.terrain[cible], 10);
                            }
                            else {
                                degats(Jeu.adverse.terrain[cible], 5);
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].gel > 0) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].gel > 0 && (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].gel > Jeu.joueur.terrain[best].gel && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        if (sorcellerie("adverse") >= 3) {
                            degats(Jeu.joueur.terrain[best], 10);
                        }
                        else {
                            degats(Jeu.joueur.terrain[best], 5);
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 319:
            carte.nom = "Premiers soins";
            carte.type = "Action";
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Soigne 5 à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_soin_creature("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée blessée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie < Jeu.joueur.terrain[n].vie_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            soin(Jeu.joueur.terrain[cible], 5);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_soin_creature("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].vie >= Jeu.adverse.terrain[best].vie_max) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if ((Jeu.adverse.terrain[n].vie_max - Jeu.adverse.terrain[n].vie) > (Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie) && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        soin(Jeu.adverse.terrain[best], 5);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 320:
            carte.nom = "Brassard de santé";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 4;
            carte.vente[0] = 2;
            carte.stat_equipement.regeneration = 3;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Régénération", carte, 3) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 321:
            carte.nom = "Os solides";
            carte.type = "Action";
            carte.familles.push("Mort-vivant", "Squelette");
            carte.cout[0] = 4;
            carte.cout[9] = 4;
            carte.vente[0] = 2;
            carte.vente[9] = 2;
            carte.texte = function () {
                return "Donne 2 vie supplémentaire à toutes les Créatures alliées Squelette sur le terrain.";
            }
            carte.effet_pose = function () {
                let verifier = false;
                for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                    if (Jeu[carte.camp].terrain[n].type == "Créature" && Jeu[carte.camp].terrain[n].familles.includes("Squelette")) {
                        verifier = true;
                    }
                }
                if (verifier) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature" && Jeu[carte.camp].terrain[n].familles.includes("Squelette")) {
                            if (Jeu[carte.camp].terrain[n].vie_sup < 2) {
                                Jeu[carte.camp].terrain[n].vie_sup = 2;
                            }
                        }
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
            }
            break;
        case 322:
            carte.nom = "Réveiller les morts";
            carte.type = "Action";
            carte.familles.push("Mort-vivant", "Squelette");
            carte.cout[0] = 15;
            carte.cout[9] = 15;
            carte.vente[0] = 8;
            carte.vente[9] = 7;
            carte.texte = function () {
                return "Crée " + effet_carte_voir_id(13, carte) + " sur le terrain pour chaque Créature dans la Défausse et bannis toutes les Créatures dans la Défausse.";
            }
            carte.effet_pose = function () {
                if (verifier_creature(carte.camp, "defausse")) {
                    for (let n = 0; n < Jeu[carte.camp].defausse.length; n++) {
                        if (Jeu[carte.camp].defausse[n].type == "Créature") {
                            let nouvelle_carte = obtenir_carte(13);
                            nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                            ajouter(nouvelle_carte, carte.camp, "terrain");
                            enlever(Jeu[carte.camp].defausse[n]);
                            n--;
                        }
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 323:
            carte.nom = "Dévorer";
            carte.type = "Action";
            carte.familles.push("Ogre");
            carte.cout[0] = 8;
            carte.cout[9] = 7;
            carte.vente[0] = 4;
            carte.vente[9] = 3;
            carte.texte = function () {
                return "Détruit une Créature adverse sur le terrain ayant une vie inférieure à l'attaque d'une Créature alliée Ogre sur le terrain";
            }
            carte.effet_pose = function (step, cible1, cible2) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].familles.includes("Ogre")) {
                                    verifier = true;
                                }
                            }
                            if (verifier && verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée Ogre sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].familles.includes("Ogre")) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            let verifier2 = false;
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (statistique(Jeu.joueur.terrain[cible1], "attaque") >= Jeu.adverse.terrain[n].vie) {
                                    verifier2 = true;
                                }
                            }
                            if (verifier2) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (statistique(Jeu.joueur.terrain[cible1], "attaque") >= Jeu.adverse.terrain[n].vie && Jeu.adverse.terrain[n].type == "Créature" && (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence)) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(3," + cible1 + "," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 3:
                            mort(Jeu.adverse.terrain[cible2]);
                            effet_pose(carte);
                            deplacer(carte, "joueur", "defausse");
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].familles.includes("Ogre")) {
                            verifier = true;
                        }
                    }
                    if (verifier_cible_creature("joueur", "terrain") && verifier) {
                        let best1 = 0;
                        let best2 = 0;
                        while (Jeu.adverse.terrain[best1].type != "Créature" && Jeu.adverse.terrain[n].familles.includes("Ogre")) {
                            best1++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (statistique(Jeu.adverse.terrain[n], "attaque") > statistique(Jeu.adverse.terrain[best1], "attaque") && Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].familles.includes("Ogre")) {
                                best1 = n;
                            }
                        }
                        while (statistique(Jeu.adverse.terrain[best1], "attaque") < Jeu.joueur.terrain[best2].vie || Jeu.joueur.terrain[best2].type != "Créature" || (Jeu.joueur.terrain[best2].camouflage && !Jeu.joueur.terrain[best2].silence)) {
                            best2++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best2].vie && statistique(Jeu.adverse.terrain[best1], "attaque") >= Jeu.joueur.terrain[n].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best2 = n;
                            }
                        }
                        mort(Jeu.joueur.terrain[best2]);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 324:
            carte.nom = "Restauration";
            carte.type = "Action";
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Soigne 5 à un Bâtiment allié sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_soin_batiment("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez un Bâtiment allié blessé sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Bâtiment" && Jeu.joueur.terrain[n].vie < Jeu.joueur.terrain[n].vie_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            soin(Jeu.joueur.terrain[cible], 5);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_soin_batiment("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Bâtiment" || Jeu.adverse.terrain[best].vie >= Jeu.adverse.terrain[best].vie_max) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if ((Jeu.adverse.terrain[n].vie_max - Jeu.adverse.terrain[n].vie) > (Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie) && Jeu.adverse.terrain[n].type == "Bâtiment") {
                                best = n;
                            }
                        }
                        soin(Jeu.adverse.terrain[best], 5);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 325:
            carte.nom = "Forgemage";
            define_creature(carte);
            carte.familles.push("Gnome", "Mage");
            carte.cout[0] = 6;
            carte.cout[7] = 6;
            carte.vente[0] = 3;
            carte.vente[7] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.sorcellerie = 2;
            carte.texte = function () {
                return "Quand posé : Pioche 1 Objet Équipement.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let verifier = false;
                        for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                            if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Objet" && obtenir_carte(n).familles.includes("Équipement")) {
                                verifier = true;
                            }
                        }
                        if (verifier) {
                            let nouvelle_carte = boutique_generer();
                            while (nouvelle_carte.type != "Objet" || !nouvelle_carte.familles.includes("Équipement")) {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 326:
            carte.nom = "Hyène";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 6;
            carte.cout[9] = 5;
            carte.vente[0] = 3;
            carte.vente[9] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Au début de la phase de préparation : Bannis la Créature de votre défausse avec la moins de vie max et se soigne de 3.";
            }
            carte.effet_etage_debut = function () {
                if (carte.vie_max > carte.vie && verifier_creature(carte.camp, "defausse")) {
                    let best = 0;
                    while (Jeu[carte.camp].defausse[best].type != "Créature") {
                        best++;
                    }
                    for (let n = 0; n < Jeu[carte.camp].defausse.length; n++) {
                        if (Jeu[carte.camp].defausse[n].vie_max < Jeu[carte.camp].defausse[best].vie && Jeu[carte.camp].defausse[best].type == "Créature") {
                            best = n;
                        }
                    }
                    enlever(Jeu[carte.camp].defausse[best]);
                    soin(carte, 3);
                }
            }
            break;
        case 327:
            carte.nom = "Vautour";
            define_creature(carte);
            carte.familles.push("Oiseau");
            carte.cout[0] = 5;
            carte.cout[5] = 2;
            carte.cout[9] = 2;
            carte.vente[0] = 2;
            carte.vente[5] = 1;
            carte.vente[9] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Au début de la phase de préparation : Bannis la Créature de votre défausse avec la moins de vie max et donne 2 mort.";
            }
            carte.effet_etage_debut = function () {
                if (verifier_creature(carte.camp, "defausse")) {
                    let best = 0;
                    while (Jeu[carte.camp].defausse[best].type != "Créature") {
                        best++;
                    }
                    for (let n = 0; n < Jeu[carte.camp].defausse.length; n++) {
                        if (Jeu[carte.camp].defausse[n].vie_max < Jeu[carte.camp].defausse[best].vie && Jeu[carte.camp].defausse[best].type == "Créature") {
                            best = n;
                        }
                    }
                    enlever(Jeu[carte.camp].defausse[best]);
                    Jeu[carte.camp].ressources[9].courant += 2;
                }
            }
            break;
        case 328:
            carte.nom = "Chimère";
            define_creature(carte);
            carte.familles.push("Bête", "Oiseau", "Reptile");
            carte.cout[0] = 55;
            carte.vente[0] = 27;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand posé : Se donne 1 attaque et 1 vie pour chaque famille différente parmis les Créatures alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    let array = [];
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            for (let i = 0; i < Jeu[carte.camp].terrain[n].familles.length; i++) {
                                if (!array.includes(Jeu[carte.camp].terrain[n].familles[i])) {
                                    array.push(Jeu[carte.camp].terrain[n].familles[i]);
                                }
                            }
                        }
                    }
                    carte.attaque += array.length;
                    carte.vie_max += array.length;
                    carte.vie += array.length;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 329:
            carte.nom = "Épée enflammée";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 5;
            carte.cout[1] = 4;
            carte.vente[0] = 2;
            carte.vente[1] = 2;
            carte.stat_equipement.attaque = 5;
            carte.stat_equipement.effet_attaque = function (attaquant, defenseur) {
                if (defenseur.brulure < 2) {
                    defenseur.brulure = 2;
                }
            }
            carte.texte = function () {
                return "Donne 5 attaque et applique l'effet suivant à la Créature équipée : Quand attaque : Applique " + effet_talent_voir("Brûlure", carte, 2) + " à l'Unité attaquée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 330:
            carte.nom = "Baguette des marées";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 4;
            carte.cout[2] = 4;
            carte.vente[0] = 2;
            carte.vente[2] = 2;
            carte.stat_equipement.sorcellerie = 2;
            carte.stat_equipement.effet_etage_debut = function () {
                Jeu[carte.camp].ressources[2].courant += 3;
            }
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Sorcellerie", carte, 2) + " et l'effet suivant à la Créature équipée : Au début de la phase de préparation : Donne 3 Eau.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 331:
            carte.nom = "Fouet de ronces";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme", "Plante");
            carte.cout[0] = 4;
            carte.cout[3] = 4;
            carte.vente[0] = 2;
            carte.vente[3] = 2;
            carte.stat_equipement.epine = 2;
            carte.stat_equipement.effet_attaque = function (attaquant, defenseur) {
                let cible_1, cible_2;
                if (defenseur.slot > 0) {
                    cible_1 = Jeu[defenseur.camp].terrain[defenseur.slot - 1];
                }
                if (defenseur.slot < Jeu[defenseur.camp].terrain.length - 1) {
                    cible_2 = Jeu[defenseur.camp].terrain[defenseur.slot + 1];
                }
                if (defenseur.slot > 0) {
                    degats(cible_1, 2);
                }
                if (defenseur.slot < Jeu[defenseur.camp].terrain.length - 1) {
                    degats(cible_2, 2);
                }
            }
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Épine", carte, 2) + " et l'effet suivant à la Créature équipée : Inflige 2 dégât aux Unités en avant et en arrière de l'Unité attaquée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 332:
            carte.nom = "Masse de pierre";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 6;
            carte.cout[4] = 6;
            carte.vente[0] = 3;
            carte.vente[4] = 3;
            carte.stat_equipement.attaque = 10;
            carte.stat_equipement.charge = true;
            carte.texte = function () {
                return "Donne 10 attaque et applique " + effet_talent_voir("Charge", carte) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 333:
            carte.nom = "Arc des vents";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 4;
            carte.cout[5] = 4;
            carte.vente[0] = 2;
            carte.vente[5] = 2;
            carte.stat_equipement.attaque = 10;
            carte.stat_equipement.portee = true;
            carte.texte = function () {
                return "Donne 10 attaque et applique " + effet_talent_voir("Portée", carte) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 334:
            carte.nom = "Doubles lames foudroyantes";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 8;
            carte.cout[6] = 8;
            carte.vente[0] = 4;
            carte.vente[6] = 4;
            carte.stat_equipement.attaque = 10;
            carte.stat_equipement.action_max = 1;
            carte.stat_equipement.rapidite = true;
            carte.texte = function () {
                return "Donne 10 attaque, 1 action supplémentaire et applique " + effet_talent_voir("Rapidité", carte) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 335:
            carte.nom = "Grimoire des arcanes";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 2;
            carte.cout[8] = 2;
            carte.vente[0] = 1;
            carte.vente[8] = 1;
            carte.stat_equipement.effet_etage_debut = function () {
                if (carte.camp == "joueur") {
                    let verifier = false;
                    for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                        if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).familles.includes("Sort") && obtenir_carte(n).elements.includes("Arcane")) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let nouvelle_carte = boutique_generer();
                        while (!nouvelle_carte.familles.includes("Sort")) {
                            nouvelle_carte = boutique_generer();
                        }
                        pioche("joueur", nouvelle_carte);
                    }
                }
            }
            carte.texte = function () {
                return "Applique l'effet suivant à la Créature équipée : Au début de la phase de préparation : Pioche 1 Action Arcane Sort.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 336:
            carte.nom = "Faux à crâne";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 16;
            carte.cout[9] = 16;
            carte.vente[0] = 8;
            carte.vente[9] = 8;
            carte.stat_equipement.letalite = true;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Létalité", carte) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 337:
            carte.nom = "Lance sacrée";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 6;
            carte.cout[10] = 5;
            carte.vente[0] = 3;
            carte.vente[10] = 2;
            carte.stat_equipement.attaque = 10;
            carte.stat_equipement.percee = 4;
            carte.stat_equipement.vol_de_vie = 2;
            carte.texte = function () {
                return "Donne 10 attaque, applique " + effet_talent_voir("Percée", carte, 4) + " et " + effet_talent_voir("Vol de vie", carte, 2) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 338:
            carte.nom = "Dague d'ombre";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 4;
            carte.cout[11] = 3;
            carte.vente[0] = 2;
            carte.vente[11] = 1;
            carte.stat_equipement.effet_tuer = function (creature) {
                creature.camouflage = true;
            }
            carte.texte = function () {
                return "Applique l'effet suivant à la Créature équipée : Quand tue une Créature : Se donne " + effet_talent_voir("Camouflage", carte) + ".<br/>ou<br/>Inflige 3 dégâts à une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].camouflage) {
                                    verifier = true;
                                }
                            }
                            if (verifier_equipement("joueur") || verifier_cible_creature("adverse", "terrain") || verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez un effet : ";
                                texte += "<br/><br/>";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2)'>Applique l'effet suivant à la Créature équipée : Quand tue une Créature : Se donne Camouflage</button>";
                                texte += "<br/>";
                                texte += "ou";
                                texte += "<br/>";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(4)'>Inflige 3 dégâts à une Créature adverse sur le terrain</button>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += "Applique l'effet suivant à la Créature équipée : Quand tue une Créature : Se donne Camouflage.";
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(3," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 3:
                            equiper(Jeu.joueur.terrain[cible1], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                        case 4:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += "Applique Camouflage à une Créature alliée sur le terrain et inflige 3 dégâts à une Créature adverse sur le terrain.";
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(5," + cible1 + ", " + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 5:
                            degats(Jeu.adverse.terrain[cible2], 3);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    else if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if ((Jeu.joueur.terrain[n].vie <= 3 && Jeu.joueur.terrain[best].vie > 3) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[n], 3);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 339:
            carte.nom = "Hache de glace";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 5;
            carte.cout[12] = 5;
            carte.vente[0] = 3;
            carte.vente[12] = 2;
            carte.stat_equipement.attaque = 10;
            carte.stat_equipement.erosion = 3;
            carte.texte = function () {
                return "Donne 10 attaque et applique " + effet_talent_voir("Érosion", carte, 3) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 340:
            carte.nom = "Épée de fer";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.stat_equipement.attaque = 10;
            carte.texte = function () {
                return "Donne 10 attaque à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 341:
            carte.nom = "Plastron de fer";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.stat_equipement.vie_max = 10;
            carte.texte = function () {
                return "Donne 10 vie max à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 342:
            carte.nom = "Bouclier de fer";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.stat_equipement.defense = 5;
            carte.texte = function () {
                return "Donne 5 défense à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 343:
            carte.nom = "Casque de fer";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.stat_equipement.vie_max = 5;
            carte.texte = function () {
                return "Donne 5 vie à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].vie += 5;
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].vie += 5;
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 344:
            carte.nom = "Solerets de fer";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.stat_equipement.defense = 2;
            carte.stat_equipement.vie_max = 3;
            carte.stat_equipement.rapidite = true;
            carte.texte = function () {
                return "Donne 2 défense, 3 vie max et applique " + effet_talent_voir("Rapidité", carte) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 345:
            carte.nom = "Épée d'acier";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 8;
            carte.cout[7] = 8;
            carte.vente[0] = 4;
            carte.vente[7] = 4;
            carte.stat_equipement.attaque = 20;
            carte.texte = function () {
                return "Donne 20 attaque à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 346:
            carte.nom = "Plastron d'acier";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 8;
            carte.cout[7] = 8;
            carte.vente[0] = 4;
            carte.vente[7] = 4;
            carte.stat_equipement.vie_max = 20;
            carte.texte = function () {
                return "Donne 20 vie max à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 347:
            carte.nom = "Bouclier d'acier";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 8;
            carte.cout[7] = 8;
            carte.vente[0] = 4;
            carte.vente[7] = 4;
            carte.stat_equipement.defense = 10;
            carte.texte = function () {
                return "Donne 10 défense à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 348:
            carte.nom = "Casque d'acier";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 8;
            carte.cout[7] = 8;
            carte.vente[0] = 4;
            carte.vente[7] = 4;
            carte.stat_equipement.vie_max = 10;
            carte.texte = function () {
                return "Donne 10 vie à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].vie += 10;
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].vie += 10;
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 349:
            carte.nom = "Solerets d'acier";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 8;
            carte.cout[7] = 8;
            carte.vente[0] = 4;
            carte.vente[7] = 4;
            carte.stat_equipement.defense = 3;
            carte.stat_equipement.vie_max = 11;
            carte.stat_equipement.rapidite = true;
            carte.texte = function () {
                return "Donne 3 défense, 11 vie max et applique " + effet_talent_voir("Rapidité", carte) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 350:
            carte.nom = "Sac à dos";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.stat_equipement.effet_etage_debut = function () {
                if (carte.camp == "joueur") {
                    pioche("joueur");
                }
            }
            carte.texte = function () {
                return "Applique l'effet suivant à la Créature équipée : Au début de la phase de préparation : Pioche 1 carte.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 351:
            carte.nom = "Élémentaire de feu";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[1] = 5;
            carte.vente[1] = 2;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            carte.texte = function () {
                return "Quand attaque : Inflige 1 dégât à l'Unité attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                degats(defenseur, 1);
            }
            break;
        case 352:
            carte.nom = "Élémentaire d'eau";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[2] = 5;
            carte.vente[2] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Dépense 6 eau et se donne 2 attaque et 2 vie.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    if (Jeu[carte.camp].ressources[2].courant + Jeu[carte.camp].ressources[2].reserve >= 3) {
                        if (Jeu[carte.camp].ressources[2].courant >= 3) {
                            Jeu[carte.camp].ressources[2].courant -= 3;
                        }
                        else {
                            Jeu[carte.camp].ressources[2].reserve -= 3 - Jeu[carte.camp].ressources[2].courant;
                            Jeu[carte.camp].ressources[2].courant = 0;
                        }
                        carte.attaque += 2;
                        carte.vie += 2;
                        carte.vie_max += 2;
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 353:
            carte.nom = "Élémentaire de plante";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[3] = 5;
            carte.vente[3] = 2;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            carte.texte = function () {
                return "Quand meurt : Donne 1 végétal en réserve.";
            }
            carte.effet_mort = function () {
                if (!statistique(carte, "silence")) {
                    Jeu[carte.camp].ressources[3].reserve++;
                }
                if (statistique(carte, "ephemere") && !statistique(carte, "silence")) {
                    enlever(carte);
                }
                else {
                    deplacer(carte, carte.camp, "defausse");
                }
            }
            break;
        case 354:
            carte.nom = "Élémentaire de terre";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[4] = 8;
            carte.vente[4] = 4;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            carte.texte = function () {
                return "Quand posé : Applique " + effet_talent_voir("Étourdissement", carte) + " à une Créature adverse.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain") && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].etourdissement && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible].etourdissement = true;
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain") && !statistique(carte, "silence")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (!Jeu.joueur.terrain[n].etourdissement && Jeu.joueur.terrain[n].action_max > Jeu.joueur.terrain[best].action_max && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        Jeu.joueur.terrain[best].etourdissement = true;
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 355:
            carte.nom = "Élémentaire d'air";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[5] = 5;
            carte.vente[5] = 2;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            carte.texte = function () {
                return "Au début de la phase de préparation : Se place dans la main.";
            }
            carte.effet_etage_debut = function () {
                deplacer(carte, carte.camp, "main");
            }
            break;
        case 356:
            carte.nom = "Élémentaire de foudre";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[6] = 5;
            carte.vente[6] = 2;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 1;
            carte.temporaire = true;
            break;
        case 357:
            carte.nom = "Élémentaire de métal";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[7] = 7;
            carte.vente[7] = 3;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 1;
            carte.texte = function () {
                return "Au début de la phase de préparation : Se donne 1 attaque et 1 vie.";
            }
            carte.effet_etage_debut = function () {
                carte.attaque++;
                carte.vie++;
                carte.vie_max++;
            }
            break;
        case 358:
            carte.nom = "Élémentaire d'arcane";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[8] = 6;
            carte.vente[8] = 3;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            carte.texte = function () {
                return "Quand posé : Créé " + effet_carte_voir_id(358, carte) + " sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    let nouvelle_carte = obtenir_carte(358);
                    nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    ajouter(nouvelle_carte, carte.camp, "terrain");
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 359:
            carte.nom = "Élémentaire de la mort";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[9] = 5;
            carte.vente[9] = 2;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            carte.texte = function () {
                return "Quand meurt : Pioche 1 carte et la verrouille.";
            }
            carte.effet_mort = function () {
                if (!statistique(carte, "silence")) {
                    let nouvelle_carte = boutique_generer();
                    nouvelle_carte.verrouillage = true;
                    pioche(carte.camp, nouvelle_carte);
                }
                if (statistique(carte, "ephemere") && !statistique(carte, "silence")) {
                    enlever(carte);
                }
                else {
                    deplacer(carte, carte.camp, "defausse");
                }
            }
            break;
        case 360:
            carte.nom = "Élémentaire de lumière";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[10] = 5;
            carte.vente[10] = 2;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand attaque : Si cette carte n'est pas blessée, inflige 2 dégâts à l'Unité attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                if (carte.vie == carte.vie_max) {
                    degats(defenseur, 2);
                }
            }
            break;
        case 361:
            carte.nom = "Élémentaire d'ombre";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[11] = 6;
            carte.vente[11] = 3;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            carte.texte = function () {
                return "Quand posé : Applique " + effet_talent_voir("Camouflage", carte) + " à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].camouflage) {
                                    verifier = true;
                                }
                            }
                            if (verifier && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].camouflage) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].camouflage = true;
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage) {
                            verifier = true;
                        }
                    }
                    if (verifier && !statistique(carte, "silence")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" && !Jeu.adverse.terrain[best].camouflage) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].camouflage = true;
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 362:
            carte.nom = "Élémentaire de glace";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[12] = 6;
            carte.vente[12] = 3;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            carte.texte = function () {
                return "Quand posé : Applique " + effet_talent_voir("Gel", carte, 1) + " à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain") && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            if (Jeu.adverse.terrain[cible].gel < 1) {
                                Jeu.adverse.terrain[cible].gel = 1;
                            }
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain") && !statistique(carte, "silence")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].gel < 1 && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        if (Jeu.joueur.terrain[best].gel < 1) {
                            Jeu.joueur.terrain[best].gel = 1;
                        }
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 363:
            carte.nom = "Visée";
            carte.type = "Action";
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Donne 12 attaque à une Créature alliée sur le terrain avec " + effet_talent_voir("Portée", carte) + " jusqu'à la fin de la phase de combat.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && statistique(Jeu.joueur.terrain[n], "portee")) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain avec Portée : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && statistique(Jeu.joueur.terrain[n], "portee")) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].stat_etage.attaque += 12;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature" && statistique(Jeu.adverse.terrain[n], "portee")) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || !statistique(Jeu.adverse.terrain[best], "portee")) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].stat_etage.attaque += 12;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 364:
            carte.nom = "Mettre la garde";
            carte.type = "Action";
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Donne 10 vie supplémentaire à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].vie_sup = 10;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        Jeu.adverse.terrain[best].vie_sup = 10;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 365:
            carte.nom = "Targe du gardien";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 6;
            carte.vente[0] = 3;
            carte.stat_equipement.defense = 3;
            carte.stat_equipement.protection = true;
            carte.texte = function () {
                return "Donne 3 défense et applique " + effet_talent_voir("Protection", carte) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 366:
            carte.nom = "Noyade";
            carte.type = "Action";
            carte.cout[0] = 9;
            carte.cout[2] = 9;
            carte.vente[0] = 5;
            carte.vente[2] = 4;
            carte.texte = function () {
                return "Détruit une Créature adverse non-Eau sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].elements.includes("Eau")) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].elements.includes("Eau") && (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence)) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            mort(Jeu.adverse.terrain[cible]);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].elements.includes("Eau")) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || Jeu.joueur.terrain[n].elements.includes("Eau") || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && Jeu.joueur.terrain[best].type == "Créature" && !Jeu.joueur.terrain[n].elements.includes("Eau") && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        mort(Jeu.joueur.terrain[best]);
                    }
                    deplacer(carte, "adverse", "defausse");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 367:
            carte.nom = "Enflammer";
            carte.type = "Action";
            carte.cout[0] = 3;
            carte.cout[1] = 2;
            carte.vente[0] = 1;
            carte.vente[1] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Brûlure", carte, 3) + " à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].brulure < 3) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible].etourdissement = true;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].brulure < 3) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].brulure >= 3 || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].brulure < 3 && Jeu.joueur.terrain[n].brulure < Jeu.joueur.terrain[best].brulure && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        Jeu.joueur.terrain[best].brulure = 3;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 368:
            carte.nom = "Souffle enflammé";
            carte.type = "Action";
            carte.cout[0] = 5;
            carte.cout[1] = 4;
            carte.vente[0] = 2;
            carte.vente[1] = 2;
            carte.texte = function () {
                return "Inflige 3 dégâts à une Créature adverse sur le terrain et aux Créatures en avant et en arrière de la Créature ciblée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            let cible_1, cible_2, cible_3 = false;
                            cible_1 = Jeu.adverse.terrain[cible];
                            if (cible > 0) {
                                if (Jeu.adverse.terrain[cible - 1].type == "Créature") {
                                    cible_2 = Jeu.adverse.terrain[cible - 1];
                                }
                            }
                            if (cible < Jeu.adverse.terrain.length - 1) {
                                if (Jeu.adverse.terrain[cible + 1].type == "Créature") {
                                    cible_3 = Jeu.adverse.terrain[cible + 1];
                                }
                            }
                            degats(cible_1, 3);
                            if (cible_2) {
                                degats(cible_2, 3);
                            }
                            if (cible_3) {
                                degats(cible_3, 3);
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        let cible_1, cible_2, cible_3 = false;
                        cible_1 = Jeu.joueur.terrain[best];
                        if (cible > 0) {
                            if (Jeu.joueur.terrain[cible - 1].type == "Créature") {
                                cible_2 = Jeu.joueur.terrain[cible - 1];
                            }
                        }
                        if (cible < Jeu.joueur.terrain.length - 1) {
                            if (Jeu.joueur.terrain[cible + 1].type == "Créature") {
                                cible_3 = Jeu.joueur.terrain[cible + 1];
                            }
                        }
                        degats(cible_1, 3);
                        if (cible_2) {
                            degats(cible_2, 3);
                        }
                        if (cible_3) {
                            degats(cible_3, 3);
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 369:
            carte.nom = "Envol";
            carte.type = "Action";
            carte.cout[0] = 1;
            carte.cout[5] = 1;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Esquive", carte) + " à une Créature alliée ayant un coût supérieur ou égal à 1 en Air sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].cout[5] > 0 && !Jeu.joueur.terrain[n].esquive) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée ayant un coût supérieur ou égal à 1 en Air sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].cout[5] > 0 && !Jeu.joueur.terrain[n].esquive) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].esquive = true;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].cout[5] > 0 && !Jeu.adverse.terrain[n].esquive) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].cout[5] == 0 || Jeu.adverse.terrain[best].esquive) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].esquive = true;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 370:
            carte.nom = "Tornade";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 3;
            carte.cout[5] = 3;
            carte.vente[0] = 2;
            carte.vente[5] = 1;
            carte.texte = function () {
                return "Inflige 5 fois 1 dégât à une Unité adverse sur le terrain.<br/>Sorcellerie 5 : Inflige 5 fois 2 dégâts à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            let carte_cible = Jeu.adverse.terrain[cible];
                            let n = 0;
                            if (sorcellerie("joueur") >= 5) {
                                while (n < 5 && carte_cible.zone == "terrain") {
                                    degats(carte_cible, 2);
                                    n++;
                                }
                            }
                            else {
                                while (n < 5 && carte_cible.zone == "terrain") {
                                    degats(carte_cible, 1);
                                    n++;
                                }
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain")) {
                        let best = 0;
                        let n = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        if (sorcellerie("adverse") >= 5) {
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if ((Jeu.joueur.terrain[n].vie <= 10 && Jeu.joueur.terrain[best].vie > 10) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                    best = n;
                                }
                            }
                            while (n < 5 && Jeu.joueur.terrain[best].zone == "terrain") {
                                degats(Jeu.joueur.terrain[best], 2);
                                n++;
                            }
                        }
                        else {
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if ((Jeu.joueur.terrain[n].vie <= 5 && Jeu.joueur.terrain[best].vie > 5) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                    best = n;
                                }
                            }
                            while (n < 5 && Jeu.joueur.terrain[best].zone == "terrain") {
                                degats(Jeu.joueur.terrain[best], 1);
                                n++;
                            }
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 371:
            carte.nom = "Paralysie";
            carte.type = "Action";
            carte.cout[0] = 3;
            carte.cout[6] = 2;
            carte.vente[0] = 1;
            carte.vente[6] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Étourdissement", carte) + " à une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].etourdissement && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible].etourdissement = true;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (!Jeu.joueur.terrain[n].etourdissement && Jeu.joueur.terrain[n].action_max > Jeu.joueur.terrain[best].action_max && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        Jeu.joueur.terrain[best].etourdissement = true;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 372:
            carte.nom = "Mur d'enceinte";
            carte.type = "Bâtiment";
            carte.familles.push("Mur");
            carte.cout[0] = 19;
            carte.vente[0] = 9;
            carte.vie_max = carte.vie = 20;
            break;
        case 373:
            carte.nom = "Muraille";
            carte.type = "Bâtiment";
            carte.familles.push("Mur");
            carte.cout[0] = 39;
            carte.vente[0] = 19;
            carte.vie_max = carte.vie = 40;
            break;
        case 374:
            carte.nom = "Apprenti mage";
            define_creature(carte);
            carte.familles.push("Humain", "Mage");
            carte.cout[0] = 7;
            carte.vente[0] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.sorcellerie = 1;
            break;
        case 375:
            carte.nom = "Architecte nain";
            define_creature(carte);
            carte.familles.push("Nain");
            carte.cout[0] = 4;
            carte.cout[4] = 4;
            carte.vente[0] = 2;
            carte.vente[4] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Pioche 1 Bâtiment.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let verifier = false;
                        for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                            if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Bâtiment") {
                                verifier = true;
                            }
                        }
                        if (verifier) {
                            let nouvelle_carte = boutique_generer();
                            while (nouvelle_carte.type != "Bâtiment") {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 376:
            carte.nom = "Messager céleste";
            define_creature(carte);
            carte.familles.push("Céleste");
            carte.cout[0] = 4;
            carte.cout[5] = 3;
            carte.vente[0] = 2;
            carte.vente[5] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Pioche 1 carte.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur" && !statistique(carte, "silence")) {
                    pioche("joueur");
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 377:
            carte.nom = "Forgeron gnome";
            define_creature(carte);
            carte.familles.push("Gnome");
            carte.cout[0] = 4;
            carte.cout[7] = 4;
            carte.vente[0] = 2;
            carte.vente[7] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Pioche 1 Objet Équipement.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let verifier = false;
                        for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                            if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Objet" && obtenir_carte(n).familles.includes("Équipement")) {
                                verifier = true;
                            }
                        }
                        if (verifier) {
                            let nouvelle_carte = boutique_generer();
                            while (nouvelle_carte.type != "Objet" || !nouvelle_carte.familles.includes("Équipement")) {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 378:
            carte.nom = "Comète arcanique";
            carte.type = "Action";
            carte.familles.push("Sort");
            carte.cout[0] = 10;
            carte.cout[8] = 10;
            carte.vente[0] = 5;
            carte.vente[8] = 5;
            carte.texte = function () {
                return "Inflige autant de dégâts à une Unité adverse sur le terrain que vous avez de Sorcellerie.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain") && sorcellerie("joueur") > 0) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            degats(Jeu.adverse.terrain[cible], sorcellerie("joueur"));
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain") && sorcellerie("adverse") > 0) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if ((Jeu.joueur.terrain[n].vie <= sorcellerie("adverse") && Jeu.joueur.terrain[best].vie > sorcellerie("adverse")) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[best], sorcellerie("adverse"));
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 379:
            carte.nom = "Minotaure destructeur";
            define_creature(carte);
            carte.familles.push("Minotaure");
            carte.cout[0] = 20;
            carte.cout[4] = 19;
            carte.vente[0] = 10;
            carte.vente[4] = 9;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Quand posé : Détruit un Bâtiment adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_batiment("adverse", "terrain") && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Bâtiment" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            mort(Jeu.adverse.terrain[cible]);
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_batiment("joueur", "terrain") && !statistique(carte, "silence")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Bâtiment" && (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && Jeu.joueur.terrain[best].type == "Bâtiment" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        mort(Jeu.joueur.terrain[best]);
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 380:
            carte.nom = "Briser la garde";
            carte.type = "Action";
            carte.cout[0] = 10;
            carte.vente[0] = 5;
            carte.texte = function () {
                return "Enlève la vie supplémentaire d'une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].vie_sup > 0) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].vie_sup > 0 && (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence)) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible].vie_sup = 0;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie_sup > 0) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].vie_sup == 0 || Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        Jeu.joueur.terrain[best].vie_sup = 0;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 381:
            carte.nom = "Soins complets";
            carte.type = "Action";
            carte.cout[0] = 20;
            carte.vente[0] = 10;
            carte.texte = function () {
                return "Soigne totalement une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_soin_creature("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée blessée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie < Jeu.joueur.terrain[n].vie_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            soin(Jeu.joueur.terrain[cible], Jeu.joueur.terrain[cible].vie_max - Jeu.joueur.terrain[cible].vie);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_soin_creature("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].vie >= Jeu.adverse.terrain[best].vie_max) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if ((Jeu.adverse.terrain[n].vie_max - Jeu.adverse.terrain[n].vie) > (Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie) && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        soin(Jeu.adverse.terrain[best], Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 382:
            carte.nom = "Vague de soin";
            carte.type = "Action";
            carte.cout[0] = 30;
            carte.vente[0] = 15;
            carte.texte = function () {
                return "Soigne 3 à toutes les Créatures alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (verifier_soin_creature(carte.camp)) {
                    let array = [];
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        array.push(Jeu[carte.camp].terrain[n]);
                    }
                    for (let n = 0; n < array.length; n++) {
                        soin(array[n], 3);
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 383:
            carte.nom = "Peste";
            carte.type = "Action";
            carte.familles.push("Maladie");
            carte.cout[0] = 10;
            carte.cout[11] = 10;
            carte.vente[0] = 5;
            carte.vente[11] = 5;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Contamination", carte, 2) + " à toutes les Créatures adverses sur le terrain.";
            }
            carte.effet_pose = function () {
                if (verifier_creature(camp_oppose(carte.camp), "terrain")) {
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                        if (Jeu[camp_oppose(carte.camp)].terrain[n].type == "Créature") {
                            Jeu[camp_oppose(carte.camp)].terrain[n].contamination += 2;
                        }
                    }
                    deplacer(carte, "joueur", "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 384:
            carte.nom = "Barbare";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 9;
            carte.vente[0] = 4;
            carte.attaque = 4;
            carte.vie_max = carte.vie = 4;
            carte.texte = function () {
                return "Quand attaque : Se donne 1 attaque.";
            }
            carte.effet_attaque = function () {
                carte.attaque++;
            }
            break;
        case 385:
            carte.nom = "Aiguisage";
            carte.type = "Action";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 4;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Donne 5 attaque à une Créature alliée équipée d'un Objet Arme.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature") {
                                    for (let i = 0; i < Jeu.joueur.terrain[n].equipements.length; i++) {
                                        if (Jeu.joueur.terrain[n].equipements[i].familles.includes("Arme")) {
                                            verifier = true;
                                        }
                                    }
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipée d'un Objet Arme sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    let verifier2 = false;
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        for (let i = 0; i < Jeu.joueur.terrain[n].equipements.length; i++) {
                                            if (Jeu.joueur.terrain[n].equipements[i].familles.includes("Arme")) {
                                                verifier2 = true;
                                            }
                                        }
                                    }
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (verifier2) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].attaque += 5;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature") {
                            for (let i = 0; i < Jeu.adverse.terrain[n].equipements.length; i++) {
                                if (Jeu.adverse.terrain[n].equipements[i].familles.includes("Arme")) {
                                    verifier = true;
                                }
                            }
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        let verifier2 = false;
                        if (Jeu.adverse.terrain[best].type == "Créature") {
                            for (let i = 0; i < Jeu.adverse.terrain[best].equipements.length; i++) {
                                if (Jeu.adverse.terrain[best].equipements[i].familles.includes("Arme")) {
                                    verifier2 = true;
                                }
                            }
                        }
                        while (!verifier2) {
                            best++;
                            if (Jeu.adverse.terrain[best].type == "Créature") {
                                for (let i = 0; i < Jeu.adverse.terrain[best].equipements.length; i++) {
                                    if (Jeu.adverse.terrain[best].equipements[i].familles.includes("Arme")) {
                                        verifier2 = true;
                                    }
                                }
                            }
                        }
                        Jeu.adverse.terrain[best].attaque += 5;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 386:
            carte.nom = "Désarmer";
            carte.type = "Action";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 4;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Enlève tous les Objets Arme équipés à une Créature adverse.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].type == "Créature") {
                                    for (let i = 0; i < Jeu.adverse.terrain[n].equipements.length; i++) {
                                        if (Jeu.adverse.terrain[n].equipements[i].familles.includes("Arme")) {
                                            verifier = true;
                                        }
                                    }
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse équipée d'un Objet Arme sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    let verifier2 = false;
                                    if (Jeu.adverse.terrain[n].type == "Créature") {
                                        for (let i = 0; i < Jeu.adverse.terrain[n].equipements.length; i++) {
                                            if (Jeu.adverse.terrain[n].equipements[i].familles.includes("Arme")) {
                                                verifier2 = true;
                                            }
                                        }
                                    }
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (verifier2) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            for (let i = 0; i < Jeu.adverse.terrain[cible].equipements.length; i++) {
                                if (Jeu.adverse.terrain[cible].equipements[i].familles.includes("Arme")) {
                                    Jeu.adverse.defausse.push(Jeu.adverse.terrain[cible].equipements[i]);
                                    Jeu.adverse.terrain[cible].equipements.splice(i, 1);
                                    i--;
                                }
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].type == "Créature") {
                            for (let i = 0; i < Jeu.joueur.terrain[n].equipements.length; i++) {
                                if (Jeu.joueur.terrain[n].equipements[i].familles.includes("Arme")) {
                                    verifier = true;
                                }
                            }
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        let verifier2 = false;
                        if (Jeu.joueur.terrain[best].type == "Créature") {
                            for (let i = 0; i < Jeu.joueur.terrain[best].equipements.length; i++) {
                                if (Jeu.joueur.terrain[best].equipements[i].familles.includes("Arme")) {
                                    verifier2 = true;
                                }
                            }
                        }
                        while (!verifier2) {
                            best++;
                            if (Jeu.joueur.terrain[best].type == "Créature") {
                                for (let i = 0; i < Jeu.joueur.terrain[best].equipements.length; i++) {
                                    if (Jeu.joueur.terrain[best].equipements[i].familles.includes("Arme")) {
                                        verifier2 = true;
                                    }
                                }
                            }
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 387:
            carte.nom = "Mettre à nu";
            carte.type = "Action";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 4;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Enlève tous les Objets Armure équipés à une Créature adverse.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].type == "Créature") {
                                    for (let i = 0; i < Jeu.adverse.terrain[n].equipements.length; i++) {
                                        if (Jeu.adverse.terrain[n].equipements[i].familles.includes("Armure")) {
                                            verifier = true;
                                        }
                                    }
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse équipée d'un Objet Armure sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    let verifier2 = false;
                                    if (Jeu.adverse.terrain[n].type == "Créature") {
                                        for (let i = 0; i < Jeu.adverse.terrain[n].equipements.length; i++) {
                                            if (Jeu.adverse.terrain[n].equipements[i].familles.includes("Armure")) {
                                                verifier2 = true;
                                            }
                                        }
                                    }
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (verifier2) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            for (let i = 0; i < Jeu.adverse.terrain[cible].equipements.length; i++) {
                                if (Jeu.adverse.terrain[cible].equipements[i].familles.includes("Armure")) {
                                    Jeu.adverse.defausse.push(Jeu.adverse.terrain[cible].equipements[i]);
                                    Jeu.adverse.terrain[cible].equipements.splice(i, 1);
                                    i--;
                                }
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].type == "Créature") {
                            for (let i = 0; i < Jeu.joueur.terrain[n].equipements.length; i++) {
                                if (Jeu.joueur.terrain[n].equipements[i].familles.includes("Armure")) {
                                    verifier = true;
                                }
                            }
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        let verifier2 = false;
                        if (Jeu.joueur.terrain[best].type == "Créature") {
                            for (let i = 0; i < Jeu.joueur.terrain[best].equipements.length; i++) {
                                if (Jeu.joueur.terrain[best].equipements[i].familles.includes("Armure")) {
                                    verifier2 = true;
                                }
                            }
                        }
                        while (!verifier2) {
                            best++;
                            if (Jeu.joueur.terrain[best].type == "Créature") {
                                for (let i = 0; i < Jeu.joueur.terrain[best].equipements.length; i++) {
                                    if (Jeu.joueur.terrain[best].equipements[i].familles.includes("Armure")) {
                                        verifier2 = true;
                                    }
                                }
                            }
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 388:
            carte.nom = "Stratège";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Pioche 1 Action.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let verifier = false;
                        for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                            if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Action") {
                                verifier = true;
                            }
                        }
                        if (verifier) {
                            let nouvelle_carte = boutique_generer();
                            while (nouvelle_carte.type != "Action") {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 389:
            carte.nom = "Phoenix renaissant";
            define_creature(carte);
            carte.familles.push("Phoenix");
            carte.cout[0] = 29;
            carte.cout[1] = 15;
            carte.cout[5] = 15;
            carte.vente[0] = 15;
            carte.vente[1] = 7;
            carte.vente[5] = 7;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand meurt : Se soigne complétement, se place sur le terrain et perd cet effet.";
            }
            carte.effet_mort = function () {
                if (statistique(carte, "ephemere")) {
                    enlever(carte);
                }
                else {
                    if (!statistique(carte, "silence")) {
                        carte.texte = function () {
                            return "Aucun";
                        }
                        carte.effet_mort = function () {
                            if (statistique(carte, "ephemere") && !statistique(carte, "silence")) {
                                enlever(carte);
                            }
                            else {
                                deplacer(carte, carte.camp, "defausse");
                            }
                        }
                        carte.vie = carte.vie_max;
                        deplacer(carte, carte.camp, "terrain");
                    }
                    else {
                        deplacer(carte, carte.camp, "defausse");
                    }
                }
            }
            break;
        case 390:
            carte.nom = "Plume de phoenix";
            carte.type = "Objet";
            carte.familles.push("Phoenix");
            carte.cout[0] = 20;
            carte.cout[1] = 10;
            carte.cout[5] = 10;
            carte.vente[0] = 10;
            carte.vente[1] = 5;
            carte.vente[5] = 5;
            carte.texte = function () {
                return "Place dans la main une Créature alliée dans la défausse et la soigne totalement.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "defausse")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée dans la défausse : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Défausse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.defausse.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "defausse", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.defausse[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.defausse[cible].vie = Jeu.joueur.defausse[cible].vie_max;
                            deplacer(Jeu.joueur.defausse[cible], "joueur", "main");
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "defausse")) {
                        let best = 0;
                        while (Jeu.adverse.defausse[best].type != "Créature") {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.defausse.length; n++) {
                            if (cout_total(Jeu.adverse.defausse[n]) > cout_total(Jeu.adverse.defausse[best]) && Jeu.adverse.defausse[n].type == "Créature") {
                                best = n;
                            }
                        }
                        Jeu.adverse.defausse[best].vie = Jeu.adverse.defausse[best].vie_max;
                        deplacer(Jeu.adverse.defausse[best], "adverse", "main");
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 391:
            carte.nom = "Phoenix au plumage ardent";
            define_creature(carte);
            carte.familles.push("Phoenix");
            carte.cout[0] = 59;
            carte.cout[1] = 30;
            carte.cout[5] = 30;
            carte.vente[0] = 29;
            carte.vente[1] = 15;
            carte.vente[5] = 15;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Au début de la phase de préparation : Crée " + effet_carte_voir_id(390, carte) + " dans la main.";
            }
            carte.effet_etage_debut = function () {
                let nouvelle_carte = obtenir_carte(390);
                nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];;
                ajouter(nouvelle_carte, carte.camp, "main");
            }
            break;
        case 392:
            carte.nom = "Tréant aux branches noueuses";
            define_creature(carte);
            carte.familles.push("Plante", "Tréant");
            carte.cout[0] = 40;
            carte.cout[3] = 39;
            carte.vente[0] = 20;
            carte.vente[3] = 19;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 25;
            carte.regeneration = 5;
            carte.texte = function () {
                return "Quand attaque : Inflige autant de dégâts à la créature attaquée que la vie max de cette créature.";
            }
            carte.effet_attaque = function (defenseur) {
                degats(defenseur, carte.vie_max);
            }
            break;
        case 393:
            carte.nom = "Tréant aux racines nourrissantes";
            define_creature(carte);
            carte.familles.push("Plante", "Tréant");
            carte.cout[0] = 40;
            carte.cout[3] = 39;
            carte.vente[0] = 20;
            carte.vente[3] = 19;
            carte.attaque = 15;
            carte.vie_max = carte.vie = 20;
            carte.regeneration = 5;
            carte.texte = function () {
                return "Au début de la phase de préparation : Se soigne complétement.";
            }
            carte.effet_etage_debut = function () {
                carte.vie = carte.vie_max;
            }
            break;
        case 394:
            carte.nom = "Pêcheur";
            define_creature(carte);
            carte.familles.push("Ondin");
            carte.cout[0] = 4;
            carte.cout[2] = 4;
            carte.vente[0] = 2;
            carte.vente[2] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Pioche 1 Créature Poisson.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let verifier = false;
                        for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                            if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Créature" && obtenir_carte(n).familles.includes("Poisson")) {
                                verifier = true;
                            }
                        }
                        if (verifier) {
                            let nouvelle_carte = boutique_generer();
                            while (!nouvelle_carte.familles.includes("Poisson") || nouvelle_carte.type != "Créature") {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 395:
            carte.nom = "Baleine";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 10;
            carte.cout[2] = 9;
            carte.vente[0] = 5;
            carte.vente[2] = 4;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 15;
            break;
        case 396:
            carte.nom = "Dauphin";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 5;
            carte.cout[2] = 4;
            carte.vente[0] = 2;
            carte.vente[2] = 2;
            carte.attaque = 4;
            carte.vie_max = carte.vie = 4;
            carte.texte = function () {
                return "Quand posé : Pioche 1 carte.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    pioche("joueur");
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 397:
            carte.nom = "Banc de poisson";
            carte.type = "Action";
            carte.familles.push("Poisson");
            carte.cout[0] = 5;
            carte.cout[2] = 5;
            carte.vente[0] = 3;
            carte.vente[2] = 2;
            carte.texte = function () {
                return "Crée 5 " + effet_carte_voir_id(124, carte) + " dans la boutique.";
            }
            carte.effet_pose = function () {
                for (let n = 0; n < 5; n++) {
                    ajouter(obtenir_carte(124), carte.camp, "boutique");
                }
                deplacer(carte, carte.camp, "defausse");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 398:
            carte.nom = "Golem aux poings de pierre";
            define_creature(carte);
            carte.familles.push("Golem");
            carte.cout[0] = 40;
            carte.cout[4] = 39;
            carte.vente[0] = 20;
            carte.vente[4] = 19;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Quand attaque : Inflige le double de dégâts à la créature attaquée que la défense de cette créature.";
            }
            carte.effet_attaque = function (defenseur) {
                degats(defenseur, carte.defense * 2);
            }
            break;
        case 399:
            carte.nom = "Dragon flammes explosives";
            define_creature(carte);
            carte.familles.push("Reptile", "Dragon");
            carte.cout[0] = 39;
            carte.cout[1] = 20;
            carte.cout[5] = 20;
            carte.vente[0] = 19;
            carte.vente[1] = 10;
            carte.vente[5] = 10;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand attaque : Inflige autant de dégâts à la créature attaquée que l'attaque de cette créature.";
            }
            carte.effet_attaque = function (defenseur) {
                degats(defenseur, carte.attaque);
            }
            break;
        case 400:
            carte.nom = "Dragon planeur";
            define_creature(carte);
            carte.familles.push("Reptile", "Dragon");
            carte.cout[0] = 36;
            carte.cout[1] = 17;
            carte.cout[5] = 17;
            carte.vente[0] = 17;
            carte.vente[1] = 9;
            carte.vente[5] = 9;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand posé : Inflige 3 dégâts à toutes les Unités adverses sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence") && Jeu[camp_oppose(carte.camp)].terrain.length > 0) {
                    let array = [];
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                        array.push(Jeu[camp_oppose(carte.camp)].terrain[n]);
                    }
                    for (let n = 0; n < array.length; n++) {
                        degats(array[n], 3);
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 401:
            carte.nom = "Roi barbare";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 59;
            carte.vente[0] = 29;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Quand attaque : Donne 1 attaque à toutes les Créatures alliées sur le terrain.";
            }
            carte.effet_attaque = function () {
                let array = [];
                for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                    if (Jeu[carte.camp].terrain[n].type == "Créature") {
                        array.push(Jeu[carte.camp].terrain[n]);
                    }
                }
                for (let n = 0; n < array.length; n++) {
                    array[n].attaque++;
                }
            }
            break;
        case 402:
            carte.nom = "Sage";
            define_creature(carte);
            carte.familles.push("Humain", "Mage");
            carte.cout[0] = 15;
            carte.vente[0] = 7;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 1;
            carte.texte = function () {
                return "Au début de la phase de préparation : S'applique " + effet_talent_voir("Sorcellerie", carte, 1) + ".";
            }
            carte.effet_etage_debut = function () {
                carte.sorcellerie++;
            }
            break;
        case 403:
            carte.nom = "Avant-garde";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 16;
            carte.vente[0] = 8;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 10;
            carte.protection = true;
            break;
        case 404:
            carte.nom = "Bouclier humain";
            carte.type = "Action";
            carte.cout[0] = 2;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Protection", carte) + " à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].protection) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].protection) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].protection = true;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].protection) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" && !Jeu.adverse.terrain[best].protection) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].protection = true;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 405:
            carte.nom = "Épouventail";
            carte.type = "Bâtiment";
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.vie_max = carte.vie = 4;
            carte.protection = true;
            break;
        case 406:
            carte.nom = "Solide sur les appuis";
            carte.type = "Action";
            carte.cout[0] = 10;
            carte.vente[0] = 5;
            carte.texte = function () {
                return "Donne 6 vie à une Créature alliée sur le terrain avec " + effet_talent_voir("Protection", carte) + ".";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].protection) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain avec Protection : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].protection) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].vie += 6;
                            Jeu.joueur.terrain[cible].vie_max += 6;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].protection) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || !Jeu.adverse.terrain[best].protection) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].vie += 6;
                        Jeu.adverse.terrain[best].vie_max += 6;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 407:
            carte.nom = "Satyre impatient";
            define_creature(carte);
            carte.familles.push("Satyre");
            carte.cout[0] = 4;
            carte.cout[6] = 3;
            carte.vente[0] = 2;
            carte.vente[6] = 1;
            carte.attaque = 3;
            carte.vie_max = 3;
            carte.stat_etage.attaque = 2;
            carte.stat_etage.vie_max = 2;
            carte.vie = 5;
            break;
        case 408:
            carte.nom = "Centaure monté";
            define_creature(carte);
            carte.familles.push("Centaure", "Satyre");
            carte.cout[0] = 12;
            carte.cout[6] = 12;
            carte.vente[0] = 6;
            carte.vente[6] = 6;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 7;
            carte.rapidite = true;
            carte.texte = function () {
                return "Quand meurt : Se transforme en " + effet_carte_voir_id(89, carte) + ".";
            }
            carte.effet_mort = function () {
                if (!statistique(carte, "silence")) {
                    carte.nom = "Satyre";
                    carte.familles.splice("Centaure", 1);
                    carte.cout[0] -= 9;
                    carte.cout[6] -= 10;
                    carte.vente[0] -= 5;
                    carte.vente[6] -= 5;
                    carte.attaque -= 7;
                    carte.vie_max -= 4;
                    carte.vie = carte.vie_max;
                    carte.rapidite = false;
                    carte.texte = function () {
                        return "Aucun";
                    }
                    carte.effet_mort = function () {
                        if (statistique(carte, "ephemere") && !statistique(carte, "silence")) {
                            enlever(carte);
                        }
                        else {
                            deplacer(carte, carte.camp, "defausse");
                        }
                    }
                    carte.description = obtenir_carte(89).description;
                }
                else {
                    if (statistique(carte, "ephemere") && !statistique(carte, "silence")) {
                        enlever(carte);
                    }
                    else {
                        deplacer(carte, carte.camp, "defausse");
                    }
                }
            }
            break;
        case 409:
            carte.nom = "Bagarreur satyre";
            define_creature(carte);
            carte.familles.push("Satyre");
            carte.cout[0] = 4;
            carte.cout[6] = 4;
            carte.vente[0] = 2;
            carte.vente[6] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 6 attaque à une Créature alliée sur le terrain jusqu'à la fin de la phase de combat.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].stat_etage.attaque += 6;
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_creature("adverse", "terrain")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature") {
                            best++;
                        }
                        Jeu.adverse.terrain[best].stat_etage.attaque += 6;
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 410:
            carte.nom = "Hiver éternel";
            carte.type = "Action";
            carte.cout[0] = 25;
            carte.cout[12] = 25;
            carte.vente[0] = 13;
            carte.vente[12] = 12;
            carte.texte = function () {
                return "Augmente " + effet_talent_voir("Gel", carte) + " de 1 pour toutes les Unités sur le terrain avec " + effet_talent_voir("Gel", carte) + ".";
            }
            carte.effet_pose = function () {
                let verifier = false;
                for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                    if (Jeu[carte.camp].terrain[n].gel >= 1) {
                        verifier = true;
                    }
                }
                for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                    if (Jeu[camp_oppose(carte.camp)].terrain[n].gel >= 1) {
                        verifier = true;
                    }
                }
                if (verifier) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].gel >= 1) {
                            Jeu[carte.camp].terrain[n].gel++;
                        }
                    }
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                        if (Jeu[camp_oppose(carte.camp)].terrain[n].gel >= 1) {
                            Jeu[camp_oppose(carte.camp)].terrain[n].gel++;
                        }
                    }
                    deplacer(carte, "joueur", "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 411:
            carte.nom = "Troll cogneur";
            define_creature(carte);
            carte.familles.push("Troll");
            carte.cout[0] = 25;
            carte.cout[12] = 24;
            carte.vente[0] = 12;
            carte.vente[12] = 12;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand attaque : Augmente " + effet_talent_voir("Gel", carte, 1) + " de 1 à l'Unité attaquée avec " + effet_talent_voir("Gel", carte, 1) + ".";
            }
            carte.effet_attaque = function (defenseur) {
                if (defenseur.gel >= 1) {
                    defenseur.gel++;
                }
            }
            break;
        case 412:
            carte.nom = "Gardien goliath";
            define_creature(carte);
            carte.familles.push("Goliath");
            carte.cout[0] = 5;
            carte.cout[12] = 4;
            carte.vente[0] = 2;
            carte.vente[12] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 5;
            carte.protection = true;
            break;
        case 413:
            carte.nom = "Gardien d'épine";
            define_creature(carte);
            carte.familles.push("Elfe");
            carte.cout[0] = 6;
            carte.cout[3] = 5;
            carte.vente[0] = 3;
            carte.vente[3] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 5;
            carte.protection = true;
            carte.epine = 2;
            break;
        case 414:
            carte.nom = "Golem de glace";
            define_creature(carte);
            carte.familles.push("Golem");
            carte.cout[0] = 22;
            carte.cout[4] = 10;
            carte.cout[12] = 10;
            carte.vente[0] = 11;
            carte.vente[4] = 5;
            carte.vente[12] = 5;
            carte.attaque = 10;
            carte.defense = 10;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Quand attaqué : Applique " + effet_talent_voir("Gel", carte, 1) + " à la Créature attaquante.";
            }
            carte.effet_be_attaque = function (attaquant) {
                if (attaquant.gel < 1) {
                    attaquant.gel = 1;
                }
            }
            break;
        case 415:
            carte.nom = "Marteau de paladin";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme", "Paladin");
            carte.cout[0] = 10;
            carte.cout[10] = 10;
            carte.vente[0] = 5;
            carte.vente[10] = 5;
            carte.stat_equipement.charge = true;
            carte.stat_equipement.effet_attaque = function (attaquant, defenseur) {
                degats(defenseur, parseInt(attaquant.vie_sup));
            }
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Charge", carte) + " et l'effet suivant à la Créature équipée : Inflige autant de dégâts que la vie supplémentaire de la créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 416:
            carte.nom = "Élémentaire double";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[8] = 25;
            carte.vente[8] = 12;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Créé une copie de cette carte sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    let nouvelle_carte = dupliquer_objet(carte);
                    nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    ajouter(nouvelle_carte, carte.camp, "terrain");
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 417:
            carte.nom = "Élémentaire multiple";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[8] = 65;
            carte.vente[8] = 32;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Au début de la phase de préparation : Créé une copie de cette carte sur le terrain.";
            }
            carte.effet_etage_debut = function () {
                let nouvelle_carte = carte;
                nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                ajouter(nouvelle_carte, carte.camp, "terrain");
            }
            break;
        case 418:
            carte.nom = "Élémentaire adaptatif";
            define_creature(carte);
            carte.familles.push("Élémentaire");
            carte.cout[8] = 10;
            carte.vente[8] = 5;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.texte = function () {
                return "Quand posé : Remplace les éléments de cette carte par un élément de votre choix.";
            }
            carte.effet_pose = function (step, choix) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (!statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez un Élément : ";
                                texte += "<br/><br/>";
                                for (let n = 0; n < Jeu.ressources.length; n++) {
                                    if (n == 0) {
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2,0)'>Neutre</button>";
                                    }
                                    else {
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>" + Jeu.ressources[n].nom + "</button>";
                                    }
                                    texte += "<br/>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            carte.elements = [];
                            if (choix > 0) {
                                carte.elements.push(Jeu.ressources[choix].nom);
                            }
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 419:
            carte.nom = "Commandant paladin";
            define_creature(carte);
            carte.familles.push("Aasimar", "Paladin");
            carte.cout[0] = 45;
            carte.cout[10] = 44;
            carte.vente[0] = 22;
            carte.vente[10] = 22;
            carte.attaque = 15;
            carte.vie_max = carte.vie = 20;
            carte.vie_sup = 10;
            carte.texte = function () {
                return "Quand posé : Donne 10 vie supplémentaire à toutes les Créatures alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature" && Jeu[carte.camp].terrain[n].vie_sup < 10) {
                            Jeu[carte.camp].terrain[n].vie_sup = 10;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 420:
            carte.nom = "Ruée";
            carte.type = "Action";
            carte.cout[0] = 20;
            carte.vente[0] = 10;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Rapidité", carte) + " à toutes les Créatures alliées sur le terrain jusqu'à la fin de la phase de combat.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            Jeu[carte.camp].terrain[n].stat_etage.rapidite = true;
                        }
                    }
                }
                deplacer(carte, carte.camp, "defausse");
                actualiser_zone();
                return true;
            }
            break;
        case 421:
            carte.nom = "Paladin protecteur";
            define_creature(carte);
            carte.familles.push("Aasimar", "Paladin");
            carte.cout[0] = 26;
            carte.cout[10] = 25;
            carte.vente[0] = 13;
            carte.vente[10] = 12;
            carte.attaque = 15;
            carte.vie_max = carte.vie = 20;
            carte.vie_sup = 10;
            carte.protection = true;
            carte.texte = function () {
                return "Au début de la phase de préparation : Se donne 10 vie supplémentaire.";
            }
            carte.effet_etage_debut = function () {
                if (carte.sup < 10) {
                    carte.sup = 10;
                }
            }
            break;
        case 422:
            carte.nom = "Ange gardien";
            define_creature(carte);
            carte.familles.push("Ange");
            carte.cout[0] = 26;
            carte.cout[5] = 13;
            carte.cout[10] = 13;
            carte.vente[0] = 12;
            carte.vente[5] = 7;
            carte.vente[10] = 7;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.protection = true;
            carte.texte = function () {
                return "Quand posé : Si le Meneur allié est blessé, le soigne de 10. Sinon, se donne 5 vie.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    if (Jeu[carte.camp].vie < Jeu[carte.camp].vie_max) {
                        soin_direct(carte.camp, 10);
                    }
                    else {
                        carte.vie += 5;
                        carte.vie_max += 5;
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 423:
            carte.nom = "Ange sauveur";
            define_creature(carte);
            carte.familles.push("Ange");
            carte.cout[0] = 25;
            carte.cout[5] = 12;
            carte.cout[10] = 12;
            carte.vente[0] = 12;
            carte.vente[5] = 6;
            carte.vente[10] = 6;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand posé : Si le Meneur allié est blessé, le soigne de 10. Sinon, donne 5 vie max au Meneur allié.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    if (Jeu[carte.camp].vie < Jeu[carte.camp].vie_max) {
                        soin_direct(carte.camp, 10);
                    }
                    else {
                        Jeu[carte.camp].vie_max += 5;
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 424:
            carte.nom = "Ange vengeur";
            define_creature(carte);
            carte.familles.push("Ange");
            carte.cout[0] = 27;
            carte.cout[5] = 14;
            carte.cout[10] = 14;
            carte.vente[0] = 13;
            carte.vente[5] = 7;
            carte.vente[10] = 7;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand attaque : Si le Meneur allié est blessé, le soigne de 4. Sinon, inflige 8 dégâts à l'Unité attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                if (Jeu[carte.camp].vie < Jeu[carte.camp].vie_max) {
                    soin_direct(carte.camp, 4);
                }
                else {
                    degats(defenseur, 8);
                }
            }
            break;
        case 425:
            carte.nom = "Géant cogneur";
            define_creature(carte);
            carte.familles.push("Géant");
            carte.cout[0] = 49;
            carte.vente[0] = 24;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand attaque : Applique " + effet_talent_voir("Étourdissement", carte) + " à la Créature attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                defenseur.etourdissement = true;
            }
            break;
        case 426:
            carte.nom = "Médecin de la peste";
            define_creature(carte);
            carte.familles.push("Drow");
            carte.cout[0] = 4;
            carte.cout[11] = 4;
            carte.vente[0] = 4;
            carte.vente[11] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Pioche 1 Action Maladie.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let verifier = false;
                        for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                            if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).familles.includes("Maladie")) {
                                verifier = true;
                            }
                        }
                        if (verifier) {
                            let nouvelle_carte = boutique_generer();
                            while (!nouvelle_carte.familles.includes("Maladie")) {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 427:
            carte.nom = "Moustique";
            define_creature(carte);
            carte.cout[0] = 2;
            carte.cout[11] = 1;
            carte.vente[0] = 1;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 1;
            carte.texte = function () {
                return "Quand attaque : Applique " + effet_talent_voir("Contamination", carte, 1) + " à la Créature attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                if (defenseur.type == "Créature") {
                    defenseur.maladie++;
                }
            }
            break;
        case 428:
            carte.nom = "Rat";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 2;
            carte.cout[11] = 2;
            carte.vente[0] = 1;
            carte.vente[11] = 1;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 2;
            carte.texte = function () {
                return "Quand posé : Applique " + effet_talent_voir("Contamination", carte, 2) + " à une Créature adverse.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible].contamination += 2;
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        Jeu.joueur.terrain[best].contamination += 2;
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 429:
            carte.nom = "Zombie épidémique";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Zombie");
            carte.cout[0] = 5;
            carte.cout[9] = 5;
            carte.vente[0] = 3;
            carte.vente[9] = 2;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.texte = function () {
                return "Quand attaqué : Applique " + effet_talent_voir("Contamination", carte, 1) + " à la Créature attaquante.";
            }
            carte.effet_be_attaque = function (attaquant) {
                attaquant.contamination++;
            }
            break;
        case 430:
            carte.nom = "Contagion";
            carte.type = "Action";
            carte.familles.push("Maladie");
            carte.cout[0] = 2;
            carte.cout[11] = 2;
            carte.vente[0] = 1;
            carte.vente[11] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Contamination", carte, 2) + " aux Créatures en avant et en arrière d'une Créature adverse avec " + effet_talent_voir("Contamination", carte) + " sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_contamination("adverse")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].contamination > 0 && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (cible > 0) {
                                if (Jeu.adverse.terrain[cible - 1].type == "Créature") {
                                    Jeu.adverse.terrain[cible - 1].contamination += 2;
                                }
                            }
                            if (cible < Jeu.adverse.terrain.length - 1) {
                                if (Jeu.adverse.terrain[cible + 1].type == "Créature") {
                                    Jeu.adverse.terrain[cible + 1].contamination += 2;
                                }
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_contamination("joueur")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || Jeu.joueur.terrain[best].contamination == 0 || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (!Jeu.joueur.terrain[n].contamination > 0 && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        if (best > 0) {
                            if (Jeu.joueur.terrain[best - 1].type == "Créature") {
                                Jeu.joueur.terrain[best - 1].contamination += 2;
                            }
                        }
                        if (best < Jeu.joueur.terrain.length - 1) {
                            if (Jeu.joueur.terrain[best + 1].type == "Créature") {
                                Jeu.joueur.terrain[best + 1].contamination += 2;
                            }
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 431:
            carte.nom = "Démoniste";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 7;
            carte.cout[1] = 4;
            carte.cout[9] = 4;
            carte.vente[0] = 3;
            carte.vente[1] = 2;
            carte.vente[9] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Place dans sur le terrain une Créature Démon dans la main.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.main.length; n++) {
                                if (Jeu.joueur.main[n].familles.includes("Démon") && Jeu.joueur.main[n].type == "Créature") {
                                    verifier = true;
                                }
                            }
                            if (verifier && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature Démon dans la main : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Main :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.main.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "main", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.main[n].familles.includes("Démon") && Jeu.joueur.main[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            deplacer(Jeu.joueur.main[cible], "joueur", "terrain");
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.main.length; n++) {
                        if (Jeu.adverse.main[n].familles.includes("Démon") && Jeu.adverse.main[n].type == "Créature") {
                            verifier = true;
                        }
                    }
                    if (verifier && !statistique(carte, "silence")) {
                        let best = 0;
                        while (!Jeu.adverse.main[best].familles.includes("Démon") || Jeu.adverse.main[best].type != "Créature") {

                        }
                        deplacer(Jeu.joueur.main[best], "adverse", "main");
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 432:
            carte.nom = "Guerrier cyclope";
            define_creature(carte);
            carte.familles.push("Cyclope");
            carte.cout[0] = 21;
            carte.cout[6] = 20;
            carte.vente[0] = 10;
            carte.vente[6] = 10;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand posé : Crée " + effet_carte_voir_id(433, carte) + " dans la boutique.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let nouvelle_carte = obtenir_carte(433);
                        nouvelle_carte.cache = true;
                        ajouter(nouvelle_carte, "joueur", "boutique");
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 433:
            carte.nom = "Marteau de guerre cylopéen";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme", "Cyclope");
            carte.cout[0] = 20;
            carte.cout[6] = 20;
            carte.vente[0] = 10;
            carte.vente[6] = 10;
            carte.stat_equipement.attaque = 40;
            carte.stat_equipement.percee = 10;
            carte.stat_equipement.charge = true;
            carte.exclusif = true;
            carte.texte = function () {
                return "Donne 40 attaque, applique " + effet_talent_voir("Percée", carte, 10) + " et " + effet_talent_voir("Charge", carte) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 434:
            carte.nom = "Garde cyclope";
            define_creature(carte);
            carte.familles.push("Cyclope");
            carte.cout[0] = 21;
            carte.cout[6] = 20;
            carte.vente[0] = 10;
            carte.vente[6] = 10;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand posé : Crée " + effet_carte_voir_id(435, carte) + " dans la boutique.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let nouvelle_carte = obtenir_carte(435);
                        nouvelle_carte.cache = true;
                        ajouter(nouvelle_carte, "joueur", "boutique");
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 435:
            carte.nom = "Plastron cylopéen";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure", "Cyclope");
            carte.cout[0] = 20;
            carte.cout[6] = 20;
            carte.vente[0] = 10;
            carte.vente[6] = 10;
            carte.stat_equipement.vie = 25;
            carte.stat_equipement.regeneration = 5;
            carte.stat_equipement.resistance = 5;
            carte.exclusif = true;
            carte.texte = function () {
                return "Donne 25 vie max, applique " + effet_talent_voir("Régénération", carte, 5) + " et " + effet_talent_voir("Résistance", carte, 5) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 436:
            carte.nom = "Mage cyclope";
            define_creature(carte);
            carte.familles.push("Cyclope", "Mage");
            carte.cout[0] = 21;
            carte.cout[6] = 20;
            carte.vente[0] = 10;
            carte.vente[6] = 10;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand posé : Crée " + effet_carte_voir_id(437, carte) + " dans la boutique.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let nouvelle_carte = obtenir_carte(437);
                        nouvelle_carte.cache = true;
                        ajouter(nouvelle_carte, "joueur", "boutique");
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 437:
            carte.nom = "Baguette cylopéenne";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme", "Cyclope");
            carte.cout[0] = 20;
            carte.cout[6] = 20;
            carte.vente[0] = 10;
            carte.vente[6] = 10;
            carte.stat_equipement.sorcellerie = 10;
            carte.stat_equipement.effet_pose_carte = function (creature, carte_posee) {
                if (carte_posee.camp == creature.camp && carte_posee.familles.includes("Sort")) {
                    creature.attaque++;
                    creature.vie++;
                    creature.vie_max++;
                }
            }
            carte.stat_equipement.effet_etage_debut = function () {
                if (carte.camp == "joueur") {
                    let verifier = false;
                    for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                        if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).familles.includes("Sort")) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let nouvelle_carte = boutique_generer();
                        while (!nouvelle_carte.familles.includes("Sort")) {
                            nouvelle_carte = boutique_generer();
                        }
                        pioche("joueur", nouvelle_carte);
                    }
                }
            }
            carte.exclusif = true;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Sorcellerie", carte, 10) + " et l'effet suivant à la Créature équipée : Quand une Action Sort alliée est posée : Se donne 1 attaque et 1 vie. Au début de la phase de préparation : Pioche 1 Action Sort.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 438:
            carte.nom = "Gardien des murs";
            define_creature(carte);
            carte.familles.push("Nain");
            carte.cout[0] = 15;
            carte.cout[4] = 15;
            carte.vente[0] = 8;
            carte.vente[4] = 7;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Quand posé : Se donne 1 défense pour chaque Bâtiment Mur allié sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Bâtiment" && Jeu[carte.camp].terrain[n].familles.includes("Mur")) {
                            carte.defense++;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 439:
            carte.nom = "Gardien nain";
            define_creature(carte);
            carte.familles.push("Nain");
            carte.cout[0] = 5;
            carte.cout[4] = 4;
            carte.vente[0] = 2;
            carte.vente[4] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 5;
            carte.protection = true;
            break;
        case 440:
            carte.nom = "Bottes ailées";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 3;
            carte.cout[5] = 2;
            carte.vente[0] = 1;
            carte.vente[5] = 1;
            carte.stat_equipement.rapidite = true;
            carte.stat_equipement.effet_etage_debut = function () {
                if (carte.camp == "joueur") {
                    pioche("joueur");
                }
            }
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Rapidité", carte) + " et l'effet suivant à la Créature équipée : Au début de la phase de préparation : Pioche 1 carte.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 441:
            carte.nom = "Hydre venimeuse";
            define_creature(carte);
            carte.familles.push("Reptile", "Hydre");
            carte.cout[0] = 26;
            carte.cout[2] = 25;
            carte.vente[0] = 13;
            carte.vente[2] = 12;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.action_max = 2;
            carte.texte = function () {
                return "Quand attaque : Applique " + effet_talent_voir("Poison", carte, 4) + " à la Créature attaquée.";
            }
            carte.effet_attaque = function (defenseur) {
                if (defenseur.type == "Créature") {
                    defenseur.poison += 4;
                }
            }
            break;
        case 442:
            carte.nom = "Hydre immortelle";
            define_creature(carte);
            carte.familles.push("Reptile", "Hydre");
            carte.cout[0] = 30;
            carte.cout[2] = 30;
            carte.vente[0] = 15;
            carte.vente[2] = 15;
            carte.attaque = 15;
            carte.vie_max = carte.vie = 20;
            carte.action_max = 2;
            carte.regeneration = 5;
            carte.texte = function () {
                return "Quand est attaqué : Se donne 5 vie max.";
            }
            carte.effet_be_attaque = function () {
                carte.vie_max += 5;
            }
            break;
        case 443:
            carte.nom = "Hydre à 5 têtes";
            define_creature(carte);
            carte.familles.push("Reptile", "Hydre"); carte.attaque = 10;
            carte.cout[0] = 40;
            carte.cout[2] = 39;
            carte.vente[0] = 20;
            carte.vente[2] = 19;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.action_max = 5;
            break;
        case 444:
            carte.nom = "Mur d'enceinte nain";
            carte.type = "Bâtiment";
            carte.familles.push("Mur", "Nain");
            carte.cout[0] = 10;
            carte.cout[4] = 9;
            carte.vente[0] = 5;
            carte.vente[4] = 4;
            carte.vie_max = carte.vie = 20;
            break;
        case 445:
            carte.nom = "Champion";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 24;
            carte.vente[0] = 12;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Au début d'un tour de combat : Si cette Créature est en première en position, se donne 2 attaque et 2 vie.";
            }
            carte.effet_tour_debut = function () {
                if (carte.zone == "terrain" && carte.slot == 0) {
                    carte.attaque += 2;
                    carte.vie += 2;
                    carte.vie_max += 2;
                }
            }
            break;
        case 446:
            carte.nom = "Barrière de corail";
            carte.type = "Bâtiment";
            carte.familles.push("Mur");
            carte.cout[0] = 8;
            carte.cout[2] = 7;
            carte.vente[0] = 4;
            carte.vente[2] = 3;
            carte.vie_max = carte.vie = 10;
            carte.regeneration = 3;
            break;
        case 447:
            carte.nom = "Phare";
            carte.type = "Bâtiment";
            carte.cout[0] = 6;
            carte.cout[2] = 6;
            carte.vente[0] = 3;
            carte.vente[2] = 3;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Au début de la phase de préparation : Enlève " + effet_talent_voir("Camouflage", carte) + " à l'Unité adverse la plus en avant sur le terrain avec " + effet_talent_voir("Camouflage", carte) + ".";
            }
            carte.effet_etage_debut = function () {
                let verifier = false;
                for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                    if (Jeu[camp_oppose(carte.camp)].terrain[n].camouflage) {
                        verifier = true;
                    }
                }
                if (verifier) {
                    let best = 0;
                    while (!Jeu[camp_oppose(carte.camp)].terrain[best].camouflage) {
                        best++;
                    }
                    Jeu[camp_oppose(carte.camp)].terrain[best].camouflage = false;
                }
            }
            break;
        case 448:
            carte.nom = "Prince";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 35;
            carte.vente[0] = 17;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Se donne 1 attaque et 1 vie à pour chaque Créature alliée sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            carte.attaque++;
                            carte.vie_max++;
                            carte.vie++;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 449:
            carte.nom = "Tir groupé";
            carte.type = "Action";
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.texte = function () {
                return "Inflige autant de dégât à une Unité adverse sur le terrain que de Créature alliée avec " + effet_talent_voir("Portée", carte) + " sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].portee) {
                                    verifier = true;
                                }
                            }
                            if (verifier_cible("adverse", "terrain") && verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            let damage = 0;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].portee) {
                                    damage++;
                                }
                            }
                            degats(Jeu.adverse.terrain[cible], damage);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].portee) {
                            verifier = true;
                        }
                    }
                    if (verifier_cible("joueur", "terrain") && verifier) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        let damage = 0;
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (Jeu.adverse.terrain[n].portee) {
                                damage++;
                            }
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && Jeu.joueur.terrain[n].vie <= damage && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[best], damage);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 450:
            carte.nom = "Scarification";
            carte.type = "Action";
            carte.cout[0] = 1;
            carte.texte = function () {
                return "Inflige 2 dégâts puis donne 2 attaque à une Créature sur le terrain.";
            }
            carte.effet_pose = function (step, cible_camp, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain") || verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                if (Jeu.joueur.terrain.length > 0) {
                                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                        texte += "<div class='carte'>";
                                        texte += "<div>";
                                        texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                        texte += "</div>";
                                        if (Jeu.joueur.terrain[n].type == "Créature") {
                                            texte += "<div>";
                                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + '"joueur",' + n + ")'>Cibler</button>";
                                            texte += "</div>";
                                        }
                                        texte += "</div>";
                                    }
                                }
                                else {
                                    texte += "<i>Votre terrain est vide</i>";
                                    texte += "<br/>";
                                }
                                texte += "</div>";
                                texte += "<br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                if (Jeu.adverse.terrain.length > 0) {
                                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                        texte += "<div class='carte'>";
                                        texte += "<div>";
                                        if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                            texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                        }
                                        else {
                                            texte += "???";
                                        }
                                        texte += "</div>";
                                        if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                            texte += "<div>";
                                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + '"adverse",' + n + ")'>Cibler</button>";
                                            texte += "</div>";
                                        }
                                        texte += "</div>";
                                    }
                                }
                                else {
                                    texte += "<i>Le terrain adverse est vide</i>";
                                    texte += "<br/>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu[cible_camp].terrain[cible].attaque += 2;
                            degats(Jeu[cible_camp].terrain[cible], 2);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier1 = false;
                    let verifier2 = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].vie > 2 && [52].includes(Jeu.adverse.terrain[n].id)) {
                            verifier1 = true;
                        }
                    }
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie <= 2 && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                            verifier2 = true;
                        }
                    }
                    if (verifier1) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].vie <= 2 || ![52].includes(Jeu.adverse.terrain[best].id)) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].attaque += 2;
                        degats(Jeu.adverse.terrain[best], 2);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    else if (verifier2) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || Jeu.joueur.terrain[best].vie > 2 || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && Jeu.joueur.terrain[n].vie <= 2 && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        Jeu.joueur.terrain[best].attaque += 2;
                        degats(Jeu.joueur.terrain[best], 2);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 451:
            carte.nom = "Impôts";
            carte.type = "Action";
            carte.cout[0] = 10;
            carte.vente[0] = 5;
            carte.texte = function () {
                return "Enlève autant d'Or à l'adversaire que de Créature adverse sur le terrain.";
            }
            carte.effet_pose = function () {
                let verifier = false;
                for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                    if (Jeu[camp_oppose(carte.camp)].terrain[n].type == "Créature") {
                        verifier = true;
                    }
                }
                if (Jeu[camp_oppose(carte.camp)].ressources[0].courant > 0 && verifier) {
                    let nombre = 0;
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].terrain.length; n++) {
                        if (Jeu[camp_oppose(carte.camp)].terrain[n].type == "Créature") {
                            nombre++;
                        }
                    }
                    Jeu[camp_oppose(carte.camp)].ressources[0].courant -= nombre;
                    if (Jeu[camp_oppose(carte.camp)].ressources[0].courant < 0) {
                        Jeu[camp_oppose(carte.camp)].ressources[0].courant = 0;
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 452:
            carte.nom = "Inflation";
            carte.type = "Action";
            carte.cout[0] = 50;
            carte.vente[0] = 25;
            carte.texte = function () {
                return "Augmente le coût en Or des cartes adverses dans la boutique de 5.";
            }
            carte.effet_pose = function () {
                if (Jeu[camp_oppose(carte.camp)].boutique.length > 0) {
                    for (let n = 0; n < Jeu[camp_oppose(carte.camp)].boutique.length; n++) {
                        Jeu[camp_oppose(carte.camp)].boutique[n].cout[0] += 5;
                        if (Jeu[camp_oppose(carte.camp)].boutique[n].cout[0] < 0) {
                            Jeu[camp_oppose(carte.camp)].boutique[n].cout[0] = 0;
                        }
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 453:
            carte.nom = "Frondeur gobelin";
            define_creature(carte);
            carte.familles.push("Gobelin");
            carte.cout[0] = 5;
            carte.cout[1] = 4;
            carte.vente[0] = 2;
            carte.vente[1] = 2;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 3;
            carte.portee = true;
            carte.texte = function () {
                return "Quand posé : Inflige 1 dégât à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain") && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            degats(Jeu.adverse.terrain[cible], 1);
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain") && !statistique(carte, "silence")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if ((Jeu.joueur.terrain[n].vie == 1 && Jeu.joueur.terrain[best].vie > 1) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[best], 1);
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 454:
            carte.nom = "Piquier gobelin";
            define_creature(carte);
            carte.familles.push("Gobelin");
            carte.cout[0] = 5;
            carte.cout[1] = 4;
            carte.vente[0] = 2;
            carte.vente[1] = 2;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 3;
            carte.percee = 2;
            carte.texte = function () {
                return "Quand posé : Inflige 1 dégât à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain") && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            degats(Jeu.adverse.terrain[cible], 1);
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain") && !statistique(carte, "silence")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if ((Jeu.joueur.terrain[n].vie == 1 && Jeu.joueur.terrain[best].vie > 1) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[best], 1);
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 455:
            carte.nom = "Roi gobelin";
            define_creature(carte);
            carte.familles.push("Gobelin");
            carte.cout[0] = 33;
            carte.cout[1] = 32;
            carte.vente[0] = 16;
            carte.vente[1] = 16;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 6 attaque à toutes les Créatures alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            Jeu[carte.camp].terrain[n].attaque += 6;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 456:
            carte.nom = "Archer elfe";
            define_creature(carte);
            carte.familles.push("Elfe");
            carte.cout[0] = 4;
            carte.cout[3] = 4;
            carte.vente[0] = 2;
            carte.vente[3] = 2;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 3;
            carte.portee = true;
            break;
        case 457:
            carte.nom = "Reine elfe";
            define_creature(carte);
            carte.familles.push("Elfe");
            carte.cout[0] = 33;
            carte.cout[3] = 32;
            carte.vente[0] = 16;
            carte.vente[3] = 16;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 3 vie à toutes les Créatures alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            Jeu[carte.camp].terrain[n].vie += 3;
                            Jeu[carte.camp].terrain[n].vie_max += 3;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 458:
            carte.nom = "Ondin ruisselant";
            define_creature(carte);
            carte.familles.push("Ondin");
            carte.cout[0] = 4;
            carte.cout[2] = 3;
            carte.vente[0] = 2;
            carte.vente[2] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Au début de la phase de préparation : Ajoute 1 Eau.";
            }
            carte.effet_etage_debut = function () {
                Jeu[carte.camp].ressources[2].courant++;
            }
            break;
        case 459:
            carte.nom = "Ondin proliférateur";
            define_creature(carte);
            carte.familles.push("Ondin");
            carte.cout[0] = 6;
            carte.cout[2] = 5;
            carte.vente[0] = 3;
            carte.vente[2] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Au début de la phase de préparation : Ajoute 1 Eau max.";
            }
            carte.effet_etage_debut = function () {
                Jeu[carte.camp].ressources[2].max++;
            }
            break;
        case 460:
            carte.nom = "Roi ondin";
            define_creature(carte);
            carte.familles.push("Ondin");
            carte.cout[0] = 33;
            carte.cout[2] = 32;
            carte.vente[0] = 16;
            carte.vente[2] = 16;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 attaque et 1 vie à toutes les Créatures alliées sur le terrain et ajoute 3 Eau pour chaque Créature alliée sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            Jeu[carte.camp].terrain[n].attaque++;
                            Jeu[carte.camp].terrain[n].vie++;
                            Jeu[carte.camp].terrain[n].vie_max++;
                            Jeu[carte.camp].ressources[2].courant += 3;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 461:
            carte.nom = "Roi nain";
            define_creature(carte);
            carte.familles.push("Nain");
            carte.cout[0] = 33;
            carte.cout[4] = 32;
            carte.vente[0] = 16;
            carte.vente[4] = 16;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 2 attaque à toutes les Créatures alliées sur le terrain. Donne 2 vie à tous les Bâtiments alliés sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            Jeu[carte.camp].terrain[n].attaque += 2;
                        }
                        else {
                            Jeu[carte.camp].terrain[n].vie += 2;
                            Jeu[carte.camp].terrain[n].vie_max += 2;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 462:
            carte.nom = "Roi satyre";
            define_creature(carte);
            carte.familles.push("Satyre");
            carte.cout[0] = 33;
            carte.cout[6] = 32;
            carte.vente[0] = 16;
            carte.vente[6] = 16;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 4 attaque et 4 vie à toutes les Créatures alliées sur le terrain jusqu'à la fin de la phase de combat.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            Jeu[carte.camp].terrain[n].stat_etage.attaque += 4;
                            Jeu[carte.camp].terrain[n].stat_etage.vie += 4;
                            Jeu[carte.camp].terrain[n].stat_etage.vie_max += 4;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 463:
            carte.nom = "Roi goliath";
            define_creature(carte);
            carte.familles.push("Goliath");
            carte.cout[0] = 33;
            carte.cout[12] = 32;
            carte.vente[0] = 16;
            carte.vente[12] = 16;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 3 défense à toutes les Créatures alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            Jeu[carte.camp].terrain[n].defense += 2;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 464:
            carte.nom = "Roi drow";
            define_creature(carte);
            carte.familles.push("Drow");
            carte.cout[0] = 33;
            carte.cout[11] = 32;
            carte.vente[0] = 16;
            carte.vente[11] = 16;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 2 attaque, 1 défense et 1 vie à toutes les Créatures alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            Jeu[carte.camp].terrain[n].attaque += 2;
                            Jeu[carte.camp].terrain[n].defense++;
                            Jeu[carte.camp].terrain[n].vie++;
                            Jeu[carte.camp].terrain[n].vie_max++;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 465:
            carte.nom = "Roi aasimar";
            define_creature(carte);
            carte.familles.push("Aasimar");
            carte.cout[0] = 33;
            carte.cout[10] = 32;
            carte.vente[0] = 16;
            carte.vente[10] = 16;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 2 attaque, 1 vie et soigne 2 à toutes les Créatures alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            Jeu[carte.camp].terrain[n].attaque += 2;
                            Jeu[carte.camp].terrain[n].vie++;
                            Jeu[carte.camp].terrain[n].vie_max++;
                            soin(Jeu[carte.camp].terrain[n], 2);
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 466:
            carte.nom = "Prêtre aasimar";
            define_creature(carte);
            carte.familles.push("Aasimar");
            carte.cout[0] = 4;
            carte.cout[10] = 4;
            carte.vente[0] = 2;
            carte.vente[10] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Soigne 3 à une Créature alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_soin_creature("joueur") && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée blessée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie < Jeu.joueur.terrain[n].vie_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            soin(Jeu.joueur.terrain[cible], 3);
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_soin_creature("adverse") && !statistique(carte, "silence")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].vie >= Jeu.adverse.terrain[best].vie_max) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if ((Jeu.adverse.terrain[n].vie_max - Jeu.adverse.terrain[n].vie) > (Jeu.adverse.terrain[best].vie_max - Jeu.adverse.terrain[best].vie) && Jeu.adverse.terrain[n].type == "Créature") {
                                best = n;
                            }
                        }
                        soin(Jeu.adverse.terrain[best], 3);
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 467:
            carte.nom = "Roi céleste";
            define_creature(carte);
            carte.familles.push("Céleste");
            carte.cout[0] = 33;
            carte.cout[5] = 32;
            carte.vente[0] = 16;
            carte.vente[5] = 16;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 attaque et 1 vie à toutes les Créatures alliées sur le terrain et dans la main.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].main.length; n++) {
                        if (Jeu[carte.camp].main[n].type == "Créature") {
                            Jeu[carte.camp].main[n].attaque++;
                            Jeu[carte.camp].main[n].vie++;
                            Jeu[carte.camp].main[n].vie_max++;
                        }
                    }
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            Jeu[carte.camp].terrain[n].attaque++;
                            Jeu[carte.camp].terrain[n].vie++;
                            Jeu[carte.camp].terrain[n].vie_max++;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 468:
            carte.nom = "Roi revenant";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Revenant");
            carte.cout[0] = 33;
            carte.cout[9] = 32;
            carte.vente[0] = 16;
            carte.vente[9] = 16;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 attaque et 1 vie à toutes les Créatures alliées sur le terrain et dans la défausse.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            Jeu[carte.camp].terrain[n].attaque++;
                            Jeu[carte.camp].terrain[n].vie++;
                            Jeu[carte.camp].terrain[n].vie_max++;
                        }
                    }
                    for (let n = 0; n < Jeu[carte.camp].defausse.length; n++) {
                        if (Jeu[carte.camp].defausse[n].type == "Créature") {
                            Jeu[carte.camp].defausse[n].attaque++;
                            Jeu[carte.camp].defausse[n].vie++;
                            Jeu[carte.camp].defausse[n].vie_max++;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 469:
            carte.nom = "Président";
            define_creature(carte);
            carte.familles.push("Gnome");
            carte.cout[0] = 33;
            carte.cout[7] = 32;
            carte.vente[0] = 16;
            carte.vente[7] = 16;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 1 attaque et 1 vie à toutes les Créatures alliées sur le terrain. Donne 1 attaque et 1 vie à toutes les créatures alliées sur le terrain pour chaque 10 Créatures alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    let nombre = 0;
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            nombre++;
                        }
                    }
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature") {
                            Jeu[carte.camp].terrain[n].attaque += 1 + parseInt(nombre / 10);
                            Jeu[carte.camp].terrain[n].vie += 1 + parseInt(nombre / 10);
                            Jeu[carte.camp].terrain[n].vie_max += 1 + parseInt(nombre / 10);
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 470:
            carte.nom = "Roi kalashtar";
            define_creature(carte);
            carte.familles.push("Kalashtar");
            carte.cout[0] = 33;
            carte.cout[8] = 32;
            carte.vente[0] = 16;
            carte.vente[8] = 16;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Donne 6 attaque à toutes les Créatures alliées sur le terrain.<br/>ou<br/>Donne 3 vie à toutes les Créatures alliées sur le terrain.";
            }
            carte.effet_pose = function (step, effet) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_creature("joueur", "terrain") && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez un effet : ";
                                texte += "<br/><br/>";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2,1)'>Donne 6 attaque à toutes les Créatures alliées sur le terrain</button>";
                                texte += "<br/>";
                                texte += "ou";
                                texte += "<br/>";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2,2)'>Donne 3 vie à toutes les Créatures alliées sur le terrain</button>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            if (effet == 1) {
                                for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                                    if (Jeu[carte.camp].terrain[n].type == "Créature") {
                                        Jeu[carte.camp].terrain[n].attaque += 6;
                                    }
                                }
                            }
                            else {
                                for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                                    if (Jeu[carte.camp].terrain[n].type == "Créature") {
                                        Jeu[carte.camp].terrain[n].vie += 3;
                                        Jeu[carte.camp].terrain[n].vie_max += 3;
                                    }
                                }
                            }
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (!statistique(carte, "silence")) {
                        let somme_attaque = 0;
                        let somme_vie = 0;
                        for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                            if (Jeu.adverse.terrain[n].type == "Créature") {
                                somme_attaque += Jeu.adverse.terrain[n].attaque;
                                somme_vie += Jeu.adverse.terrain[n].vie_max;
                            }
                        }
                        if (somme_vie >= somme_attaque) {
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].type == "Créature") {
                                    Jeu.adverse.terrain[n].attaque += 6;
                                }
                            }
                        }
                        else {
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].type == "Créature") {
                                    Jeu.adverse.terrain[n].attaque += 6;
                                }
                            }
                        }
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 471:
            carte.nom = "Spirite";
            define_creature(carte);
            carte.familles.push("Kalashtar");
            carte.cout[0] = 4;
            carte.cout[8] = 4;
            carte.vente[0] = 2;
            carte.vente[8] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Créé " + effet_carte_voir_id(472, carte) + " sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    let nouvelle_carte = obtenir_carte(472);
                    nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    ajouter(nouvelle_carte, carte.camp, "terrain");
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 472:
            carte.nom = "Esprit";
            define_creature(carte);
            carte.cout[0] = 2;
            carte.cout[8] = 1;
            carte.vente[8] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.temporaire = true;
            break;
        case 473:
            carte.nom = "Invocateur spirite";
            define_creature(carte);
            carte.familles.push("Kalashtar");
            carte.cout[0] = 7;
            carte.cout[8] = 7;
            carte.vente[0] = 4;
            carte.vente[8] = 3;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Créé " + effet_carte_voir_id(472, carte) + " sur le terrain.<br/>Au début de la phase de préparation : Créé " + effet_carte_voir_id(472, carte) + " sur le terrain.";
            }
            carte.effet_etage_debut = function () {
                let nouvelle_carte = obtenir_carte(472);
                nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                ajouter(nouvelle_carte, carte.camp, "terrain");
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    let nouvelle_carte = obtenir_carte(472);
                    nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    ajouter(nouvelle_carte, carte.camp, "terrain");
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 474:
            carte.nom = "Épée spirituelle";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme");
            carte.cout[0] = 4;
            carte.cout[8] = 4;
            carte.vente[0] = 2;
            carte.vente[8] = 2;
            carte.stat_equipement.attaque = 20;
            carte.temporaire = true;
            carte.texte = function () {
                return "Donne 20 attaque à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 475:
            carte.nom = "Baguette de mage";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme", "Mage");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.stat_equipement.sorcellerie = 5;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Sorcellerie", carte, 5) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 476:
            carte.nom = "Baguette d'archimage";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme", "Mage");
            carte.cout[0] = 16;
            carte.vente[0] = 8;
            carte.stat_equipement.sorcellerie = 10;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Sorcellerie", carte, 10) + " à la Créature équipée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 477:
            carte.nom = "Mage de combat";
            define_creature(carte);
            carte.familles.push("Humain", "Mage");
            carte.cout[0] = 24;
            carte.vente[0] = 12;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            carte.texte = function () {
                return "Quand attaque : Inflige autant de dégats à l'Unité attaquée que la " + effet_talent_voir("Sorcellerie", carte) + " de cette créature.";
            }
            carte.effet_attaque = function (defenseur) {
                degats(defenseur, carte.sorcellerie);
            }
            break;
        case 478:
            carte.nom = "Archimage de combat";
            define_creature(carte);
            carte.familles.push("Humain", "Mage");
            carte.cout[0] = 79;
            carte.vente[0] = 39;
            carte.attaque = 15;
            carte.vie_max = carte.vie = 15;
            carte.sorcellerie = 5;
            carte.texte = function () {
                return "Quand attaque : Inflige autant de dégats à l'Unité attaquée que de " + effet_talent_voir("Sorcellerie", carte) + ".";
            }
            carte.effet_attaque = function (defenseur) {
                degats(defenseur, sorcellerie(carte.camp));
            }
            break;
        case 479:
            carte.nom = "Gnome maître d'armes";
            define_creature(carte);
            carte.familles.push("Gnome");
            carte.cout[0] = 10;
            carte.cout[7] = 10;
            carte.vente[0] = 5;
            carte.vente[7] = 5;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.equipement_max = 2;
            break;
        case 480:
            carte.nom = "Automate d'armement";
            define_creature(carte);
            carte.familles.push("Machine", "Automate");
            carte.cout[0] = 20;
            carte.cout[7] = 20;
            carte.vente[0] = 10;
            carte.vente[7] = 10;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.equipement_max = 4;
            break;
        case 481:
            carte.nom = "Archer elfe";
            define_creature(carte);
            carte.familles.push("Elfe");
            carte.cout[0] = 4;
            carte.cout[3] = 4;
            carte.vente[0] = 2;
            carte.vente[3] = 2;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 3;
            carte.portee = true;
            break;
        case 482:
            carte.nom = "Archer céleste";
            define_creature(carte);
            carte.familles.push("Céleste");
            carte.cout[0] = 4;
            carte.cout[5] = 4;
            carte.vente[0] = 2;
            carte.vente[5] = 2;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 3;
            carte.portee = true;
            break;
        case 483:
            carte.nom = "Crise économique";
            carte.type = "Action";
            carte.cout[0] = 50;
            carte.vente[0] = 25;
            carte.texte = function () {
                return "Dépense tout votre Or et, pour chaque 10 Or dépensé, diminue le coût en Or des cartes alliées dans la boutique de 1.";
            }
            carte.effet_pose = function () {
                if (Jeu[carte.camp].boutique.length > 0) {
                    for (let n = 0; n < Jeu[carte.camp].boutique.length; n++) {
                        Jeu[carte.camp].boutique[n].cout[0] += parseInt(Jeu[carte.camp].ressources[0].courant / 10);
                        if (Jeu[carte.camp].boutique[n].cout[0] < 0) {
                            Jeu[carte.camp].boutique[n].cout[0] = 0;
                        }
                    }
                    deplacer(carte, carte.camp, "defausse");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                return false;
            }
            break;
        case 484:
            carte.nom = "Gaz toxique";
            carte.type = "Action";
            carte.cout[0] = 3;
            carte.cout[9] = 2;
            carte.vente[0] = 1;
            carte.vente[9] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Poison", carte, 10) + " à une Créature adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible_creature("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible].poison += 10;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible_creature("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        Jeu.joueur.terrain[best].poison += 10;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 485:
            carte.nom = "Jet d'acide";
            carte.type = "Action";
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.texte = function () {
                return "Enlève 4 défense à une Unité adverse sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].defense > 0) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible].defense -= 4;
                            if (Jeu.adverse.terrain[cible].defense < 0) {
                                Jeu.adverse.terrain[cible].defense = 0;
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].defense > 0) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence && Jeu.joueur.terrain[best].defense > 0) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (Jeu.joueur.terrain[n].defense > 0 && Jeu.joueur.terrain[n].defense > Jeu.joueur.terrain[best].defense && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        Jeu.joueur.terrain[cible].defense -= 4;
                        if (Jeu.joueur.terrain[cible].defense < 0) {
                            Jeu.joueur.terrain[cible].defense = 0;
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 486:
            carte.nom = "Panthère";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 7;
            carte.cout[11] = 6;
            carte.vente[0] = 3;
            carte.vente[11] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.camouflage = true;
            break;
        case 487:
            carte.nom = "Léopard";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 7;
            carte.cout[6] = 6;
            carte.vente[0] = 3;
            carte.vente[6] = 3;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.rapidite = true;
            break;
        case 488:
            carte.nom = "Anémie";
            carte.type = "Action";
            carte.familles.push("Maladie");
            carte.cout[0] = 10;
            carte.cout[11] = 10;
            carte.vente[0] = 5;
            carte.vente[11] = 5;
            carte.texte = function () {
                return "Enlève " + effet_talent_voir("Contamination", carte) + " à une Créature adverse et lui applique " + effet_talent_voir("Saignement", carte) + " d'autant que le nombre de " + effet_talent_voir("Contamination", carte) + " enlevé.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_contamination("adverse")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].contamination > 0 && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.adverse.terrain[cible - 1].saignement = Jeu.adverse.terrain[cible - 1].contamination;
                            Jeu.adverse.terrain[cible - 1].contamination = 0;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_contamination("joueur")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || Jeu.joueur.terrain[best].contamination == 0 || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if (!Jeu.joueur.terrain[n].contamination > 0 && Jeu.joueur.terrain[n].type == "Créature" && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        Jeu.joueur.terrain[best - 1].saignement = Jeu.joueur.terrain[best - 1].contamination;
                        Jeu.joueur.terrain[best - 1].contamination = 0;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 489:
            carte.nom = "Pigeon voyageur";
            define_creature(carte);
            carte.familles.push("Oiseau");
            carte.cout[0] = 2;
            carte.cout[5] = 2;
            carte.vente[0] = 1;
            carte.vente[5] = 1;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 2;
            carte.texte = function () {
                return "Quand posé : Pioche 1 carte.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    pioche("joueur");
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 490:
            carte.nom = "Roi mage";
            define_creature(carte);
            carte.familles.push("Humain", "Mage");
            carte.cout[0] = 67;
            carte.vente[0] = 33;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 5;
            carte.texte = function () {
                return "Quand posé : Applique " + effet_talent_voir("Sorcellerie", carte, 3) + " à toutes les Créatures Mage alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature" && Jeu[carte.camp].terrain[n].familles.includes("Mage")) {
                            Jeu[carte.camp].terrain[n].sorcellerie += 3;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 491:
            carte.nom = "Professeur de magie";
            define_creature(carte);
            carte.familles.push("Humain", "Mage");
            carte.cout[0] = 15;
            carte.vente[0] = 7;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.sorcellerie = 2;
            carte.texte = function () {
                return "Quand posé : Donne " + effet_talent_voir("Sorcellerie", carte, 1) + " à une Créature Mage alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].familles.includes("Mage")) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature Mage alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].familles.includes("Mage")) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].sorcellerie++;
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].familles.includes("Mage")) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || !Jeu.adverse.terrain[best].familles.includes("Mage")) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].sorcellerie++;
                    }
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 492:
            carte.nom = "Aventure";
            carte.type = "Action";
            carte.cout[0] = 15;
            carte.vente[0] = 7;
            carte.texte = function () {
                return "Pioche 1 Région, 1 Créature, 1 Bâtiment, 1 Objet et 1 Action.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    let verifier_1 = verifier_2 = verifier_3 = verifier_4 = verifier_5 = false;
                    for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                        if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n))) {
                            if (obtenir_carte(n).type == "Région") {
                                verifier_1 = true;
                            }
                            else if (obtenir_carte(n).type == "Créature") {
                                verifier_2 = true;
                            }
                            else if (obtenir_carte(n).type == "Bâtiment") {
                                verifier_3 = true;
                            }
                            else if (obtenir_carte(n).type == "Objet") {
                                verifier_4 = true;
                            }
                            else if (obtenir_carte(n).type == "Action") {
                                verifier_5 = true;
                            }
                        }
                    }
                    if (verifier_1 || verifier_2 || verifier_3 || verifier_4 || verifier_5) {
                        let nouvelle_carte = boutique_generer();
                        if (verifier_1) {
                            while (nouvelle_carte.type != "Région") {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                        if (verifier_2) {
                            while (nouvelle_carte.type != "Créature") {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                        if (verifier_3) {
                            while (nouvelle_carte.type != "Bâtiment") {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                        if (verifier_4) {
                            while (nouvelle_carte.type != "Objet") {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                        if (verifier_5) {
                            while (nouvelle_carte.type != "Action") {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                        deplacer(carte, "joueur", "defausse");
                        effet_pose(carte);
                        actualiser_zone();
                    }
                }
                else {
                    return false;
                }
            }
            break;
        case 493:
            carte.nom = "Aventurier";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 11;
            carte.vente[0] = 5;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Pioche 1 Objet et 1 Action.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let verifier1 = verifier2 = false;
                        for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                            if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n))) {
                                if (obtenir_carte(n).type == "Action") {
                                    verifier1 = true;
                                }
                                if (obtenir_carte(n).type == "Objet") {
                                    verifier2 = true;
                                }
                            }
                        }
                        if (verifier1 || verifier2) {
                            let nouvelle_carte = boutique_generer();
                            if (verifier1) {
                                while (nouvelle_carte.type != "Action") {
                                    nouvelle_carte = boutique_generer();
                                }
                                pioche("joueur", nouvelle_carte);
                            }
                            if (verifier2) {
                                while (nouvelle_carte.type != "Objet") {
                                    nouvelle_carte = boutique_generer();
                                }
                                pioche("joueur", nouvelle_carte);
                            }
                        }
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 494:
            carte.nom = "Boussole";
            carte.type = "Objet";
            carte.cout[0] = 3;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Pioche 1 Région.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    let verifier = false;
                    for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                        if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Région") {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let nouvelle_carte = boutique_generer();
                        while (nouvelle_carte.type != "Région") {
                            nouvelle_carte = boutique_generer();
                        }
                        pioche("joueur", nouvelle_carte);
                        deplacer(carte, "joueur", "defausse");
                        effet_pose(carte);
                        actualiser_zone();
                    }
                }
                else {
                    return false;
                }
            }
            break;
        case 495:
            carte.nom = "Mapemonde";
            carte.type = "Objet";
            carte.cout[0] = 15;
            carte.vente[0] = 7;
            carte.texte = function () {
                return "Bannis toutes les cartes alliées dans la boutique et actualise la boutique avec des Régions.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    let verifier = false;
                    for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                        if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Région") {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        Jeu.joueur.boutique = [];
                        while (Jeu.joueur.boutique.length < 3 + parseInt((Jeu.boutique_niveau - 1) / 2)) {
                            let nouvelle_carte = boutique_generer();
                            while (nouvelle_carte.type != "Région") {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                        deplacer(carte, "joueur", "defausse");
                        effet_pose(carte);
                        actualiser_zone();
                    }
                }
                else {
                    return false;
                }
            }
            break;
        case 496:
            carte.nom = "Taverne";
            carte.type = "Bâtiment";
            carte.cout[0] = 16;
            carte.vente[0] = 8;
            carte.vie_max = carte.vie = 10;
            carte.action_max = 1;
            carte.texte = function () {
                return "Au début de la phase de préparation : Pioche 1 Créature.";
            }
            carte.effet_etage_debut = function () {
                if (carte.camp == "joueur") {
                    let verifier = false;
                    for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                        if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Créature") {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let nouvelle_carte = boutique_generer();
                        while (nouvelle_carte.type != "Créature") {
                            nouvelle_carte = boutique_generer();
                        }
                        pioche("joueur", nouvelle_carte);
                    }
                }
            }
            break;
        case 497:
            carte.nom = "Auberge";
            carte.type = "Bâtiment";
            carte.cout[0] = 15;
            carte.vente[0] = 7;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Au début de la phase de préparation : Soigne 5 à votre meneur.";
            }
            carte.effet_etage_debut = function () {
                soin_direct(carte.camp, 5);
            }
            break;
        case 498:
            carte.nom = "Tavernier";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Pioche 1 Créature.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let verifier = false;
                        for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                            if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Créature") {
                                verifier = true;
                            }
                        }
                        if (verifier) {
                            let nouvelle_carte = boutique_generer();
                            while (!nouvelle_carte.type == "Créature") {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 499:
            carte.nom = "Aubergiste";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Soigne 3 à votre meneur.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    soin_direct(carte.camp, 3);
                }
                deplacer(carte, "adverse", "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 500:
            carte.nom = "Feu de camp";
            carte.type = "Bâtiment";
            carte.cout[0] = 20;
            carte.vente[0] = 10;
            carte.vie_max = carte.vie = 10;
            carte.action_max = 1;
            carte.texte = function () {
                return "Au début de la phase de préparation : Soigne 1 à toutes les Créatures alliées sur le terrain.";
            }
            carte.effet_etage_debut = function () {
                let array = [];
                for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                    array.push(Jeu[carte.camp].terrain[n]);
                }
                for (let n = 0; n < array.length; n++) {
                    soin(array[n], 3);
                }
            }
            break;
        case 501:
            carte.nom = "Forge";
            carte.type = "Bâtiment";
            carte.cout[0] = 16;
            carte.vente[0] = 8;
            carte.vie_max = carte.vie = 10;
            carte.action_max = 1;
            carte.texte = function () {
                return "Au début de la phase de préparation : Pioche 1 Objet Équipement.";
            }
            carte.effet_etage_debut = function () {
                if (carte.camp == "joueur") {
                    let verifier = false;
                    for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                        verifier = true;
                        if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).familles.includes("Équipement")) {
                        }
                    }
                    if (verifier) {
                        let nouvelle_carte = boutique_generer();
                        while (!obtenir_carte(n).familles.includes("Équipement")) {
                            nouvelle_carte = boutique_generer();
                        }
                        pioche("joueur", nouvelle_carte);
                    }
                }
            }
            break;
        case 502:
            carte.nom = "Chat noir";
            define_creature(carte);
            carte.familles.push("Bête");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.attaque = 2;
            carte.vie_max = carte.vie = 2;
            carte.texte = function () {
                return "Quand posé : Inflige 2 dégâts à votre meneur et pioche 2 cartes.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        degats_direct("joueur", 2);
                    }
                    pioche("joueur");
                    deplacer(carte, carte.camp, "terrain");
                    effet_pose(carte);
                    if (Jeu.joueur.vie > 0) {
                        actualiser_zone();
                    }
                    else {
                        game_over();
                    }
                }
                else {
                    if (Jeu.adverse.vie > 1 || statistique(carte, "silence")) {
                        if (!statistique(carte, "silence")) {
                            degats_direct("adverse", 1);
                        }
                        deplacer(carte, carte.camp, "terrain");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 503:
            carte.nom = "Scorpion";
            define_creature(carte);
            carte.cout[0] = 20;
            carte.cout[1] = 20;
            carte.vente[0] = 10;
            carte.vente[1] = 10;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 1;
            carte.letalite = true;
            break;
        case 504:
            carte.nom = "Veuve noire";
            define_creature(carte);
            carte.familles.push("Araignée");
            carte.cout[0] = 20;
            carte.cout[9] = 20;
            carte.vente[0] = 10;
            carte.vente[9] = 10;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 1;
            carte.letalite = true;
            break;
        case 505:
            carte.nom = "Jet d'eau";
            carte.type = "Action";
            carte.cout[0] = 2;
            carte.cout[2] = 1;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Inflige 3 dégât à une Unité adverse sur le terrain. Dépense 7 eau et en inflige 10 au total.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_cible("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            if (Jeu[carte.camp].ressources[2].courant + Jeu[carte.camp].ressources[2].reserve >= 7) {
                                if (Jeu[carte.camp].ressources[2].courant >= 7) {
                                    Jeu[carte.camp].ressources[2].courant -= 7;
                                }
                                else {
                                    Jeu[carte.camp].ressources[2].reserve -= 7 - Jeu[carte.camp].ressources[2].courant;
                                    Jeu[carte.camp].ressources[2].courant = 0;
                                }
                                degats(Jeu.adverse.terrain[cible], 10);
                            }
                            else {
                                degats(Jeu.adverse.terrain[cible], 3);
                            }
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        if (Jeu[carte.camp].ressources[2].courant + Jeu[carte.camp].ressources[2].reserve >= 7) {
                            if (Jeu[carte.camp].ressources[2].courant >= 7) {
                                Jeu[carte.camp].ressources[2].courant -= 7;
                            }
                            else {
                                Jeu[carte.camp].ressources[2].reserve -= 7 - Jeu[carte.camp].ressources[2].courant;
                                Jeu[carte.camp].ressources[2].courant = 0;
                            }
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].vie < 10 && Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                    best = n;
                                }
                            }
                            degats(Jeu.joueur.terrain[best], 10);
                        }
                        else {
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].vie < 3 && Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                    best = n;
                                }
                            }
                            degats(Jeu.joueur.terrain[best], 3);
                        }
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 506:
            carte.nom = "Bandit";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Dépense 3 Or, se donne 1 attaque et 1 vie.";
            }
            carte.effet_pose = function () {
                if (Jeu[carte.camp].ressources[0].courant + Jeu[carte.camp].ressources[0].reserve >= 3) {
                    if (Jeu[carte.camp].ressources[0].courant >= 3) {
                        Jeu[carte.camp].ressources[0].courant -= 3;
                    }
                    else {
                        Jeu[carte.camp].ressources[0].reserve -= 3 - Jeu[carte.camp].ressources[2].courant;
                        Jeu[carte.camp].ressources[0].courant = 0;
                    }
                    carte.attaque++;
                    carte.vie++;
                    carte.vie_max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 507:
            carte.nom = "Brigand";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Enlève 1 Or max, se donne 1 attaque et 1 vie.";
            }
            carte.effet_pose = function () {
                if (Jeu[carte.camp].ressources[0].max >= 1) {
                    Jeu[carte.camp].ressources[0].max -= 1;
                    carte.attaque++;
                    carte.vie++;
                    carte.vie_max++;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 508:
            carte.nom = "Bandit archer";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Dépense 3 or, se donne 2 attaque et s'applique " + effet_talent_voir("Portée", carte) + ".";
            }
            carte.effet_pose = function () {
                if (Jeu[carte.camp].ressources[0].courant + Jeu[carte.camp].ressources[0].reserve >= 3) {
                    if (Jeu[carte.camp].ressources[0].courant >= 3) {
                        Jeu[carte.camp].ressources[0].courant -= 3;
                    }
                    else {
                        Jeu[carte.camp].ressources[0].reserve -= 3 - Jeu[carte.camp].ressources[2].courant;
                        Jeu[carte.camp].ressources[0].courant = 0;
                    }
                    carte.attaque += 2;
                    carte.portee = true;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 509:
            carte.nom = "Voleur de chevaux";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 5;
            carte.vente[0] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Dépense 3 or et s'applique " + effet_talent_voir("Rapidité", carte) + ".";
            }
            carte.effet_pose = function () {
                if (Jeu[carte.camp].ressources[0].courant + Jeu[carte.camp].ressources[0].reserve >= 3) {
                    if (Jeu[carte.camp].ressources[0].courant >= 3) {
                        Jeu[carte.camp].ressources[0].courant -= 3;
                    }
                    else {
                        Jeu[carte.camp].ressources[0].reserve -= 3 - Jeu[carte.camp].ressources[2].courant;
                        Jeu[carte.camp].ressources[0].courant = 0;
                    }
                    carte.rapidite = true;
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 510:
            carte.nom = "Chef des bandits";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 9;
            carte.vente[0] = 4;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.texte = function () {
                return "Au début d'un tour de combat : Dépense 5 or et créé " + effet_carte_voir_id(506, carte) + " sur le terrain.";
            }
            carte.effet_tour_debut = function () {
                if (Jeu[carte.camp].ressources[0].courant + Jeu[carte.camp].ressources[0].reserve >= 5) {
                    if (Jeu[carte.camp].ressources[0].courant >= 5) {
                        Jeu[carte.camp].ressources[0].courant -= 5;
                    }
                    else {
                        Jeu[carte.camp].ressources[0].reserve -= 5 - Jeu[carte.camp].ressources[2].courant;
                        Jeu[carte.camp].ressources[0].courant = 0;
                    }
                    let nouvelle_carte = obtenir_carte(506);
                    nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    ajouter(nouvelle_carte, carte.camp, "terrain");
                }
            }
            break;
        case 511:
            carte.nom = "Cierge";
            carte.type = "Objet";
            carte.familles.push("Église");
            carte.cout[0] = 2;
            carte.cout[10] = 2;
            carte.vente[0] = 1;
            carte.vente[10] = 1;
            carte.texte = function () {
                return "Soigne 3 à une Créature alliée sur le terrain.<br/>ou<br/>Donne 1 Lumière max.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let texte = "";
                            texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                            texte += "<br/><br/>";
                            texte += carte.nom;
                            texte += "<br/>";
                            texte += carte.texte();
                            texte += "<br/><br/>";
                            texte += "Choisissez un effet : ";
                            texte += "<br/><br/>";
                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2)'>Soigne 3 à une Créature alliée sur le terrain</button>";
                            texte += "<br/>";
                            texte += "ou";
                            texte += "<br/>";
                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(4)'>Donne 1 Lumière max</button>";
                            texte += "</div>";
                            afficher_choix(texte);
                            break;
                        case 2:
                            if (verifier_soin_creature("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += "Soigne 3 à une Créature alliée sur le terrain.";
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].vie < Jeu.joueur.terrain[n].vie_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(3," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 3:
                            soin(Jeu.joueur.terrain[cible], 3);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                        case 4:
                            Jeu.joueur.ressources[10].max++;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_soin_creature("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].vie >= Jeu.adverse.terrain[best].vie_max) {
                            best++;
                        }
                        soin(Jeu.adverse.terrain[best], 3);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 512:
            carte.nom = "Torche";
            carte.type = "Objet";
            carte.cout[0] = 2;
            carte.cout[1] = 2;
            carte.vente[0] = 1;
            carte.vente[1] = 1;
            carte.texte = function () {
                return "Inflige 3 dégâts à une Unité adverse sur le terrain.<br/>ou<br/>Donne 1 Feu max.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let texte = "";
                            texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                            texte += "<br/><br/>";
                            texte += carte.nom;
                            texte += "<br/>";
                            texte += carte.texte();
                            texte += "<br/><br/>";
                            texte += "Choisissez un effet : ";
                            texte += "<br/><br/>";
                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2)'>Inflige 3 dégâts à une Unité adverse sur le terrain</button>";
                            texte += "<br/>";
                            texte += "ou";
                            texte += "<br/>";
                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(4)'>Donne 1 Feu max</button>";
                            texte += "</div>";
                            afficher_choix(texte);
                            break;
                        case 2:
                            if (verifier_cible("adverse", "terrain")) {
                                let texte = "";
                                texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(1)'>Retour</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += "Inflige 3 dégâts à une Unité adverse sur le terrain.";
                                texte += "<br/><br/>";
                                texte += "Choisissez une Unité adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                    }
                                    else {
                                        texte += "???";
                                    }
                                    texte += "</div>";
                                    if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(3," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 3:
                            degats(Jeu.adverse.terrain[cible], 3);
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                        case 4:
                            Jeu.joueur.ressources[1].max++;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_cible("joueur", "terrain")) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence) {
                            best++;
                        }
                        for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                            if ((Jeu.joueur.terrain[n].vie <= 3 && Jeu.joueur.terrain[best].vie > 3) || Jeu.joueur.terrain[n].vie > Jeu.joueur.terrain[best].vie && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                                best = n;
                            }
                        }
                        degats(Jeu.joueur.terrain[best], 3);
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 513:
            carte.nom = "Conque";
            carte.type = "Objet";
            carte.cout[0] = 2;
            carte.cout[2] = 1;
            carte.vente[2] = 1;
            carte.texte = function () {
                return "Enlève 2 Or max et donne 3 Eau max.";
            }
            carte.effet_pose = function () {
                if (Jeu[carte.camp].ressources[0].max >= 2) {
                    Jeu[carte.camp].ressources[0].max -= 2;
                    Jeu[carte.camp].ressources[2].max += 3;
                }
                deplacer(carte, carte.camp, "defausse");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 514:
            carte.nom = "Sergent";
            define_creature(carte);
            carte.familles.push("Humain", "Militaire");
            carte.cout[0] = 18;
            carte.vente[0] = 9;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.texte = function () {
                return "Quand posé : Créé " + effet_carte_voir_id(207, carte) + " sur le terrain";
            }
            carte.effet_pose = function () {
                let nouvelle_carte = obtenir_carte(207);
                nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                ajouter(nouvelle_carte, carte.camp, "terrain");
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 515:
            carte.nom = "Capitaine d'infanterie";
            define_creature(carte);
            carte.familles.push("Humain", "Militaire");
            carte.cout[0] = 46;
            carte.vente[0] = 23;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Quand posé : Créé 3 " + effet_carte_voir_id(207, carte) + " sur le terrain";
            }
            carte.effet_pose = function () {
                for (let n = 0; n < 3; n++) {
                    let nouvelle_carte = obtenir_carte(207);
                    nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    ajouter(nouvelle_carte, carte.camp, "terrain");
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 516:
            carte.nom = "Général";
            define_creature(carte);
            carte.familles.push("Humain", "Militaire");
            carte.cout[0] = 91;
            carte.vente[0] = 45;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Quand posé : Donne 3 attaque et 3 vie à toutes les Créatures Militaire alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature" && Jeu[carte.camp].terrain[n].familles.includes("Militaire")) {
                            Jeu[carte.camp].terrain[n].attaque += 3;
                            Jeu[carte.camp].terrain[n].vie_max += 3;
                            Jeu[carte.camp].terrain[n].vie += 3;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
        case 517:
            carte.nom = "Promotion";
            carte.type = "Action";
            carte.familles.push("Militaire");
            carte.cout[0] = 15;
            carte.vente[0] = 7;
            carte.texte = function () {
                return "Donne 5 attaque et 5 vie à une Créature Militaire alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].familles.includes("Militaire")) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature Militaire alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].familles.includes("Militaire")) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].attaque += 5;
                            Jeu.joueur.terrain[cible].vie += 5;
                            Jeu.joueur.terrain[cible].vie_max += 5;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].familles.includes("Militaire")) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || !Jeu.joueur.terrain[n].familles.includes("Militaire")) {
                            best++;
                        }
                        Jeu.adverse.terrain[cible].attaque += 5;
                        Jeu.adverse.terrain[cible].vie += 5;
                        Jeu.adverse.terrain[cible].vie_max += 5;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 518:
            carte.nom = "Cavalier";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 12;
            carte.vente[0] = 6;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.rapidite = true;
            break;
        case 519:
            carte.nom = "Fouet de ronces toxiques";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Arme", "Plante");
            carte.cout[0] = 3;
            carte.cout[3] = 3;
            carte.vente[0] = 2;
            carte.vente[3] = 1;
            carte.stat_equipement.epine = 2;
            carte.stat_equipement.effet_attaque = function (attaquant, defenseur) {
                defenseur.poison += 2;
                let cible_1, cible_2;
                if (defenseur.slot > 0) {
                    cible_1 = Jeu[defenseur.camp].terrain[defenseur.slot - 1];
                }
                if (defenseur.slot < Jeu[defenseur.camp].terrain.length - 1) {
                    cible_2 = Jeu[defenseur.camp].terrain[defenseur.slot + 1];
                }
                if (defenseur.slot > 0) {
                    if (cible1.type == "Créature") {
                        cible_1.poison += 2;
                    }
                }
                if (defenseur.slot < Jeu[defenseur.camp].terrain.length - 1) {
                    if (cible2.type == "Créature") {
                        cible_1.poison += 2;
                    }
                }
            }
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Épine", carte, 2) + " et l'effet suivant à la Créature équipée : Applique " + effet_talent_voir("Poison", carte, 2) + " à la Créature attaquée et aux Créatures en avant et en arrière de la Créature attaquée.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 520:
            carte.nom = "Poisson globe";
            define_creature(carte);
            carte.familles.push("Poisson");
            carte.cout[0] = 2;
            carte.cout[2] = 2;
            carte.vente[0] = 1;
            carte.vente[2] = 1;
            carte.attaque = 1;
            carte.vie_max = carte.vie = 3;
            carte.epine = 1;
            break;
        case 521:
            carte.nom = "Nageur expérimenté";
            define_creature(carte);
            carte.familles.push("Ondin");
            carte.cout[0] = 4;
            carte.cout[2] = 4;
            carte.vente[0] = 2;
            carte.vente[2] = 2;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.rapidite = true;
            break;
        case 522:
            carte.nom = "Piège à ours";
            carte.type = "Bâtiment";
            carte.familles.push("Piège");
            carte.cout[0] = 12;
            carte.vente[0] = 6;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand une Créature adverse est posée : Lui inflige 10 dégâts et se détruit.";
            }
            carte.effet_pose_carte = function (carte_pose) {
                if (carte_pose.zone == "terrain" && carte_pose.camp != carte.camp && carte_pose.type == "Créature") {
                    degats(carte_pose, 10);
                    mort(carte);
                }
            }
            break;
        case 523:
            carte.nom = "Fosse piégée";
            carte.type = "Bâtiment";
            carte.familles.push("Piège");
            carte.cout[0] = 24;
            carte.vente[0] = 12;
            carte.vie_max = carte.vie = 5;
            carte.texte = function () {
                return "Quand une Créature adverse est posée : La détruit et se détruit.";
            }
            carte.effet_pose_carte = function (carte_pose) {
                if (carte_pose.zone == "terrain" && carte_pose.camp != carte.camp && carte_pose.type == "Créature") {
                    mort(carte_pose);
                    mort(carte);
                }
            }
            break;
        case 524:
            carte.nom = "Sol épineux";
            carte.type = "Bâtiment";
            carte.familles.push("Plante");
            carte.cout[0] = 13;
            carte.vente[0] = 6;
            carte.vie_max = carte.vie = 3;
            carte.epine = 1;
            carte.texte = function () {
                return "Quand une Créature adverse est posée : Lui inflige 1 dégât.";
            }
            carte.effet_pose_carte = function (carte_pose) {
                if (carte_pose.camp != carte.camp && carte_pose.type == "Créature") {
                    degats(carte_pose, 1);
                }
            }
            break;
        case 525:
            carte.nom = "Piège explosif";
            carte.type = "Bâtiment";
            carte.familles.push("Piège");
            carte.cout[0] = 6;
            carte.cout[1] = 6;
            carte.vente[0] = 3;
            carte.vente[1] = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand une Créature adverse est posée : Lui inflige 10 dégâts et se détruit.";
            }
            carte.effet_pose_carte = function (carte_pose) {
                if (carte_pose.zone == "terrain" && carte_pose.camp != carte.camp && carte_pose.type == "Créature") {
                    degats(carte_pose, 10);
                    mort(carte);
                }
            }
            break;
        case 526:
            carte.nom = "Trappeur";
            define_creature(carte);
            carte.familles.push("Humain");
            carte.cout[0] = 8;
            carte.vente[0] = 4;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand posé : Pioche 1 Bâtiment Piège.";
            }
            carte.effet_pose = function () {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let verifier = false;
                        for (let n = 1; n <= Jeu.NOMBRE_CARTE; n++) {
                            if (Jeu.joueur.regions[Jeu.region_active].boutique_generer(obtenir_carte(n)) && obtenir_carte(n).type == "Bâtiment" && obtenir_carte(n).familles.includes("Piège")) {
                                verifier = true;
                            }
                        }
                        if (verifier) {
                            let nouvelle_carte = boutique_generer();
                            while (nouvelle_carte.type != "Bâtiment" || !nouvelle_carte.familles.includes("Piège")) {
                                nouvelle_carte = boutique_generer();
                            }
                            pioche("joueur", nouvelle_carte);
                        }
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 527:
            carte.nom = "Couronne";
            carte.type = "Objet";
            carte.familles.push("Équipement", "Armure");
            carte.cout[0] = 48;
            carte.vente[0] = 24;
            carte.texte = function () {
                return "Applique l'effet suivant à la Créature équipée : Quand une Créature alliée est posée : Lui donne 2 attaque et 2 vie.";
            }
            carte.stat_equipement.effet_pose_carte = function (carte_equipe, carte_pose) {
                if (carte_pose.type == "Créature" && carte_pose.camp == carte_equipe.camp) {
                    carte_pose.attaque += 2;
                    carte_pose.vie += 2;
                    carte_pose.vie_max += 2;
                }
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            if (verifier_equipement("joueur")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée équipable sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].equipements.length < Jeu.joueur.terrain[n].equipement_max) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            equiper(Jeu.joueur.terrain[cible], carte);
                            effet_pose(carte);
                            enlever(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    if (verifier_equipement("adverse")) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].equipements.length >= Jeu.adverse.terrain[best].equipement_max) {
                            best++;
                        }
                        equiper(Jeu.adverse.terrain[best], carte);
                        effet_pose(carte);
                        enlever(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 528:
            carte.nom = "Spectre";
            define_creature(carte);
            carte.familles.push("Fantôme");
            carte.cout[0] = 4;
            carte.cout[9] = 4;
            carte.vente[0] = 2;
            carte.vente[9] = 2;
            carte.attaque = 5;
            carte.vie_max = carte.vie = 5;
            carte.ephemere = true;
            break;
        case 529:
            carte.nom = "Maison hantée";
            carte.type = "Bâtiment";
            carte.familles.push("Fantôme");
            carte.cout[0] = 11;
            carte.cout[9] = 10;
            carte.vente[0] = 5;
            carte.vente[9] = 5;
            carte.vie_max = carte.vie = 10;
            carte.texte = function () {
                return "Au début d'un tour de combat : Crée " + effet_carte_voir_id(60, carte) + " sur le terrain.";
            }
            carte.effet_tour_debut = function () {
                let nouvelle_carte = obtenir_carte(207);
                nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                ajouter(nouvelle_carte, carte.camp, carte.zone);
            }
            break;
        case 530:
            carte.nom = "Traverser les murs";
            carte.type = "Action";
            carte.familles.push("Fantôme");
            carte.cout[0] = 2;
            carte.cout[9] = 1;
            carte.vente[0] = 1;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Camouflage", carte) + " et applique " + effet_talent_voir("Rapidité", carte) + " jusqu'à la fin de la phase de combat à une Créature Fantôme alliée sur le terrain.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].familles.includes("Fantôme") && (!Jeu.joueur.terrain[n].camouflage || !Jeu.joueur.terrain[n].rapidite)) {
                                    verifier = true;
                                }
                            }
                            if (verifier) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature alliée sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.terrain[n].type == "Créature" && Jeu.joueur.terrain[n].familles.includes("Fantôme") && (!Jeu.joueur.terrain[n].camouflage || !Jeu.joueur.terrain[n].rapidite)) {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu.joueur.terrain[cible].camouflage = true;
                            Jeu.joueur.terrain[cible].stat_etage.rapidite = true;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                        if (Jeu.adverse.terrain[n].type == "Créature" && Jeu.adverse.terrain[n].familles.includes("Fantôme") && (!Jeu.adverse.terrain[n].camouflage || !Jeu.adverse.terrain[n].rapidite)) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.adverse.terrain[best].type != "Créature" || Jeu.adverse.terrain[best].familles.includes("Fantôme") || (Jeu.adverse.terrain[best].camouflage && Jeu.adverse.terrain[best].rapidite)) {
                            best++;
                        }
                        Jeu.adverse.terrain[best].camouflage = true;
                        Jeu.adverse.terrain[best].stat_etage_rapidite = true;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 531:
            carte.nom = "Ectoplasme";
            carte.type = "Objet";
            carte.familles.push("Fantôme");
            carte.cout[0] = 5;
            carte.cout[9] = 4;
            carte.vente[0] = 2;
            carte.vente[9] = 2;
            carte.texte = function () {
                return "Applique " + effet_talent_voir("Éphémère", carte) + " et donne la famille Fantôme à une Créature non-Fantôme sur le terrain.";
            }
            carte.effet_pose = function (step, cible_camp, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier1 = verifer2 = false;
                            for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].familles.includes("Fantôme")) {
                                    verifier1 = true;
                                }
                            }
                            for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].familles.includes("Fantôme")) {
                                    verifier2 = true;
                                }
                            }
                            if (verifier1 || verifier2) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une Créature non-Fantôme sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain :</u>";
                                texte += "<br/>";
                                if (verifier1) {
                                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                                        texte += "<div class='carte'>";
                                        texte += "<div>";
                                        texte += afficher_carte("joueur", "terrain", n, "carte_side");
                                        texte += "</div>";
                                        if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].familles.includes("Fantôme")) {
                                            texte += "<div>";
                                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + '"joueur",' + n + ")'>Cibler</button>";
                                            texte += "</div>";
                                        }
                                        texte += "</div>";
                                    }
                                }
                                else {
                                    texte += "<i>Votre terrain est vide</i>";
                                    texte += "<br/>";
                                }
                                texte += "</div>";
                                texte += "<br/>";
                                texte += "Choisissez une Créature non-Fantôme adverse sur le terrain : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Terrain adverse :</u>";
                                texte += "<br/>";
                                if (verifier2) {
                                    for (let n = 0; n < Jeu.adverse.terrain.length; n++) {
                                        texte += "<div class='carte'>";
                                        texte += "<div>";
                                        if (!Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                            texte += afficher_carte("adverse", "terrain", n, "carte_side");
                                        }
                                        else {
                                            texte += "???";
                                        }
                                        texte += "</div>";
                                        if (Jeu.adverse.terrain[n].type == "Créature" && !Jeu.adverse.terrain[n].familles.includes("Fantôme") && !Jeu.adverse.terrain[n].camouflage || Jeu.adverse.terrain[n].silence) {
                                            texte += "<div>";
                                            texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + '"adverse",' + n + ")'>Cibler</button>";
                                            texte += "</div>";
                                        }
                                        texte += "</div>";
                                    }
                                }
                                else {
                                    texte += "<i>Le terrain adverse est vide</i>";
                                    texte += "<br/>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            break;
                        case 2:
                            Jeu[cible_camp].terrain[cible].familles.push("Fantôme");
                            Jeu[cible_camp].terrain[cible].ephemere = true;
                            deplacer(carte, "joueur", "defausse");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    let verifier = false;
                    for (let n = 0; n < Jeu.joueur.terrain.length; n++) {
                        if (Jeu.joueur.terrain[n].type == "Créature" && !Jeu.joueur.terrain[n].familles.includes("Fantôme") && (!Jeu.joueur.terrain[n].camouflage || Jeu.joueur.terrain[n].silence)) {
                            verifier = true;
                        }
                    }
                    if (verifier) {
                        let best = 0;
                        while (Jeu.joueur.terrain[best].type != "Créature" || Jeu.joueur.terrain[best].familles.includes("Fantôme") || (Jeu.joueur.terrain[best].camouflage && !Jeu.joueur.terrain[best].silence)) {
                            best++;
                        }
                        Jeu.joueur.terrain[best].familles.push("Fantôme");
                        Jeu.joueur.terrain[best].ephemere = true;
                        deplacer(carte, "adverse", "defausse");
                        effet_pose(carte);
                        return true;
                    }
                    return false;
                }
            }
            break;
        case 532:
            carte.nom = "Pirate fantôme";
            define_creature(carte);
            carte.familles.push("Fantôme", "Pirate");
            carte.cout[0] = 2;
            carte.cout[2] = 1;
            carte.cout[9] = 1;
            carte.vente[2] = 1;
            carte.vente[9] = 1;
            carte.attaque = 3;
            carte.vie_max = carte.vie = 3;
            carte.ephemere = true;
            break;
        case 533:
            carte.nom = "Oeuf de griffon";
            carte.type = "Bâtiment";
            carte.familles.push("Griffon", "Oeuf");
            carte.cout[0] = 17;
            carte.cout[5] = 16;
            carte.vente[0] = 8;
            carte.vente[5] = 8;
            carte.vie_max = carte.vie = 3;
            carte.texte = function () {
                return "Quand arrive sur le terrain : S'applique 3 Compteur.<br/>A la fin de la phase de combat : S'enlève 1 Compteur.<br/>Si cette carte n'a aucun Compteur : Se détruit et crée " + effet_carte_voir_id(67, carte) + " dans la main.";
            }
            carte.effet_ajouter = function () {
                if (carte.zone == "terrain") {
                    carte.compteur = 3;
                }
            }
            carte.effet_enlever = function () {
                if (carte.zone == "terrain") {
                    carte.compteur = 0;
                }
            }
            carte.effet_etage_fin = function () {
                carte.compteur--;
                carte.effet_compteur();
            }
            carte.effet_compteur = function () {
                if (carte.compteur == 0) {
                    let nouvelle_carte = obtenir_carte(67);
                    nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    ajouter(nouvelle_carte, carte.camp, "main");
                    carte.vie = 0;
                }
            }
            break;
        case 534:
            carte.nom = "Vaisseau fantôme";
            carte.type = "Bâtiment";
            carte.familles.push("Bateau", "Pirate", "Fantôme");
            carte.cout[0] = 12;
            carte.cout[2] = 5;
            carte.cout[9] = 5;
            carte.vente[0] = 7;
            carte.vente[2] = 2;
            carte.vente[9] = 2;
            carte.vie_max = carte.vie = 10;
            carte.mobile = true;
            carte.texte = function () {
                return "Au début d'un tour de combat : Crée " + effet_carte_voir_id(532, carte) + " sur le terrain.";
            }
            carte.effet_tour_debut = function () {
                let nouvelle_carte = obtenir_carte(532);
                nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                ajouter(nouvelle_carte, carte.camp, carte.zone);
            }
            break;
        case 535:
            carte.nom = "Ogre gourmet";
            define_creature(carte);
            carte.familles.push("Ogre");
            carte.cout[0] = 35;
            carte.cout[9] = 34;
            carte.vente[0] = 17;
            carte.vente[9] = 17;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 40;
            carte.texte = function () {
                return "Quand tue une Créature : Se soigne totalement.";
            }
            carte.effet_tuer = function (defenseur) {
                soin(carte, carte.vie_max - carte.vie);
            }
            break;
        case 536:
            carte.nom = "Ogre dévoreur";
            define_creature(carte);
            carte.familles.push("Ogre");
            carte.cout[0] = 28;
            carte.cout[9] = 27;
            carte.vente[0] = 14;
            carte.vente[9] = 13;
            carte.attaque = 25;
            carte.vie_max = carte.vie = 25;
            carte.texte = function () {
                return "Quand tue une Créature : Se donne 2 attaque et 2 vie.";
            }
            carte.effet_tuer = function (defenseur) {
                carte.attaque += 2;
                carte.vie += 2;
                carte.vie_max += 2;
            }
            break;
        case 537:
            carte.nom = "Sculpteur de reste";
            define_creature(carte);
            carte.familles.push("Ogre");
            carte.cout[0] = 25;
            carte.cout[9] = 24;
            carte.vente[0] = 12;
            carte.vente[9] = 12;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand tue une Créature : Donne 5 Mort en réserve.";
            }
            carte.effet_tuer = function (defenseur) {
                Jeu[carte.camp].ressources[9].reserve += 5;
            }
            break;
        case 538:
            carte.nom = "Mâchoire de mort";
            define_creature(carte);
            carte.familles.push("Ogre");
            carte.cout[0] = 37;
            carte.cout[9] = 37;
            carte.vente[0] = 19;
            carte.vente[9] = 18;
            carte.attaque = 30;
            carte.vie_max = carte.vie = 30;
            carte.charge = true;
            carte.texte = function () {
                return "Quand tue une Créature : Se donne 5 attaque et 5 vie.";
            }
            carte.effet_tuer = function (defenseur) {
                carte.attaque += 5;
                carte.vie += 5;
                carte.vie_max += 5;
            }
            break;
        case 539:
            carte.nom = "Dragon cornu";
            define_creature(carte);
            carte.familles.push("Reptile", "Dragon");
            carte.cout[0] = 26;
            carte.cout[1] = 13;
            carte.cout[5] = 13;
            carte.vente[0] = 14;
            carte.vente[1] = 6;
            carte.vente[5] = 6;
            carte.attaque = 30;
            carte.vie_max = carte.vie = 20;
            carte.charge = true;
            break;
        case 540:
            carte.nom = "Serpent dévoreur";
            define_creature(carte);
            carte.familles.push("Poisson", "Serpent de mer");
            carte.cout[0] = 40;
            carte.cout[2] = 39;
            carte.vente[0] = 20;
            carte.vente[2] = 19;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand posé : Bannis une Créature alliée dans la boutique et se donne autant d'attaque et de vie que l'attaque et la vie de la Créature bannie.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    switch (step) {
                        case 1:
                            let verifier = false;
                            for (let n = 0; n < Jeu.joueur.boutique.length; n++) {
                                if (Jeu.joueur.boutique[n].type == "Créature") {
                                    verifier = true;
                                }
                            }
                            if (verifier && !statistique(carte, "silence")) {
                                let texte = "";
                                texte += "<button onclick='javascript:fermer_choix()'>Annuler</button>";
                                texte += "<br/><br/>";
                                texte += carte.nom;
                                texte += "<br/>";
                                texte += carte.texte();
                                texte += "<br/><br/>";
                                texte += "Choisissez une carte dans la boutique : ";
                                texte += "<br/><br/>";
                                texte += "<div class='zone' style='width:48%;'>";
                                texte += "<u>Boutique :</u>";
                                texte += "<br/>";
                                for (let n = 0; n < Jeu.joueur.boutique.length; n++) {
                                    texte += "<div class='carte'>";
                                    texte += "<div>";
                                    texte += afficher_carte("joueur", "boutique", n, "carte_side");
                                    texte += "</div>";
                                    if (Jeu.joueur.boutique[n].type == "Créature") {
                                        texte += "<div>";
                                        texte += "<button onclick='javascript:Jeu.joueur.main[" + carte.slot + "].effet_pose(2," + n + ")'>Cibler</button>";
                                        texte += "</div>";
                                    }
                                    texte += "</div>";
                                }
                                texte += "</div>";
                                texte += "</div>";
                                afficher_choix(texte);
                            }
                            else {
                                deplacer(carte, "joueur", "terrain");
                                effet_pose(carte);
                                actualiser_zone();
                            }
                            break;
                        case 2:
                            carte.attaque += Jeu.joueur.boutique[cible].attaque;
                            carte.vie += Jeu.joueur.boutique[cible].vie_max;
                            carte.vie_max += Jeu.joueur.boutique[cible].vie_max;
                            enlever(Jeu.joueur.boutique[cible]);
                            deplacer(carte, "joueur", "terrain");
                            effet_pose(carte);
                            actualiser_zone();
                            break;
                    }
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 541:
            carte.nom = "Serpent de mer agité";
            define_creature(carte);
            carte.familles.push("Poisson", "Serpent de mer");
            carte.cout[0] = 40;
            carte.cout[2] = 39;
            carte.vente[0] = 20;
            carte.vente[2] = 19;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Quand posé : Bannis toutes les Créatures alliées dans la boutique et se donne 1 attaque et 1 vie pour chaque Créature bannie.";
            }
            carte.effet_pose = function (step, cible) {
                if (carte.camp == "joueur") {
                    if (!statistique(carte, "silence")) {
                        let array = [];
                        for (let n = 0; n < Jeu.joueur.boutique.length; n++) {
                            array.push(Jeu.joueur.boutique[n]);
                        }
                        for (let n = 0; n < array.length; n++) {
                            if (array[n].type == "Créature") {
                                carte.attaque++;
                                carte.vie++;
                                carte.vie_max++;
                                enlever(array[n]);
                            }
                        }
                    }
                    deplacer(carte, "joueur", "terrain");
                    effet_pose(carte);
                    actualiser_zone();
                    return true;
                }
                else {
                    deplacer(carte, "adverse", "terrain");
                    effet_pose(carte);
                    return true;
                }
            }
            break;
        case 542:
            carte.nom = "Serpent de mer affamé";
            define_creature(carte);
            carte.familles.push("Poisson", "Serpent de mer");
            carte.cout[0] = 20;
            carte.cout[2] = 19;
            carte.vente[0] = 10;
            carte.vente[2] = 9;
            carte.attaque = 20;
            carte.vie_max = carte.vie = 20;
            carte.texte = function () {
                return "Au début de la phase de préparation : Bannis une carte dans la boutique et se soigne de 2 tant que cette carte est blessée.";
            }
            carte.effet_etage_debut = function (step, cible) {
                if (carte.camp == "joueur") {
                    while (Jeu.joueur.boutique.length > 0 && carte.vie < carte.vie_max) {
                        enlever(Jeu.joueur.boutique[0]);
                        soin(carte, 2);
                    }
                }
            }
            break;
        case 543:
            carte.nom = "Garde squelette";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Squelette");
            carte.cout[0] = 6;
            carte.cout[9] = 5;
            carte.vente[0] = 3;
            carte.vente[9] = 2;
            carte.attaque = 5;
            carte.defense = 2;
            carte.vie_max = carte.vie = 1;
            carte.vie_sup = 4;
            break;
        case 544:
            carte.nom = "Chevalier squelette";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Squelette");
            carte.cout[0] = 8;
            carte.cout[9] = 8;
            carte.vente[0] = 4;
            carte.vente[9] = 4;
            carte.attaque = 10;
            carte.vie = carte.vie_max = 1;
            carte.rapidite = true;
            carte.texte = function () {
                return "Quand meurt : Se transforme en " + effet_carte_voir_id(13, carte) + ".";
            }
            carte.effet_mort = function () {
                if (!statistique(carte, "silence")) {
                    carte.nom = "Squelette";
                    carte.cout[0] -= 6;
                    carte.cout[9] -= 7;
                    carte.vente[0] -= 3;
                    carte.vente[9] -= 4;
                    carte.attaque -= 7;
                    carte.vie = carte.vie_max;
                    carte.rapidite = false;
                    carte.texte = function () {
                        return "Aucun";
                    };
                    carte.effet_mort = function () {
                        if (statistique(carte, "ephemere") && !statistique(carte, "silence")) {
                            enlever(carte);
                        }
                        else {
                            deplacer(carte, carte.camp, "defausse");
                        }
                    };
                    carte.description = obtenir_carte(13).description;
                }
                else {
                    if (statistique(carte, "ephemere") && !statistique(carte, "silence")) {
                        enlever(carte);
                    }
                    else {
                        deplacer(carte, carte.camp, "defausse");
                    }
                }
            }
            break;
        case 545:
            carte.nom = "Nécromage";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Revenant", "Mage");
            carte.cout[0] = 33;
            carte.cout[9] = 32;
            carte.vente[0] = 16;
            carte.vente[9] = 16;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 10;
            carte.sorcellerie = 5;
            carte.texte = function () {
                return "Quand joue : Crée " + effet_carte_voir_id(205, carte) + " sur le terrain.";
            }
            carte.effet_action = function () {
                let nouvelle_carte = obtenir_carte(205);
                nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                ajouter(nouvelle_carte, carte.camp, "terrain");
            }
            break;
        case 546:
            carte.nom = "Roi squelette";
            define_creature(carte);
            carte.familles.push("Mort-vivant", "Squelette");
            carte.cout[0] = 28;
            carte.cout[9] = 27;
            carte.vente[0] = 14;
            carte.vente[9] = 13;
            carte.attaque = 10;
            carte.vie_max = carte.vie = 1;
            carte.texte = function () {
                return "Quand posé : Crée 2 " + effet_carte_voir_id(13, carte) + " sur le terrain. Donne 5 attaque à toutes les Créatures Squelette alliées sur le terrain.";
            }
            carte.effet_pose = function () {
                if (!statistique(carte, "silence")) {
                    for (let n = 0; n < 2; n++) {
                        let nouvelle_carte = obtenir_carte(13);
                        nouvelle_carte.vente = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                        ajouter(nouvelle_carte, carte.camp, "terrain");
                    }
                    for (let n = 0; n < Jeu[carte.camp].terrain.length; n++) {
                        if (Jeu[carte.camp].terrain[n].type == "Créature" && Jeu[carte.camp].terrain[n].familles.includes("Squelette")) {
                            Jeu[carte.camp].terrain[n].attaque += 5;
                        }
                    }
                }
                deplacer(carte, carte.camp, "terrain");
                effet_pose(carte);
                actualiser_zone();
                return true;
            }
            break;
    }
    for (let n = 1; n < carte.cout.length; n++) {
        if (carte.cout[n] > 0) {
            carte.elements.push(Jeu.ressources[n].nom);
        }
    }
    return carte;
}